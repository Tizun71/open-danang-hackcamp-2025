{
  "id": "809302cf7560fa7898ace0594be3ba7a",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.26",
  "solcLongVersion": "0.8.26+commit.8a97fa7a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/LendingBorrowing.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract LendingBorrowing is Ownable {\r\n    // TODO: Define Loan struct in the following format:\r\n    // - amount: The amount of the loan\r\n    // - collateral: The amount of collateral deposited\r\n    // - isActive: Whether the loan is active\r\n    struct Loan{\r\n        uint256 amount;\r\n        uint256 collateral;\r\n        bool isActive;\r\n    }\r\n\r\n    // TODO: Define state variables in the following format:\r\n    // - collateralToken: The address of the collateral token\r\n    // - lendingToken: The address of the lending token\r\n    // - collateralFactor: The collateral factor\r\n    // - collateralBalances: A mapping of user addresses to their collateral balances\r\n    // - loans: A mapping of user addresses to their loans\r\n    address public collateralToken;\r\n    address public lendingToken;\r\n    uint256 public collateralFactor;\r\n    mapping(address => uint256) public collateralBalances;\r\n    mapping(address => Loan) public loans;\r\n\r\n\r\n    // TODO: Define events in the following format:\r\n    // - CollateralDeposited: Emitted when a user deposits collateral\r\n    // - CollateralWithdrawn: Emitted when a user withdraws collateral\r\n    // - LoanTaken: Emitted when a user takes a loan\r\n    // - LoanRepaid: Emitted when a user repays a loan\r\n    event CollateralDeposited(address indexed user, uint256 amount);\r\n    event CollateralWithdrawn(address indexed user, uint256 amount);\r\n    event LoanTaken(address indexed user, uint256 amount);\r\n    event LoanRepaid(address indexed user, uint256 amount);\r\n\r\n    constructor(IERC20 _collateralToken, IERC20 _lendingToken, uint256 _collateralFactor) Ownable(msg.sender) {\r\n        // TODO: Implement constructor logic\r\n        require(_collateralFactor <= 100, \"Collatereal Factor must be <= 100\");\r\n        collateralToken = address(_collateralToken);\r\n        lendingToken = address(_lendingToken);\r\n        collateralFactor = _collateralFactor;\r\n    }\r\n\r\n    function setCollateralFactor(uint256 _newFactor) external onlyOwner {\r\n        // TODO: Implement setCollateralFactor logic\r\n        require(_newFactor <= 100, \"Collatereal Factor must be <= 100\");\r\n        collateralFactor = _newFactor;\r\n    }\r\n\r\n    function depositCollateral(uint256 _amount) external {\r\n        // TODO: Implement depositCollateral logic\r\n        require(_amount > 0, \"Amount must be > 0\");\r\n        collateralBalances[msg.sender] += _amount;\r\n        IERC20(collateralToken).transferFrom(msg.sender, address(this), _amount);\r\n        emit CollateralDeposited(msg.sender, _amount);\r\n    }\r\n\r\n    function withdrawCollateral(uint256 _amount) external {\r\n        // TODO: Implement withdrawCollateral logic\r\n        require(_amount > 0, \"Amount must be > 0\");\r\n        require(collateralBalances[msg.sender] >= _amount, \"Insufficient collateral\");\r\n        uint256 withdrawLimit = collateralBalances[msg.sender] - _loanRequiredCollateral(msg.sender);\r\n        require(_amount <= withdrawLimit, \"Cant withdraw collateral\");\r\n        collateralBalances[msg.sender] -= _amount;\r\n        IERC20(collateralToken).transfer(msg.sender, _amount);\r\n        emit CollateralWithdrawn(msg.sender, _amount);\r\n    }\r\n\r\n    function takeLoan(uint256 _amount) external {\r\n        // TODO: Implement takeLoan logic\r\n        require(_amount > 0, \"Amount must be greater than zero\");\r\n        require(loans[msg.sender].isActive == false, \"Existing loan must be repaid first\");\r\n        uint256 maxLoan = (collateralBalances[msg.sender] * collateralFactor) / 100;\r\n        require(_amount <= maxLoan, \"Loan exceeds collateral limit\");\r\n        loans[msg.sender] = Loan({\r\n            amount: _amount,\r\n            collateral: collateralBalances[msg.sender],\r\n            isActive: true\r\n        });\r\n        IERC20(lendingToken).transfer(msg.sender, _amount);\r\n        emit LoanTaken(msg.sender, _amount);\r\n    }\r\n\r\n    function repayLoan(uint256 _amount) external {\r\n        // TODO: Implement repayLoan logic\r\n        require(_amount > 0, \"Amount must be greater than zero\");\r\n        Loan storage userLoan = loans[msg.sender];\r\n        require(userLoan.isActive, \"No active loan\");\r\n        require(_amount <= userLoan.amount, \"Repay amount exceeds loan\");\r\n        IERC20(lendingToken).transferFrom(msg.sender, address(this), _amount);\r\n        userLoan.amount -= _amount;\r\n        if (userLoan.amount == 0) {\r\n            userLoan.isActive = false;\r\n        }\r\n        emit LoanRepaid(msg.sender, _amount);\r\n    }\r\n\r\n    function _loanRequiredCollateral(address _user) internal view returns (uint256) {\r\n        // TODO: Implement _loanRequiredCollateral logic\r\n        Loan memory userLoan = loans[_user];\r\n        if (!userLoan.isActive) return 0;\r\n        return (userLoan.amount * 100) / collateralFactor;\r\n    }\r\n\r\n    function getLoanDetails(address _user) external view returns (uint256 amount, uint256 collateral, bool isActive) {\r\n        // TODO: Implement getLoanDetails logic\r\n        Loan memory userLoan = loans[_user];\r\n        return (userLoan.amount, userLoan.collateral, userLoan.isActive);\r\n    }\r\n}\r\n"
      },
      "contracts/MyToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MockERC20 is ERC20, Ownable(msg.sender) {\r\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}\r\n\r\n    function mint(address to, uint256 amount) external onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "parameters": "z"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/LendingBorrowing.sol\n",
        "message": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n",
        "severity": "warning",
        "sourceLocation": {
          "file": "6",
          "start": 3191,
          "end": 3244
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": null,
        "formattedMessage": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/LendingBorrowing.sol\n",
        "message": "\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n",
        "severity": "warning",
        "sourceLocation": {
          "file": "6",
          "start": 3895,
          "end": 3945
        },
        "type": "Warning"
      }
    ],
    "version": "0.8.26",
    "long_version": "0.8.26+commit.8a97fa7a.Emscripten.clang",
    "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 934,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                933
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "id": 1,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              284
            ],
            "IERC20Errors": [
              189
            ],
            "IERC721Errors": [
              237
            ]
          },
          "id": 285,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:1",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 189,
              "linearizedBaseContracts": [
                189
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 159,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "654:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "670:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "687:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:1"
                  },
                  "src": "623:80:1"
                },
                {
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 164,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "891:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:1"
                  },
                  "src": "866:41:1"
                },
                {
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 169,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "1104:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:1"
                  },
                  "src": "1077:45:1"
                },
                {
                  "documentation": {
                    "id": 170,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:1",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 178,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1511:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1528:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 178,
                        "src": "1547:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:1"
                  },
                  "src": "1478:85:1"
                },
                {
                  "documentation": {
                    "id": 179,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 183,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 181,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 183,
                        "src": "1775:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:1"
                  },
                  "src": "1748:45:1"
                },
                {
                  "documentation": {
                    "id": 184,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:1",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 188,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 186,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "2025:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:1"
                  },
                  "src": "1999:43:1"
                }
              ],
              "scope": 285,
              "src": "280:1764:1",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 190,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:1",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 237,
              "linearizedBaseContracts": [
                237
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 191,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:1",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 195,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 194,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 193,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 195,
                        "src": "2469:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 192,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:1"
                  },
                  "src": "2444:40:1"
                },
                {
                  "documentation": {
                    "id": 196,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:1",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 200,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 200,
                        "src": "2656:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:1"
                  },
                  "src": "2627:46:1"
                },
                {
                  "documentation": {
                    "id": 201,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:1",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 209,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3000:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3016:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 209,
                        "src": "3033:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:1"
                  },
                  "src": "2973:75:1"
                },
                {
                  "documentation": {
                    "id": 210,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 214,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 212,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 214,
                        "src": "3237:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 211,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:1"
                  },
                  "src": "3211:42:1"
                },
                {
                  "documentation": {
                    "id": 215,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 219,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "3451:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:1"
                  },
                  "src": "3423:46:1"
                },
                {
                  "documentation": {
                    "id": 220,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 226,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3760:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 224,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "3778:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:1"
                  },
                  "src": "3727:68:1"
                },
                {
                  "documentation": {
                    "id": 227,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 231,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 230,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 229,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 231,
                        "src": "4008:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 228,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:1"
                  },
                  "src": "3980:46:1"
                },
                {
                  "documentation": {
                    "id": 232,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 236,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 234,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "4262:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 233,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:1"
                  },
                  "src": "4234:46:1"
                }
              ],
              "scope": 285,
              "src": "2190:2092:1",
              "usedErrors": [
                195,
                200,
                209,
                214,
                219,
                226,
                231,
                236
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 238,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:1",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 284,
              "linearizedBaseContracts": [
                284
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:1",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 249,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4860:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4876:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4893:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 249,
                        "src": "4909:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:1"
                  },
                  "src": "4827:99:1"
                },
                {
                  "documentation": {
                    "id": 250,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:1",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 254,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "5116:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:1"
                  },
                  "src": "5089:43:1"
                },
                {
                  "documentation": {
                    "id": 255,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:1",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 259,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 259,
                        "src": "5331:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:1"
                  },
                  "src": "5302:47:1"
                },
                {
                  "documentation": {
                    "id": 260,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:1",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 266,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5651:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 266,
                        "src": "5669:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:1"
                  },
                  "src": "5616:68:1"
                },
                {
                  "documentation": {
                    "id": 267,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:1",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 271,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 271,
                        "src": "5898:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:1"
                  },
                  "src": "5869:47:1"
                },
                {
                  "documentation": {
                    "id": 272,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:1",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 276,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 275,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "6153:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:1"
                  },
                  "src": "6124:47:1"
                },
                {
                  "documentation": {
                    "id": 277,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:1",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 283,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 279,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6494:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 278,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "6513:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:1"
                  },
                  "src": "6462:73:1"
                }
              ],
              "scope": 285,
              "src": "4430:2107:1",
              "usedErrors": [
                249,
                254,
                259,
                266,
                271,
                276,
                283
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:1"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "id": 2,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              903
            ]
          },
          "id": 800,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 286,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 288,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 878,
              "src": "131:36:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 287,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "139:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 290,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 904,
              "src": "168:63:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 289,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 903,
                    "src": "176:14:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 292,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 934,
              "src": "232:48:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 291,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 933,
                    "src": "240:7:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 294,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 800,
              "sourceUnit": 285,
              "src": "281:65:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 293,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 189,
                    "src": "289:12:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 296,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 933,
                    "src": "1133:7:2"
                  },
                  "id": 297,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:2"
                },
                {
                  "baseName": {
                    "id": 298,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "1142:6:2"
                  },
                  "id": 299,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:2"
                },
                {
                  "baseName": {
                    "id": 300,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 903,
                    "src": "1150:14:2"
                  },
                  "id": 301,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:2"
                },
                {
                  "baseName": {
                    "id": 302,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 189,
                    "src": "1166:12:2"
                  },
                  "id": 303,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:2"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 295,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:2",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 799,
              "linearizedBaseContracts": [
                799,
                189,
                903,
                877,
                933
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1185:53:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 306,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:2",
                    "keyType": {
                      "id": 304,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 305,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1245:83:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 312,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:2",
                    "keyType": {
                      "id": 308,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 311,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:2",
                      "keyType": {
                        "id": 309,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 310,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 315,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1335:28:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 317,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1370:20:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 316,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 319,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "1396:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 318,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 335,
                    "nodeType": "Block",
                    "src": "1638:57:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 327,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "1648:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 328,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "1656:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:2"
                      },
                      {
                        "expression": {
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 331,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "1671:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 332,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 324,
                            "src": "1681:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 334,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 320,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:2",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 336,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 322,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1594:19:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 336,
                        "src": "1615:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:2"
                  },
                  "returnParameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:2"
                  },
                  "scope": 799,
                  "src": "1582:113:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    890
                  ],
                  "body": {
                    "id": 344,
                    "nodeType": "Block",
                    "src": "1820:29:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 342,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 317,
                          "src": "1837:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 341,
                        "id": 343,
                        "nodeType": "Return",
                        "src": "1830:12:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 337,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:2",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 345,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:2"
                  },
                  "returnParameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1805:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:2"
                  },
                  "scope": 799,
                  "src": "1760:89:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    896
                  ],
                  "body": {
                    "id": 353,
                    "nodeType": "Block",
                    "src": "2024:31:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 351,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 319,
                          "src": "2041:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 350,
                        "id": 352,
                        "nodeType": "Return",
                        "src": "2034:14:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:2",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 354,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:2"
                  },
                  "returnParameters": {
                    "id": 350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 354,
                        "src": "2009:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:2"
                  },
                  "scope": 799,
                  "src": "1962:93:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    902
                  ],
                  "body": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "2744:26:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 359,
                        "id": 361,
                        "nodeType": "Return",
                        "src": "2754:9:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 355,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:2",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 363,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 356,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:2"
                  },
                  "returnParameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 363,
                        "src": "2737:5:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:2"
                  },
                  "scope": 799,
                  "src": "2688:82:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    826
                  ],
                  "body": {
                    "id": 371,
                    "nodeType": "Block",
                    "src": "2891:36:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 369,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "2908:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 368,
                        "id": 370,
                        "nodeType": "Return",
                        "src": "2901:19:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 364,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:2",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 372,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 365,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:2"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 367,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 372,
                        "src": "2882:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 366,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:2"
                  },
                  "scope": 799,
                  "src": "2830:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    834
                  ],
                  "body": {
                    "id": 384,
                    "nodeType": "Block",
                    "src": "3059:42:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 380,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "3076:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 382,
                          "indexExpression": {
                            "id": 381,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "3086:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 379,
                        "id": 383,
                        "nodeType": "Return",
                        "src": "3069:25:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 373,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:2",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 385,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "3004:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:2"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 385,
                        "src": "3050:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:2"
                  },
                  "scope": 799,
                  "src": "2985:116:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    844
                  ],
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "3371:103:2",
                    "statements": [
                      {
                        "assignments": [
                          396
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 396,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 408,
                            "src": "3381:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 395,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 399,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 397,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "3397:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 401,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "3429:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 402,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "3436:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 403,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 390,
                              "src": "3440:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 400,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "3419:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 405,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 394,
                        "id": 407,
                        "nodeType": "Return",
                        "src": "3456:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 386,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:2",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3314:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3326:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:2"
                  },
                  "returnParameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "3365:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:2"
                  },
                  "scope": 799,
                  "src": "3296:178:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    854
                  ],
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "3621:51:2",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 419,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "3638:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 421,
                            "indexExpression": {
                              "id": 420,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "3650:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 423,
                          "indexExpression": {
                            "id": 422,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "3657:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 418,
                        "id": 424,
                        "nodeType": "Return",
                        "src": "3631:34:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:2",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3551:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3566:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:2"
                  },
                  "returnParameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "3612:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:2"
                  },
                  "scope": 799,
                  "src": "3532:140:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    864
                  ],
                  "body": {
                    "id": 449,
                    "nodeType": "Block",
                    "src": "4058:107:2",
                    "statements": [
                      {
                        "assignments": [
                          437
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 437,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 449,
                            "src": "4068:13:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 436,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 440,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 438,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "4084:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 442,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "4115:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 443,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 429,
                              "src": "4122:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 444,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 431,
                              "src": "4131:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 441,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 690,
                            "src": "4106:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 435,
                        "id": 448,
                        "nodeType": "Return",
                        "src": "4147:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:2",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 450,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3996:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "4013:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:2"
                  },
                  "returnParameters": {
                    "id": 435,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "4052:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:2"
                  },
                  "scope": 799,
                  "src": "3979:186:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    876
                  ],
                  "body": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "4850:151:2",
                    "statements": [
                      {
                        "assignments": [
                          463
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 463,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "4860:15:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:2",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 466,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 464,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "4878:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 468,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "4916:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 469,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "4922:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 470,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4931:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 467,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "4900:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 472,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 474,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 453,
                              "src": "4957:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 475,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "4963:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 476,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 457,
                              "src": "4967:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 473,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 529,
                            "src": "4947:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 478,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:2"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 461,
                        "id": 480,
                        "nodeType": "Return",
                        "src": "4983:11:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:2",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 482,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 458,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4779:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4793:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4805:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:2"
                  },
                  "returnParameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "4844:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:2"
                  },
                  "scope": 799,
                  "src": "4757:244:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "5443:231:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 492,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 485,
                            "src": "5457:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 493,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 506,
                        "nodeType": "IfStatement",
                        "src": "5453:86:2",
                        "trueBody": {
                          "id": 505,
                          "nodeType": "Block",
                          "src": "5477:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 501,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 500,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 499,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 502,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 498,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "5498:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 504,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 507,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "5552:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 508,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 521,
                        "nodeType": "IfStatement",
                        "src": "5548:86:2",
                        "trueBody": {
                          "id": 520,
                          "nodeType": "Block",
                          "src": "5570:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 516,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 515,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 514,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 517,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 513,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "5591:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 519,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 523,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 485,
                              "src": "5651:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 524,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "5657:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 525,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "5661:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 522,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "5643:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 483,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:2",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 490,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5393:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5407:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "5419:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:2"
                  },
                  "returnParameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:2"
                  },
                  "scope": 799,
                  "src": "5374:300:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 605,
                    "nodeType": "Block",
                    "src": "6064:1032:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 539,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "6078:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 540,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 576,
                          "nodeType": "Block",
                          "src": "6252:362:2",
                          "statements": [
                            {
                              "assignments": [
                                551
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 551,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 576,
                                  "src": "6266:19:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 550,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 555,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 552,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 307,
                                  "src": "6288:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 554,
                                "indexExpression": {
                                  "id": 553,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 532,
                                  "src": "6298:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 556,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 551,
                                  "src": "6321:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 557,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6335:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 566,
                              "nodeType": "IfStatement",
                              "src": "6317:115:2",
                              "trueBody": {
                                "id": 565,
                                "nodeType": "Block",
                                "src": "6342:90:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 560,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 532,
                                          "src": "6392:4:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 561,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 551,
                                          "src": "6398:11:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 562,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 536,
                                          "src": "6411:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 559,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "6367:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 563,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 564,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 575,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 567,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "6552:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 569,
                                      "indexExpression": {
                                        "id": 568,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 532,
                                        "src": "6562:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 572,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 570,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 551,
                                        "src": "6570:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 571,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 536,
                                        "src": "6584:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 574,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 577,
                        "nodeType": "IfStatement",
                        "src": "6074:540:2",
                        "trueBody": {
                          "id": 549,
                          "nodeType": "Block",
                          "src": "6098:148:2",
                          "statements": [
                            {
                              "expression": {
                                "id": 547,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 545,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 315,
                                  "src": "6214:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 546,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "6230:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 548,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 578,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "6628:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 581,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 579,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 597,
                          "nodeType": "Block",
                          "src": "6843:206:2",
                          "statements": [
                            {
                              "id": 596,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 594,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 590,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 307,
                                        "src": "7002:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 592,
                                      "indexExpression": {
                                        "id": 591,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 534,
                                        "src": "7012:2:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 593,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "7019:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 595,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:2"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 598,
                        "nodeType": "IfStatement",
                        "src": "6624:425:2",
                        "trueBody": {
                          "id": 589,
                          "nodeType": "Block",
                          "src": "6646:191:2",
                          "statements": [
                            {
                              "id": 588,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:2",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 586,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 584,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 315,
                                      "src": "6791:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 585,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 536,
                                      "src": "6807:5:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 587,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:2"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 600,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "7073:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 601,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "7079:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 602,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "7083:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 599,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 811,
                            "src": "7064:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 604,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 530,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:2",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 606,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "6006:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 534,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "6020:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "6032:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:2"
                  },
                  "returnParameters": {
                    "id": 538,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:2"
                  },
                  "scope": 799,
                  "src": "5989:1107:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 638,
                    "nodeType": "Block",
                    "src": "7495:152:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 614,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 609,
                            "src": "7509:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 615,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 628,
                        "nodeType": "IfStatement",
                        "src": "7505:91:2",
                        "trueBody": {
                          "id": 627,
                          "nodeType": "Block",
                          "src": "7532:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 623,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 622,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 621,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 624,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 620,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 169,
                                  "src": "7553:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 625,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 626,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 630,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 634,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "7625:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 635,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 611,
                              "src": "7634:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 629,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "7605:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 637,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 607,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:2",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 639,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7454:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "7471:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:2"
                  },
                  "returnParameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:2"
                  },
                  "scope": 799,
                  "src": "7439:208:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 671,
                    "nodeType": "Block",
                    "src": "8021:150:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 647,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 642,
                            "src": "8035:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 648,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 661,
                        "nodeType": "IfStatement",
                        "src": "8031:89:2",
                        "trueBody": {
                          "id": 660,
                          "nodeType": "Block",
                          "src": "8058:62:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 656,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 655,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 654,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 657,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 653,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 164,
                                  "src": "8079:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 659,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 663,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 642,
                              "src": "8137:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 666,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 665,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 664,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:2",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 668,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 644,
                              "src": "8158:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 662,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "8129:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 670,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 640,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:2",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 672,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 642,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "7980:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 644,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "7997:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:2"
                  },
                  "returnParameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:2"
                  },
                  "scope": 799,
                  "src": "7965:206:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 689,
                    "nodeType": "Block",
                    "src": "8781:54:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 683,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 675,
                              "src": "8800:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 684,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 677,
                              "src": "8807:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 685,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 679,
                              "src": "8816:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 682,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              690,
                              750
                            ],
                            "referencedDeclaration": 750,
                            "src": "8791:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 688,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:2"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 673,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:2",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 690,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 675,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8725:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8740:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 679,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 690,
                        "src": "8757:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 678,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:2"
                  },
                  "returnParameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:2"
                  },
                  "scope": 799,
                  "src": "8707:128:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 749,
                    "nodeType": "Block",
                    "src": "9780:334:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 702,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "9794:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 703,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 716,
                        "nodeType": "IfStatement",
                        "src": "9790:89:2",
                        "trueBody": {
                          "id": 715,
                          "nodeType": "Block",
                          "src": "9815:64:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 710,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 709,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 708,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 183,
                                  "src": "9836:20:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 714,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:2"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 717,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "9892:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 718,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 731,
                        "nodeType": "IfStatement",
                        "src": "9888:90:2",
                        "trueBody": {
                          "id": 730,
                          "nodeType": "Block",
                          "src": "9915:63:2",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 726,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 725,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 724,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 723,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "9936:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 729,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:2"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 732,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 313,
                                "src": "9987:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 735,
                              "indexExpression": {
                                "id": 733,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "9999:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 736,
                            "indexExpression": {
                              "id": 734,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 695,
                              "src": "10006:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 737,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 697,
                            "src": "10017:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 739,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:2"
                      },
                      {
                        "condition": {
                          "id": 740,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 699,
                          "src": "10036:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 748,
                        "nodeType": "IfStatement",
                        "src": "10032:76:2",
                        "trueBody": {
                          "id": 747,
                          "nodeType": "Block",
                          "src": "10047:61:2",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 742,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "10075:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 743,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 695,
                                    "src": "10082:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 744,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 697,
                                    "src": "10091:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 741,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "10066:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 746,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 691,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:2",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 750,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 693,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9700:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 692,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 695,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9715:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 694,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9732:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 696,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 750,
                        "src": "9747:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:2"
                  },
                  "returnParameters": {
                    "id": 701,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:2"
                  },
                  "scope": 799,
                  "src": "9682:432:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 797,
                    "nodeType": "Block",
                    "src": "10485:387:2",
                    "statements": [
                      {
                        "assignments": [
                          761
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 761,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 797,
                            "src": "10495:24:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 760,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 766,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 763,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 753,
                              "src": "10532:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 764,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "10539:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 762,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "10522:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:2"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 767,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "10561:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 770,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 769,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:2",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 768,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967269,
                                "src": "10580:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:2",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 796,
                        "nodeType": "IfStatement",
                        "src": "10557:309:2",
                        "trueBody": {
                          "id": 795,
                          "nodeType": "Block",
                          "src": "10599:267:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 774,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 761,
                                  "src": "10617:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 775,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 757,
                                  "src": "10636:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 784,
                              "nodeType": "IfStatement",
                              "src": "10613:130:2",
                              "trueBody": {
                                "id": 783,
                                "nodeType": "Block",
                                "src": "10643:100:2",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 778,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 755,
                                          "src": "10695:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 779,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10704:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 780,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "10722:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 777,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 178,
                                        "src": "10668:26:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 781,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 782,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:2"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 794,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:2",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 786,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 753,
                                        "src": "10793:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 787,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 755,
                                        "src": "10800:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 790,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 788,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 761,
                                          "src": "10809:16:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 789,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 757,
                                          "src": "10828:5:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 791,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 785,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        690,
                                        750
                                      ],
                                      "referencedDeclaration": 750,
                                      "src": "10784:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 793,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:2"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 751,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:2",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 798,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 753,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10421:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 755,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10436:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "10453:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:2"
                  },
                  "returnParameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:2"
                  },
                  "scope": 799,
                  "src": "10396:476:2",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 800,
              "src": "1106:9768:2",
              "usedErrors": [
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "105:10770:2"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "id": 3,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ]
          },
          "id": 878,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 801,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 802,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:3",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 877,
              "linearizedBaseContracts": [
                877
              ],
              "name": "IERC20",
              "nameLocation": "214:6:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 803,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:3",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 811,
                  "name": "Transfer",
                  "nameLocation": "396:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 805,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "405:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 804,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 807,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "427:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 806,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 809,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 811,
                        "src": "447:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:3"
                  },
                  "src": "390:72:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 812,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:3",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 820,
                  "name": "Approval",
                  "nameLocation": "627:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 814,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "636:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 813,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 816,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "659:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 815,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 818,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 820,
                        "src": "684:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:3"
                  },
                  "src": "621:78:3"
                },
                {
                  "documentation": {
                    "id": 821,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:3",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 826,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 822,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:3"
                  },
                  "returnParameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 824,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 826,
                        "src": "821:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 823,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:3"
                  },
                  "scope": 877,
                  "src": "775:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 827,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:3",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 834,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 829,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "931:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 828,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:3"
                  },
                  "returnParameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 834,
                        "src": "971:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:3"
                  },
                  "scope": 877,
                  "src": "912:68:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 835,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:3",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 844,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 837,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1222:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 836,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1234:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:3"
                  },
                  "returnParameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "1267:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:3"
                  },
                  "scope": 877,
                  "src": "1204:69:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 845,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:3",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 854,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 850,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1567:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 849,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1582:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 848,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:3"
                  },
                  "returnParameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "1622:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:3"
                  },
                  "scope": 877,
                  "src": "1548:83:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 855,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:3",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 864,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2326:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2343:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:3"
                  },
                  "returnParameters": {
                    "id": 863,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2376:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:3"
                  },
                  "scope": 877,
                  "src": "2309:73:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 865,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 876,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 872,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 867,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2712:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 866,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 869,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2726:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 868,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 871,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2738:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 870,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:3"
                  },
                  "returnParameters": {
                    "id": 875,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 876,
                        "src": "2771:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:3"
                  },
                  "scope": 877,
                  "src": "2690:87:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 878,
              "src": "204:2575:3",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "106:2674:3"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "id": 4,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              877
            ],
            "IERC20Metadata": [
              903
            ]
          },
          "id": 904,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 879,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 881,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 904,
              "sourceUnit": 878,
              "src": "151:37:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 880,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 877,
                    "src": "159:6:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 883,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 877,
                    "src": "306:6:4"
                  },
                  "id": 884,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:4"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 882,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:4",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 903,
              "linearizedBaseContracts": [
                903,
                877
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 885,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:4",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 890,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 886,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:4"
                  },
                  "returnParameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 888,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "417:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 887,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:4"
                  },
                  "scope": 903,
                  "src": "378:54:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 891,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:4",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 896,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 892,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:4"
                  },
                  "returnParameters": {
                    "id": 895,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 896,
                        "src": "540:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:4"
                  },
                  "scope": 903,
                  "src": "499:56:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 897,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:4",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 902,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:4"
                  },
                  "returnParameters": {
                    "id": 901,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 900,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "674:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 899,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:4"
                  },
                  "scope": 903,
                  "src": "631:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 904,
              "src": "278:405:4",
              "usedErrors": [],
              "usedEvents": [
                811,
                820
              ]
            }
          ],
          "src": "125:559:4"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "id": 5,
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              933
            ]
          },
          "id": 934,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 905,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 906,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:5",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 933,
              "linearizedBaseContracts": [
                933
              ],
              "name": "Context",
              "nameLocation": "642:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 914,
                    "nodeType": "Block",
                    "src": "718:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 911,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "735:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 910,
                        "id": 913,
                        "nodeType": "Return",
                        "src": "728:17:5"
                      }
                    ]
                  },
                  "id": 915,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 907,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:5"
                  },
                  "returnParameters": {
                    "id": 910,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 909,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 915,
                        "src": "709:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 908,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:5"
                  },
                  "scope": 933,
                  "src": "656:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 923,
                    "nodeType": "Block",
                    "src": "825:32:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 920,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "842:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:5",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 919,
                        "id": 922,
                        "nodeType": "Return",
                        "src": "835:15:5"
                      }
                    ]
                  },
                  "id": 924,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 916,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:5"
                  },
                  "returnParameters": {
                    "id": 919,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 918,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 924,
                        "src": "809:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 917,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:5"
                  },
                  "scope": 933,
                  "src": "758:99:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 931,
                    "nodeType": "Block",
                    "src": "935:25:5",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 928,
                        "id": 930,
                        "nodeType": "Return",
                        "src": "945:8:5"
                      }
                    ]
                  },
                  "id": 932,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 925,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:5"
                  },
                  "returnParameters": {
                    "id": 928,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 927,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 932,
                        "src": "926:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 926,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:5"
                  },
                  "scope": 933,
                  "src": "863:97:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 934,
              "src": "624:338:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:5"
        }
      },
      "contracts/LendingBorrowing.sol": {
        "id": 6,
        "ast": {
          "absolutePath": "contracts/LendingBorrowing.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "IERC20": [
              877
            ],
            "LendingBorrowing": [
              1349
            ],
            "Ownable": [
              147
            ]
          },
          "id": 1350,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 935,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 936,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1350,
              "sourceUnit": 878,
              "src": "59:56:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 937,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1350,
              "sourceUnit": 148,
              "src": "117:52:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 938,
                    "name": "Ownable",
                    "nameLocations": [
                      "202:7:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "202:7:6"
                  },
                  "id": 939,
                  "nodeType": "InheritanceSpecifier",
                  "src": "202:7:6"
                }
              ],
              "canonicalName": "LendingBorrowing",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1349,
              "linearizedBaseContracts": [
                1349,
                147,
                933
              ],
              "name": "LendingBorrowing",
              "nameLocation": "182:16:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "LendingBorrowing.Loan",
                  "id": 946,
                  "members": [
                    {
                      "constant": false,
                      "id": 941,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "450:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 946,
                      "src": "442:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 940,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "442:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 943,
                      "mutability": "mutable",
                      "name": "collateral",
                      "nameLocation": "475:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 946,
                      "src": "467:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 942,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "467:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 945,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "501:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 946,
                      "src": "496:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 944,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "496:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Loan",
                  "nameLocation": "427:4:6",
                  "nodeType": "StructDefinition",
                  "scope": 1349,
                  "src": "420:97:6",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b2016bd4",
                  "id": 948,
                  "mutability": "mutable",
                  "name": "collateralToken",
                  "nameLocation": "919:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1349,
                  "src": "904:30:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "904:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "aaaca558",
                  "id": 950,
                  "mutability": "mutable",
                  "name": "lendingToken",
                  "nameLocation": "956:12:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1349,
                  "src": "941:27:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "df011c41",
                  "id": 952,
                  "mutability": "mutable",
                  "name": "collateralFactor",
                  "nameLocation": "990:16:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1349,
                  "src": "975:31:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "975:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "29bc969d",
                  "id": 956,
                  "mutability": "mutable",
                  "name": "collateralBalances",
                  "nameLocation": "1048:18:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1349,
                  "src": "1013:53:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 955,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 953,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1021:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1013:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 954,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1032:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "73b4086b",
                  "id": 961,
                  "mutability": "mutable",
                  "name": "loans",
                  "nameLocation": "1105:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1349,
                  "src": "1073:37:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                    "typeString": "mapping(address => struct LendingBorrowing.Loan)"
                  },
                  "typeName": {
                    "id": 960,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 957,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1081:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1073:24:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                      "typeString": "mapping(address => struct LendingBorrowing.Loan)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 959,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 958,
                        "name": "Loan",
                        "nameLocations": [
                          "1092:4:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 946,
                        "src": "1092:4:6"
                      },
                      "referencedDeclaration": 946,
                      "src": "1092:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                        "typeString": "struct LendingBorrowing.Loan"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142",
                  "id": 967,
                  "name": "CollateralDeposited",
                  "nameLocation": "1433:19:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 966,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 963,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1469:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 967,
                        "src": "1453:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 962,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1453:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 965,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1483:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 967,
                        "src": "1475:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 964,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1475:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1452:38:6"
                  },
                  "src": "1427:64:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d",
                  "id": 973,
                  "name": "CollateralWithdrawn",
                  "nameLocation": "1503:19:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 972,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 969,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1539:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 973,
                        "src": "1523:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 968,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1523:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 971,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1553:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 973,
                        "src": "1545:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 970,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1545:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1522:38:6"
                  },
                  "src": "1497:64:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d5c776eab9418d89c040ffee59f2310d225f5ff682191bcee59b0413a7fd4835",
                  "id": 979,
                  "name": "LoanTaken",
                  "nameLocation": "1573:9:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 978,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 975,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1599:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 979,
                        "src": "1583:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 974,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 977,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1613:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 979,
                        "src": "1605:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 976,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1605:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1582:38:6"
                  },
                  "src": "1567:54:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c200a1f31dd659e356e0f112c82558e25f49f7b0f84438691cd96f5cb3558823",
                  "id": 985,
                  "name": "LoanRepaid",
                  "nameLocation": "1633:10:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 984,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 981,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1660:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 985,
                        "src": "1644:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 980,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1644:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 983,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1674:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 985,
                        "src": "1666:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 982,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1666:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1643:38:6"
                  },
                  "src": "1627:55:6"
                },
                {
                  "body": {
                    "id": 1025,
                    "nodeType": "Block",
                    "src": "1796:284:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1001,
                                "name": "_collateralFactor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 993,
                                "src": "1861:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 1002,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1882:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "1861:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6c6c6174657265616c20466163746f72206d757374206265203c3d20313030",
                              "id": 1004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1887:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_200845d97957fa90d0ddaa543bc04cea73ae7bf1183c9cf4e61ae6e31cc88ed4",
                                "typeString": "literal_string \"Collatereal Factor must be <= 100\""
                              },
                              "value": "Collatereal Factor must be <= 100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_200845d97957fa90d0ddaa543bc04cea73ae7bf1183c9cf4e61ae6e31cc88ed4",
                                "typeString": "literal_string \"Collatereal Factor must be <= 100\""
                              }
                            ],
                            "id": 1000,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1853:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1853:70:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1006,
                        "nodeType": "ExpressionStatement",
                        "src": "1853:70:6"
                      },
                      {
                        "expression": {
                          "id": 1012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1007,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 948,
                            "src": "1934:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1010,
                                "name": "_collateralToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 988,
                                "src": "1960:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$877",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$877",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1952:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1008,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1952:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1952:25:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1934:43:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1013,
                        "nodeType": "ExpressionStatement",
                        "src": "1934:43:6"
                      },
                      {
                        "expression": {
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1014,
                            "name": "lendingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 950,
                            "src": "1988:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1017,
                                "name": "_lendingToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 991,
                                "src": "2011:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$877",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$877",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 1016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2003:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1015,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2003:7:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2003:22:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1988:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1020,
                        "nodeType": "ExpressionStatement",
                        "src": "1988:37:6"
                      },
                      {
                        "expression": {
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1021,
                            "name": "collateralFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 952,
                            "src": "2036:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1022,
                            "name": "_collateralFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 993,
                            "src": "2055:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2036:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1024,
                        "nodeType": "ExpressionStatement",
                        "src": "2036:36:6"
                      }
                    ]
                  },
                  "id": 1026,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 996,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1784:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1788:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1784:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 998,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 995,
                        "name": "Ownable",
                        "nameLocations": [
                          "1776:7:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1776:7:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1776:19:6"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 994,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 988,
                        "mutability": "mutable",
                        "name": "_collateralToken",
                        "nameLocation": "1709:16:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "1702:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$877",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 987,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 986,
                            "name": "IERC20",
                            "nameLocations": [
                              "1702:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 877,
                            "src": "1702:6:6"
                          },
                          "referencedDeclaration": 877,
                          "src": "1702:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$877",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 991,
                        "mutability": "mutable",
                        "name": "_lendingToken",
                        "nameLocation": "1734:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "1727:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$877",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 990,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 989,
                            "name": "IERC20",
                            "nameLocations": [
                              "1727:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 877,
                            "src": "1727:6:6"
                          },
                          "referencedDeclaration": 877,
                          "src": "1727:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$877",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 993,
                        "mutability": "mutable",
                        "name": "_collateralFactor",
                        "nameLocation": "1757:17:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "1749:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 992,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1749:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1701:74:6"
                  },
                  "returnParameters": {
                    "id": 999,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1796:0:6"
                  },
                  "scope": 1349,
                  "src": "1690:390:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1044,
                    "nodeType": "Block",
                    "src": "2156:176:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1034,
                                "name": "_newFactor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1028,
                                "src": "2229:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "313030",
                                "id": 1035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2243:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "src": "2229:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "436f6c6c6174657265616c20466163746f72206d757374206265203c3d20313030",
                              "id": 1037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2248:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_200845d97957fa90d0ddaa543bc04cea73ae7bf1183c9cf4e61ae6e31cc88ed4",
                                "typeString": "literal_string \"Collatereal Factor must be <= 100\""
                              },
                              "value": "Collatereal Factor must be <= 100"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_200845d97957fa90d0ddaa543bc04cea73ae7bf1183c9cf4e61ae6e31cc88ed4",
                                "typeString": "literal_string \"Collatereal Factor must be <= 100\""
                              }
                            ],
                            "id": 1033,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2221:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2221:63:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1039,
                        "nodeType": "ExpressionStatement",
                        "src": "2221:63:6"
                      },
                      {
                        "expression": {
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1040,
                            "name": "collateralFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 952,
                            "src": "2295:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1041,
                            "name": "_newFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1028,
                            "src": "2314:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2295:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1043,
                        "nodeType": "ExpressionStatement",
                        "src": "2295:29:6"
                      }
                    ]
                  },
                  "functionSelector": "b5c22157",
                  "id": 1045,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1031,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1030,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2146:9:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2146:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2146:9:6"
                    }
                  ],
                  "name": "setCollateralFactor",
                  "nameLocation": "2097:19:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1029,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1028,
                        "mutability": "mutable",
                        "name": "_newFactor",
                        "nameLocation": "2125:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1045,
                        "src": "2117:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1027,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2117:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2116:20:6"
                  },
                  "returnParameters": {
                    "id": 1032,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2156:0:6"
                  },
                  "scope": 1349,
                  "src": "2088:244:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1083,
                    "nodeType": "Block",
                    "src": "2393:304:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1051,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1047,
                                "src": "2464:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1052,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2474:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2464:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d757374206265203e2030",
                              "id": 1054,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2477:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
                                "typeString": "literal_string \"Amount must be > 0\""
                              },
                              "value": "Amount must be > 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
                                "typeString": "literal_string \"Amount must be > 0\""
                              }
                            ],
                            "id": 1050,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2456:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2456:42:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1056,
                        "nodeType": "ExpressionStatement",
                        "src": "2456:42:6"
                      },
                      {
                        "expression": {
                          "id": 1062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1057,
                              "name": "collateralBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "2509:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1060,
                            "indexExpression": {
                              "expression": {
                                "id": 1058,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2528:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2532:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2528:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2509:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1061,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "2543:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2509:41:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1063,
                        "nodeType": "ExpressionStatement",
                        "src": "2509:41:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1068,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2598:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1069,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2602:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2598:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1072,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2618:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LendingBorrowing_$1349",
                                    "typeString": "contract LendingBorrowing"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LendingBorrowing_$1349",
                                    "typeString": "contract LendingBorrowing"
                                  }
                                ],
                                "id": 1071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2610:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1070,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2610:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1073,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2610:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1074,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1047,
                              "src": "2625:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1065,
                                  "name": "collateralToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 948,
                                  "src": "2568:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1064,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 877,
                                "src": "2561:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2561:23:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2585:12:6",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 876,
                            "src": "2561:36:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2561:72:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1076,
                        "nodeType": "ExpressionStatement",
                        "src": "2561:72:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1078,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2669:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1079,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2673:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2669:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1080,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1047,
                              "src": "2681:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1077,
                            "name": "CollateralDeposited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 967,
                            "src": "2649:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2649:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1082,
                        "nodeType": "EmitStatement",
                        "src": "2644:45:6"
                      }
                    ]
                  },
                  "functionSelector": "bad4a01f",
                  "id": 1084,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositCollateral",
                  "nameLocation": "2349:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1048,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1047,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2375:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1084,
                        "src": "2367:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2367:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2366:17:6"
                  },
                  "returnParameters": {
                    "id": 1049,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2393:0:6"
                  },
                  "scope": 1349,
                  "src": "2340:357:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1147,
                    "nodeType": "Block",
                    "src": "2759:549:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1092,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1090,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1086,
                                "src": "2831:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1091,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2841:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2831:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d757374206265203e2030",
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2844:20:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
                                "typeString": "literal_string \"Amount must be > 0\""
                              },
                              "value": "Amount must be > 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
                                "typeString": "literal_string \"Amount must be > 0\""
                              }
                            ],
                            "id": 1089,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2823:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2823:42:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1095,
                        "nodeType": "ExpressionStatement",
                        "src": "2823:42:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1097,
                                  "name": "collateralBalances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 956,
                                  "src": "2884:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1100,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1098,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "2903:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1099,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2907:6:6",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2903:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2884:30:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1101,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1086,
                                "src": "2918:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2884:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420636f6c6c61746572616c",
                              "id": 1103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2927:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
                                "typeString": "literal_string \"Insufficient collateral\""
                              },
                              "value": "Insufficient collateral"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9a6548b8b08f3e884692ff4b4c5cb58e1633771e97667c355d207e48aa0a8aa",
                                "typeString": "literal_string \"Insufficient collateral\""
                              }
                            ],
                            "id": 1096,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2876:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2876:77:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1105,
                        "nodeType": "ExpressionStatement",
                        "src": "2876:77:6"
                      },
                      {
                        "assignments": [
                          1107
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1107,
                            "mutability": "mutable",
                            "name": "withdrawLimit",
                            "nameLocation": "2972:13:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1147,
                            "src": "2964:21:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1106,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2964:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1117,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1108,
                              "name": "collateralBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "2988:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1111,
                            "indexExpression": {
                              "expression": {
                                "id": 1109,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3007:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3011:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3007:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2988:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1113,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3045:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3049:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3045:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1112,
                              "name": "_loanRequiredCollateral",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1321,
                              "src": "3021:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 1115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3021:35:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2988:68:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2964:92:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1119,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1086,
                                "src": "3075:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1120,
                                "name": "withdrawLimit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1107,
                                "src": "3086:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3075:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e7420776974686472617720636f6c6c61746572616c",
                              "id": 1122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3101:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a122310caabaf2fc9e56e3ee11fb532126d5f48fe21e8345dbc3e707d0c40179",
                                "typeString": "literal_string \"Cant withdraw collateral\""
                              },
                              "value": "Cant withdraw collateral"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a122310caabaf2fc9e56e3ee11fb532126d5f48fe21e8345dbc3e707d0c40179",
                                "typeString": "literal_string \"Cant withdraw collateral\""
                              }
                            ],
                            "id": 1118,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3067:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3067:61:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1124,
                        "nodeType": "ExpressionStatement",
                        "src": "3067:61:6"
                      },
                      {
                        "expression": {
                          "id": 1130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1125,
                              "name": "collateralBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "3139:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1128,
                            "indexExpression": {
                              "expression": {
                                "id": 1126,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3158:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3162:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3158:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3139:30:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1129,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1086,
                            "src": "3173:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3139:41:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1131,
                        "nodeType": "ExpressionStatement",
                        "src": "3139:41:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1136,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3224:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3228:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3224:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1138,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "3236:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1133,
                                  "name": "collateralToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 948,
                                  "src": "3198:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1132,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 877,
                                "src": "3191:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3191:23:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3215:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 844,
                            "src": "3191:32:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3191:53:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1140,
                        "nodeType": "ExpressionStatement",
                        "src": "3191:53:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1142,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3280:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3284:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3280:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1144,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1086,
                              "src": "3292:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1141,
                            "name": "CollateralWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 973,
                            "src": "3260:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3260:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1146,
                        "nodeType": "EmitStatement",
                        "src": "3255:45:6"
                      }
                    ]
                  },
                  "functionSelector": "6112fe2e",
                  "id": 1148,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawCollateral",
                  "nameLocation": "2714:18:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1087,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1086,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2741:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1148,
                        "src": "2733:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1085,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2733:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2732:17:6"
                  },
                  "returnParameters": {
                    "id": 1088,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2759:0:6"
                  },
                  "scope": 1349,
                  "src": "2705:603:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1219,
                    "nodeType": "Block",
                    "src": "3360:639:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1154,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1150,
                                "src": "3422:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3432:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3422:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3435:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              },
                              "value": "Amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              }
                            ],
                            "id": 1153,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3414:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3414:56:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1159,
                        "nodeType": "ExpressionStatement",
                        "src": "3414:56:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1161,
                                    "name": "loans",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 961,
                                    "src": "3489:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                                      "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                                    }
                                  },
                                  "id": 1164,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1162,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3495:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1163,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3499:6:6",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3495:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3489:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Loan_$946_storage",
                                    "typeString": "struct LendingBorrowing.Loan storage ref"
                                  }
                                },
                                "id": 1165,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3507:8:6",
                                "memberName": "isActive",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 945,
                                "src": "3489:26:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 1166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3519:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "3489:35:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4578697374696e67206c6f616e206d75737420626520726570616964206669727374",
                              "id": 1168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3526:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71",
                                "typeString": "literal_string \"Existing loan must be repaid first\""
                              },
                              "value": "Existing loan must be repaid first"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_889a3b76d8842e701e057a17fd85bfbebe0b3cfb874080561fa0d002c2c44c71",
                                "typeString": "literal_string \"Existing loan must be repaid first\""
                              }
                            ],
                            "id": 1160,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3481:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3481:82:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1170,
                        "nodeType": "ExpressionStatement",
                        "src": "3481:82:6"
                      },
                      {
                        "assignments": [
                          1172
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1172,
                            "mutability": "mutable",
                            "name": "maxLoan",
                            "nameLocation": "3582:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1219,
                            "src": "3574:15:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1171,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3574:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1182,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1173,
                                    "name": "collateralBalances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 956,
                                    "src": "3593:18:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1176,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1174,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3612:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1175,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3616:6:6",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3612:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3593:30:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1177,
                                  "name": "collateralFactor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 952,
                                  "src": "3626:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3593:49:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1179,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3592:51:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3646:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "3592:57:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3574:75:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1184,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1150,
                                "src": "3668:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 1185,
                                "name": "maxLoan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1172,
                                "src": "3679:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3668:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c6f616e206578636565647320636f6c6c61746572616c206c696d6974",
                              "id": 1187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3688:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f062de9777057055b6551846cac7c8a159a33d8f5550112163d6ec2d9106213f",
                                "typeString": "literal_string \"Loan exceeds collateral limit\""
                              },
                              "value": "Loan exceeds collateral limit"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f062de9777057055b6551846cac7c8a159a33d8f5550112163d6ec2d9106213f",
                                "typeString": "literal_string \"Loan exceeds collateral limit\""
                              }
                            ],
                            "id": 1183,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3660:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3660:60:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1189,
                        "nodeType": "ExpressionStatement",
                        "src": "3660:60:6"
                      },
                      {
                        "expression": {
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1190,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 961,
                              "src": "3731:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                                "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                              }
                            },
                            "id": 1193,
                            "indexExpression": {
                              "expression": {
                                "id": 1191,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3737:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3741:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3737:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3731:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$946_storage",
                              "typeString": "struct LendingBorrowing.Loan storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1195,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1150,
                                "src": "3779:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1196,
                                  "name": "collateralBalances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 956,
                                  "src": "3813:18:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1199,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1197,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3832:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1198,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3836:6:6",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3832:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3813:30:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 1200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3868:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 1194,
                              "name": "Loan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "3751:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Loan_$946_storage_ptr_$",
                                "typeString": "type(struct LendingBorrowing.Loan storage pointer)"
                              }
                            },
                            "id": 1201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "3771:6:6",
                              "3801:10:6",
                              "3858:8:6"
                            ],
                            "names": [
                              "amount",
                              "collateral",
                              "isActive"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "3751:133:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                              "typeString": "struct LendingBorrowing.Loan memory"
                            }
                          },
                          "src": "3731:153:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$946_storage",
                            "typeString": "struct LendingBorrowing.Loan storage ref"
                          }
                        },
                        "id": 1203,
                        "nodeType": "ExpressionStatement",
                        "src": "3731:153:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1208,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3925:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3929:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3925:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1210,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1150,
                              "src": "3937:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1205,
                                  "name": "lendingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 950,
                                  "src": "3902:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1204,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 877,
                                "src": "3895:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3895:20:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3916:8:6",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 844,
                            "src": "3895:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3895:50:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1212,
                        "nodeType": "ExpressionStatement",
                        "src": "3895:50:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1214,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3971:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3975:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3971:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1216,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1150,
                              "src": "3983:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1213,
                            "name": "LoanTaken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 979,
                            "src": "3961:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3961:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1218,
                        "nodeType": "EmitStatement",
                        "src": "3956:35:6"
                      }
                    ]
                  },
                  "functionSelector": "8c803fc2",
                  "id": 1220,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "takeLoan",
                  "nameLocation": "3325:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1150,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "3342:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1220,
                        "src": "3334:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1149,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3334:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3333:17:6"
                  },
                  "returnParameters": {
                    "id": 1152,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3360:0:6"
                  },
                  "scope": 1349,
                  "src": "3316:683:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1291,
                    "nodeType": "Block",
                    "src": "4052:553:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1228,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1226,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "4115:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4125:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4115:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 1229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4128:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              },
                              "value": "Amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
                                "typeString": "literal_string \"Amount must be greater than zero\""
                              }
                            ],
                            "id": 1225,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4107:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4107:56:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1231,
                        "nodeType": "ExpressionStatement",
                        "src": "4107:56:6"
                      },
                      {
                        "assignments": [
                          1234
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1234,
                            "mutability": "mutable",
                            "name": "userLoan",
                            "nameLocation": "4187:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1291,
                            "src": "4174:21:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                              "typeString": "struct LendingBorrowing.Loan"
                            },
                            "typeName": {
                              "id": 1233,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1232,
                                "name": "Loan",
                                "nameLocations": [
                                  "4174:4:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 946,
                                "src": "4174:4:6"
                              },
                              "referencedDeclaration": 946,
                              "src": "4174:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1239,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1235,
                            "name": "loans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "4198:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                              "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                            }
                          },
                          "id": 1238,
                          "indexExpression": {
                            "expression": {
                              "id": 1236,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4204:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4208:6:6",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4204:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4198:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$946_storage",
                            "typeString": "struct LendingBorrowing.Loan storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4174:41:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1241,
                                "name": "userLoan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1234,
                                "src": "4234:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                  "typeString": "struct LendingBorrowing.Loan storage pointer"
                                }
                              },
                              "id": 1242,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4243:8:6",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 945,
                              "src": "4234:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20616374697665206c6f616e",
                              "id": 1243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4253:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba",
                                "typeString": "literal_string \"No active loan\""
                              },
                              "value": "No active loan"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5d763a4fa76dcd5af45b10ebcfff84ed4476e04c563aef69c0eaf01d8a5ccfba",
                                "typeString": "literal_string \"No active loan\""
                              }
                            ],
                            "id": 1240,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4226:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4226:44:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1245,
                        "nodeType": "ExpressionStatement",
                        "src": "4226:44:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1247,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "4289:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 1248,
                                  "name": "userLoan",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1234,
                                  "src": "4300:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                    "typeString": "struct LendingBorrowing.Loan storage pointer"
                                  }
                                },
                                "id": 1249,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4309:6:6",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 941,
                                "src": "4300:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4289:26:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "526570617920616d6f756e742065786365656473206c6f616e",
                              "id": 1251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4317:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca1d6daea04aac090c67657c808874bac2d61a33edee018207c864407ef722d4",
                                "typeString": "literal_string \"Repay amount exceeds loan\""
                              },
                              "value": "Repay amount exceeds loan"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca1d6daea04aac090c67657c808874bac2d61a33edee018207c864407ef722d4",
                                "typeString": "literal_string \"Repay amount exceeds loan\""
                              }
                            ],
                            "id": 1246,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4281:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4281:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1253,
                        "nodeType": "ExpressionStatement",
                        "src": "4281:64:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1258,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4390:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4394:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4390:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1262,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "4410:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LendingBorrowing_$1349",
                                    "typeString": "contract LendingBorrowing"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_LendingBorrowing_$1349",
                                    "typeString": "contract LendingBorrowing"
                                  }
                                ],
                                "id": 1261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4402:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1260,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4402:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4402:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1264,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1222,
                              "src": "4417:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1255,
                                  "name": "lendingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 950,
                                  "src": "4363:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1254,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 877,
                                "src": "4356:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4356:20:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$877",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4377:12:6",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 876,
                            "src": "4356:33:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4356:69:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1266,
                        "nodeType": "ExpressionStatement",
                        "src": "4356:69:6"
                      },
                      {
                        "expression": {
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1267,
                              "name": "userLoan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1234,
                              "src": "4436:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan storage pointer"
                              }
                            },
                            "id": 1269,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4445:6:6",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 941,
                            "src": "4436:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1270,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1222,
                            "src": "4455:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4436:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1272,
                        "nodeType": "ExpressionStatement",
                        "src": "4436:26:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1273,
                              "name": "userLoan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1234,
                              "src": "4477:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan storage pointer"
                              }
                            },
                            "id": 1274,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4486:6:6",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 941,
                            "src": "4477:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4496:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4477:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1284,
                        "nodeType": "IfStatement",
                        "src": "4473:78:6",
                        "trueBody": {
                          "id": 1283,
                          "nodeType": "Block",
                          "src": "4499:52:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1281,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1277,
                                    "name": "userLoan",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1234,
                                    "src": "4514:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                      "typeString": "struct LendingBorrowing.Loan storage pointer"
                                    }
                                  },
                                  "id": 1279,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "4523:8:6",
                                  "memberName": "isActive",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 945,
                                  "src": "4514:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1280,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4534:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "4514:25:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1282,
                              "nodeType": "ExpressionStatement",
                              "src": "4514:25:6"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1286,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4577:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4581:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4577:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1288,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1222,
                              "src": "4589:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1285,
                            "name": "LoanRepaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "4566:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4566:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1290,
                        "nodeType": "EmitStatement",
                        "src": "4561:36:6"
                      }
                    ]
                  },
                  "functionSelector": "ab7b1c89",
                  "id": 1292,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "repayLoan",
                  "nameLocation": "4016:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1222,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "4034:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1292,
                        "src": "4026:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1221,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4026:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4025:17:6"
                  },
                  "returnParameters": {
                    "id": 1224,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4052:0:6"
                  },
                  "scope": 1349,
                  "src": "4007:598:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1320,
                    "nodeType": "Block",
                    "src": "4693:215:6",
                    "statements": [
                      {
                        "assignments": [
                          1301
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1301,
                            "mutability": "mutable",
                            "name": "userLoan",
                            "nameLocation": "4774:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1320,
                            "src": "4762:20:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                              "typeString": "struct LendingBorrowing.Loan"
                            },
                            "typeName": {
                              "id": 1300,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1299,
                                "name": "Loan",
                                "nameLocations": [
                                  "4762:4:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 946,
                                "src": "4762:4:6"
                              },
                              "referencedDeclaration": 946,
                              "src": "4762:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1305,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1302,
                            "name": "loans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "4785:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                              "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                            }
                          },
                          "id": 1304,
                          "indexExpression": {
                            "id": 1303,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1294,
                            "src": "4791:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4785:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$946_storage",
                            "typeString": "struct LendingBorrowing.Loan storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4762:35:6"
                      },
                      {
                        "condition": {
                          "id": 1308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4812:18:6",
                          "subExpression": {
                            "expression": {
                              "id": 1306,
                              "name": "userLoan",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1301,
                              "src": "4813:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                                "typeString": "struct LendingBorrowing.Loan memory"
                              }
                            },
                            "id": 1307,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4822:8:6",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 945,
                            "src": "4813:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1311,
                        "nodeType": "IfStatement",
                        "src": "4808:32:6",
                        "trueBody": {
                          "expression": {
                            "hexValue": "30",
                            "id": 1309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4839:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 1298,
                          "id": 1310,
                          "nodeType": "Return",
                          "src": "4832:8:6"
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1312,
                                    "name": "userLoan",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1301,
                                    "src": "4859:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                                      "typeString": "struct LendingBorrowing.Loan memory"
                                    }
                                  },
                                  "id": 1313,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4868:6:6",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 941,
                                  "src": "4859:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 1314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4877:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "4859:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1316,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4858:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1317,
                            "name": "collateralFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 952,
                            "src": "4884:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4858:42:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1298,
                        "id": 1319,
                        "nodeType": "Return",
                        "src": "4851:49:6"
                      }
                    ]
                  },
                  "id": 1321,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_loanRequiredCollateral",
                  "nameLocation": "4622:23:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1295,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1294,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "4654:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1321,
                        "src": "4646:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1293,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4646:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4645:15:6"
                  },
                  "returnParameters": {
                    "id": 1298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1297,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1321,
                        "src": "4684:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1296,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4684:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4683:9:6"
                  },
                  "scope": 1349,
                  "src": "4613:295:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1347,
                    "nodeType": "Block",
                    "src": "5029:178:6",
                    "statements": [
                      {
                        "assignments": [
                          1334
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1334,
                            "mutability": "mutable",
                            "name": "userLoan",
                            "nameLocation": "5101:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1347,
                            "src": "5089:20:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                              "typeString": "struct LendingBorrowing.Loan"
                            },
                            "typeName": {
                              "id": 1333,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1332,
                                "name": "Loan",
                                "nameLocations": [
                                  "5089:4:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 946,
                                "src": "5089:4:6"
                              },
                              "referencedDeclaration": 946,
                              "src": "5089:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$946_storage_ptr",
                                "typeString": "struct LendingBorrowing.Loan"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1338,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1335,
                            "name": "loans",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 961,
                            "src": "5112:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Loan_$946_storage_$",
                              "typeString": "mapping(address => struct LendingBorrowing.Loan storage ref)"
                            }
                          },
                          "id": 1337,
                          "indexExpression": {
                            "id": 1336,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "5118:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5112:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Loan_$946_storage",
                            "typeString": "struct LendingBorrowing.Loan storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5089:35:6"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 1339,
                                "name": "userLoan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1334,
                                "src": "5143:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                                  "typeString": "struct LendingBorrowing.Loan memory"
                                }
                              },
                              "id": 1340,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5152:6:6",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 941,
                              "src": "5143:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1341,
                                "name": "userLoan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1334,
                                "src": "5160:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                                  "typeString": "struct LendingBorrowing.Loan memory"
                                }
                              },
                              "id": 1342,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5169:10:6",
                              "memberName": "collateral",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 943,
                              "src": "5160:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1343,
                                "name": "userLoan",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1334,
                                "src": "5181:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Loan_$946_memory_ptr",
                                  "typeString": "struct LendingBorrowing.Loan memory"
                                }
                              },
                              "id": 1344,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5190:8:6",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 945,
                              "src": "5181:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1345,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5142:57:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_bool_$",
                            "typeString": "tuple(uint256,uint256,bool)"
                          }
                        },
                        "functionReturnParameters": 1331,
                        "id": 1346,
                        "nodeType": "Return",
                        "src": "5135:64:6"
                      }
                    ]
                  },
                  "functionSelector": "e8a7da8e",
                  "id": 1348,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLoanDetails",
                  "nameLocation": "4925:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1324,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1323,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "4948:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1348,
                        "src": "4940:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1322,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4940:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4939:15:6"
                  },
                  "returnParameters": {
                    "id": 1331,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1326,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4986:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1348,
                        "src": "4978:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1325,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4978:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1328,
                        "mutability": "mutable",
                        "name": "collateral",
                        "nameLocation": "5002:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1348,
                        "src": "4994:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1327,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4994:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1330,
                        "mutability": "mutable",
                        "name": "isActive",
                        "nameLocation": "5019:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1348,
                        "src": "5014:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1329,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5014:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4977:51:6"
                  },
                  "scope": 1349,
                  "src": "4916:291:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1350,
              "src": "173:5037:6",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24,
                967,
                973,
                979,
                985
              ]
            }
          ],
          "src": "33:5179:6"
        }
      },
      "contracts/MyToken.sol": {
        "id": 7,
        "ast": {
          "absolutePath": "contracts/MyToken.sol",
          "exportedSymbols": {
            "Context": [
              933
            ],
            "ERC20": [
              799
            ],
            "IERC20": [
              877
            ],
            "IERC20Errors": [
              189
            ],
            "IERC20Metadata": [
              903
            ],
            "MockERC20": [
              1387
            ],
            "Ownable": [
              147
            ]
          },
          "id": 1388,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1351,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1352,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1388,
              "sourceUnit": 800,
              "src": "61:55:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 1353,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1388,
              "sourceUnit": 148,
              "src": "118:52:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1354,
                    "name": "ERC20",
                    "nameLocations": [
                      "196:5:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 799,
                    "src": "196:5:7"
                  },
                  "id": 1355,
                  "nodeType": "InheritanceSpecifier",
                  "src": "196:5:7"
                },
                {
                  "arguments": [
                    {
                      "expression": {
                        "id": 1357,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "211:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "215:6:7",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "211:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  ],
                  "baseName": {
                    "id": 1356,
                    "name": "Ownable",
                    "nameLocations": [
                      "203:7:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "203:7:7"
                  },
                  "id": 1359,
                  "nodeType": "InheritanceSpecifier",
                  "src": "203:19:7"
                }
              ],
              "canonicalName": "MockERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1387,
              "linearizedBaseContracts": [
                1387,
                147,
                799,
                189,
                903,
                877,
                933
              ],
              "name": "MockERC20",
              "nameLocation": "183:9:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1370,
                    "nodeType": "Block",
                    "src": "304:2:7",
                    "statements": []
                  },
                  "id": 1371,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1366,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1361,
                          "src": "290:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 1367,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1363,
                          "src": "296:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 1368,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1365,
                        "name": "ERC20",
                        "nameLocations": [
                          "284:5:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 799,
                        "src": "284:5:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "284:19:7"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1364,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1361,
                        "mutability": "mutable",
                        "name": "name",
                        "nameLocation": "256:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "242:18:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1360,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "242:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1363,
                        "mutability": "mutable",
                        "name": "symbol",
                        "nameLocation": "276:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1371,
                        "src": "262:20:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1362,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "262:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "241:42:7"
                  },
                  "returnParameters": {
                    "id": 1369,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "304:0:7"
                  },
                  "scope": 1387,
                  "src": "230:76:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1385,
                    "nodeType": "Block",
                    "src": "375:36:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1381,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1373,
                              "src": "392:2:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1382,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "396:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1380,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 639,
                            "src": "386:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "386:17:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1384,
                        "nodeType": "ExpressionStatement",
                        "src": "386:17:7"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 1386,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1378,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1377,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "365:9:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "365:9:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "365:9:7"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "323:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1373,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "336:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1386,
                        "src": "328:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1372,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "328:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1375,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "348:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1386,
                        "src": "340:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "340:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "327:28:7"
                  },
                  "returnParameters": {
                    "id": 1379,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "375:0:7"
                  },
                  "scope": 1387,
                  "src": "314:97:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1388,
              "src": "174:240:7",
              "usedErrors": [
                13,
                18,
                159,
                164,
                169,
                178,
                183,
                188
              ],
              "usedEvents": [
                24,
                811,
                820
              ]
            }
          ],
          "src": "33:383:7"
        }
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "irOptimized": ""
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "evm": {
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {}
          },
          "irOptimized": ""
        }
      },
      "contracts/LendingBorrowing.sol": {
        "LendingBorrowing": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_collateralToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_lendingToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_collateralFactor",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "CollateralDeposited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "CollateralWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "LoanRepaid",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "LoanTaken",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "collateralBalances",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "collateralFactor",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "collateralToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "depositCollateral",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_user",
                  "type": "address"
                }
              ],
              "name": "getLoanDetails",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateral",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lendingToken",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "loans",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "collateral",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isActive",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "repayLoan",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newFactor",
                  "type": "uint256"
                }
              ],
              "name": "setCollateralFactor",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "takeLoan",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "withdrawCollateral",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_collateralToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lendingToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_collateralFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanTaken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"collateralBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getLoanDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lendingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repayLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFactor\",\"type\":\"uint256\"}],\"name\":\"setCollateralFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"takeLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LendingBorrowing.sol\":\"LendingBorrowing\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/LendingBorrowing.sol\":{\"keccak256\":\"0xbd8d1bde18c755be472a703e1ee88b7a06a6f7f09bc3a278f2b25d41468aa3f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba9a3d53fa2fc48cce2d12802e61f9f66def567032b83b1ed0e76085896dd951\",\"dweb:/ipfs/QmTETFwkzcQCjeyBfi6cWdZJa9uAvtixUUzPpZvPeS2395\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 448/66032 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 8163\n// Code size = 28566 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x201c8]\n     5: jump @72 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x301f0\n    14: i32 a0 = a0 + 0\n    16: ecalli 13 // 'set_immutable_data'\n    18: jump @72\n      : @2 (gas: 8)\n    21: sp = sp + 0xfffffffffffffff0\n    24: u64 [sp + 0x8] = ra\n    27: u64 [sp] = s0\n    29: a2 = a1\n    31: s0 = a0\n    33: a1 = 0x20\n    36: a0 = a2\n    38: ra = 2, jump @13\n      : @3 [@dyn 1] (gas: 100)\n    43: a1 = u8 [a0 + 0x1]\n    46: a2 = u8 [a0]\n    48: a3 = u8 [a0 + 0x2]\n    51: a4 = u8 [a0 + 0x3]\n    54: a1 = a1 << 0x8\n    57: a1 = a1 | a2\n    60: a3 = a3 << 0x10\n    63: a4 = a4 << 0x18\n    66: a3 = a3 | a4\n    69: a1 = a1 | a3\n    72: a2 = u8 [a0 + 0x5]\n    75: a3 = u8 [a0 + 0x4]\n    78: a4 = u8 [a0 + 0x6]\n    81: a5 = u8 [a0 + 0x7]\n    84: a2 = a2 << 0x8\n    87: a2 = a2 | a3\n    90: a4 = a4 << 0x10\n    93: a5 = a5 << 0x18\n    96: a4 = a4 | a5\n    99: a2 = a2 | a4\n   102: a2 = a2 << 0x20\n   105: t0 = a2 | a1\n   108: a2 = u8 [a0 + 0x9]\n   111: a3 = u8 [a0 + 0x8]\n   114: a4 = u8 [a0 + 0xa]\n   117: a5 = u8 [a0 + 0xb]\n   120: a2 = a2 << 0x8\n   123: a2 = a2 | a3\n   126: a4 = a4 << 0x10\n   129: a5 = a5 << 0x18\n   132: a4 = a4 | a5\n   135: a2 = a2 | a4\n   138: a3 = u8 [a0 + 0xd]\n   141: a4 = u8 [a0 + 0xc]\n   144: a5 = u8 [a0 + 0xe]\n   147: a1 = u8 [a0 + 0xf]\n   150: a3 = a3 << 0x8\n   153: a3 = a3 | a4\n   156: a5 = a5 << 0x10\n   159: a1 = a1 << 0x18\n   162: a1 = a1 | a5\n   165: a1 = a1 | a3\n   168: a1 = a1 << 0x20\n   171: t1 = a1 | a2\n   174: a1 = u8 [a0 + 0x11]\n   177: a3 = u8 [a0 + 0x10]\n   180: a4 = u8 [a0 + 0x12]\n   183: a5 = u8 [a0 + 0x13]\n   186: a1 = a1 << 0x8\n   189: a1 = a1 | a3\n   192: a4 = a4 << 0x10\n   195: a5 = a5 << 0x18\n   198: a4 = a4 | a5\n   201: a1 = a1 | a4\n   204: a3 = u8 [a0 + 0x15]\n   207: a4 = u8 [a0 + 0x14]\n   210: a5 = u8 [a0 + 0x16]\n   213: a2 = u8 [a0 + 0x17]\n   216: a3 = a3 << 0x8\n   219: a3 = a3 | a4\n   222: a5 = a5 << 0x10\n   225: a2 = a2 << 0x18\n   228: a2 = a2 | a5\n   231: a2 = a2 | a3\n   234: a2 = a2 << 0x20\n   237: a3 = a2 | a1\n   240: a1 = u8 [a0 + 0x19]\n   243: a2 = u8 [a0 + 0x18]\n   246: a4 = u8 [a0 + 0x1a]\n   249: a5 = u8 [a0 + 0x1b]\n   252: a1 = a1 << 0x8\n   255: a1 = a1 | a2\n   258: a4 = a4 << 0x10\n   261: a5 = a5 << 0x18\n   264: a4 = a4 | a5\n   267: a1 = a1 | a4\n   270: a2 = u8 [a0 + 0x1d]\n   273: a4 = u8 [a0 + 0x1c]\n   276: a5 = u8 [a0 + 0x1e]\n   279: a0 = u8 [a0 + 0x1f]\n   282: a2 = a2 << 0x8\n   285: a2 = a2 | a4\n   288: a5 = a5 << 0x10\n   291: a0 = a0 << 0x18\n   294: a0 = a0 | a5\n   297: a0 = a0 | a2\n   300: a0 = a0 << 0x20\n   303: a0 = a0 | a1\n   306: a0 = reverse a0\n   308: a1 = reverse a3\n   310: a2 = reverse t1\n   312: a3 = reverse t0\n   314: u64 [s0 + 0x18] = a3\n   317: u64 [s0 + 0x10] = a2\n   320: u64 [s0 + 0x8] = a1\n   323: u64 [s0] = a0\n   325: ra = u64 [sp + 0x8]\n   328: s0 = u64 [sp]\n   330: sp = sp + 0x10\n   333: ret\n      : @4 (gas: 12)\n   335: sp = sp + 0xffffffffffffffd8\n   338: u64 [sp + 0x20] = ra\n   341: u64 [sp + 0x18] = s0\n   344: u64 [sp + 0x10] = s1\n   347: a2 = u64 [a1]\n   349: u64 [sp + 0x8] = a2\n   352: a2 = u64 [a1 + 0x8]\n   355: u64 [sp] = a2\n   357: s0 = u64 [a1 + 0x10]\n   360: s1 = u64 [a1 + 0x18]\n   363: a1 = 0x20\n   366: ra = 4, jump @13\n      : @5 [@dyn 2] (gas: 71)\n   371: a1 = reverse s1\n   373: a2 = reverse s0\n   375: a3 = u64 [sp]\n   377: a3 = reverse a3\n   379: a4 = u64 [sp + 0x8]\n   382: a4 = reverse a4\n   384: u8 [a0 + 0x18] = a4\n   387: u8 [a0 + 0x10] = a3\n   390: u8 [a0 + 0x8] = a2\n   393: u8 [a0] = a1\n   395: a5 = a4 >> 0x38\n   398: u8 [a0 + 0x1f] = a5\n   401: a5 = a4 >> 0x30\n   404: u8 [a0 + 0x1e] = a5\n   407: a5 = a4 >> 0x28\n   410: u8 [a0 + 0x1d] = a5\n   413: a5 = a4 >> 0x20\n   416: u8 [a0 + 0x1c] = a5\n   419: a5 = a4 >> 0x18\n   422: u8 [a0 + 0x1b] = a5\n   425: a5 = a4 >> 0x10\n   428: u8 [a0 + 0x1a] = a5\n   431: a4 = a4 >> 0x8\n   434: u8 [a0 + 0x19] = a4\n   437: a4 = a3 >> 0x38\n   440: u8 [a0 + 0x17] = a4\n   443: a4 = a3 >> 0x30\n   446: u8 [a0 + 0x16] = a4\n   449: a4 = a3 >> 0x28\n   452: u8 [a0 + 0x15] = a4\n   455: a4 = a3 >> 0x20\n   458: u8 [a0 + 0x14] = a4\n   461: a4 = a3 >> 0x18\n   464: u8 [a0 + 0x13] = a4\n   467: a4 = a3 >> 0x10\n   470: u8 [a0 + 0x12] = a4\n   473: a3 = a3 >> 0x8\n   476: u8 [a0 + 0x11] = a3\n   479: a3 = a2 >> 0x38\n   482: u8 [a0 + 0xf] = a3\n   485: a3 = a2 >> 0x30\n   488: u8 [a0 + 0xe] = a3\n   491: a3 = a2 >> 0x28\n   494: u8 [a0 + 0xd] = a3\n   497: a3 = a2 >> 0x20\n   500: u8 [a0 + 0xc] = a3\n   503: a3 = a2 >> 0x18\n   506: u8 [a0 + 0xb] = a3\n   509: a3 = a2 >> 0x10\n   512: u8 [a0 + 0xa] = a3\n   515: a2 = a2 >> 0x8\n   518: u8 [a0 + 0x9] = a2\n   521: a2 = a1 >> 0x38\n   524: u8 [a0 + 0x7] = a2\n   527: a2 = a1 >> 0x30\n   530: u8 [a0 + 0x6] = a2\n   533: a2 = a1 >> 0x28\n   536: u8 [a0 + 0x5] = a2\n   539: a2 = a1 >> 0x20\n   542: u8 [a0 + 0x4] = a2\n   545: a2 = a1 >> 0x18\n   548: u8 [a0 + 0x3] = a2\n   551: a2 = a1 >> 0x10\n   554: u8 [a0 + 0x2] = a2\n   557: a1 = a1 >> 0x8\n   560: u8 [a0 + 0x1] = a1\n   563: ra = u64 [sp + 0x20]\n   566: s0 = u64 [sp + 0x18]\n   569: s1 = u64 [sp + 0x10]\n   572: sp = sp + 0x28\n   575: ret\n      : @6 (gas: 48)\n   577: sp = sp + 0xffffffffffffffa0\n   580: u64 [sp + 0x58] = ra\n   583: u64 [sp + 0x50] = s0\n   586: u64 [sp + 0x48] = s1\n   589: s0 = sp + 0x60\n   592: sp = sp & 0xffffffffffffffe0\n   595: s1 = a0\n   597: a0 = u64 [a1 + 0x18]\n   600: a2 = u64 [a1 + 0x10]\n   603: a3 = u64 [a1 + 0x8]\n   606: a1 = u64 [a1]\n   608: a0 = reverse a0\n   610: a2 = reverse a2\n   612: a3 = reverse a3\n   614: a1 = reverse a1\n   616: u64 [sp + 0x18] = a1\n   619: u64 [sp + 0x10] = a3\n   622: u64 [sp + 0x8] = a2\n   625: u64 [sp] = a0\n   627: u64 [sp + 56] = 0\n   630: u64 [sp + 48] = 0\n   633: u64 [sp + 40] = 0\n   636: u64 [sp + 32] = 0\n   639: u32 [sp + 64] = 0x20\n   643: i32 a1 = sp + 0\n   645: i32 a3 = sp + 0x20\n   648: i32 a4 = sp + 0x40\n   651: a2 = 0xffffffffffffffff\n   654: a0 = 0\n   656: ecalli 7 // 'get_storage'\n   658: a0 = u64 [sp + 0x38]\n   661: a1 = u64 [sp + 0x30]\n   664: a2 = u64 [sp + 0x28]\n   667: a3 = u64 [sp + 0x20]\n   670: a0 = reverse a0\n   672: a1 = reverse a1\n   674: a2 = reverse a2\n   676: a3 = reverse a3\n   678: u64 [s1 + 0x18] = a3\n   681: u64 [s1 + 0x10] = a2\n   684: u64 [s1 + 0x8] = a1\n   687: u64 [s1] = a0\n   689: sp = s0 + 0xffffffffffffffa0\n   692: ra = u64 [sp + 0x58]\n   695: s0 = u64 [sp + 0x50]\n   698: s1 = u64 [sp + 0x48]\n   701: sp = sp + 0x60\n   704: ret\n      : @7 (gas: 40)\n   706: sp = sp + 0xffffffffffffffa0\n   709: u64 [sp + 0x58] = ra\n   712: u64 [sp + 0x50] = s0\n   715: s0 = sp + 0x60\n   718: sp = sp & 0xffffffffffffffe0\n   721: t0 = u64 [a0]\n   723: a3 = u64 [a0 + 0x8]\n   726: a4 = u64 [a0 + 0x10]\n   729: a0 = u64 [a0 + 0x18]\n   732: t1 = u64 [a1]\n   734: a2 = u64 [a1 + 0x8]\n   737: a5 = u64 [a1 + 0x10]\n   740: a1 = u64 [a1 + 0x18]\n   743: t2 = reverse a0\n   745: a4 = reverse a4\n   747: a3 = reverse a3\n   749: a0 = reverse t0\n   751: t0 = reverse a1\n   753: a5 = reverse a5\n   755: a2 = reverse a2\n   757: a1 = reverse t1\n   759: u64 [sp + 0x18] = a0\n   762: u64 [sp + 0x10] = a3\n   765: u64 [sp + 0x8] = a4\n   768: u64 [sp] = t2\n   770: u64 [sp + 0x38] = a1\n   773: u64 [sp + 0x30] = a2\n   776: u64 [sp + 0x28] = a5\n   779: u64 [sp + 0x20] = t0\n   782: i32 a1 = sp + 0\n   784: i32 a3 = sp + 0x20\n   787: a2 = 0xffffffffffffffff\n   790: a4 = 0x20\n   793: a0 = 0\n   795: ecalli 14 // 'set_storage'\n   797: sp = s0 + 0xffffffffffffffa0\n   800: ra = u64 [sp + 0x58]\n   803: s0 = u64 [sp + 0x50]\n   806: sp = sp + 0x60\n   809: ret\n      : @8 (gas: 24)\n   811: sp = sp + 0xffffffffffffff60\n   815: u64 [sp + 0x98] = ra\n   819: u64 [sp + 0x90] = s0\n   823: u64 [sp + 0x88] = s1\n   827: s0 = sp + 0xa0\n   831: sp = sp & 0xffffffffffffffe0\n   834: a4 = u64 [a3]\n   836: u64 [sp + 0x38] = a4\n   839: a4 = u64 [a3 + 0x8]\n   842: u64 [sp + 0x30] = a4\n   845: a4 = u64 [a3 + 0x10]\n   848: u64 [sp + 0x28] = a4\n   851: a3 = u64 [a3 + 0x18]\n   854: u64 [sp + 0x20] = a3\n   857: a3 = u64 [a2]\n   859: u64 [sp + 0x18] = a3\n   862: a3 = u64 [a2 + 0x8]\n   865: u64 [sp + 0x10] = a3\n   868: a3 = u64 [a2 + 0x10]\n   871: u64 [sp + 0x8] = a3\n   874: a2 = u64 [a2 + 0x18]\n   877: u64 [sp] = a2\n   879: s1 = a1\n   881: ra = 6, jump @13\n      : @9 [@dyn 3] (gas: 35)\n   886: a1 = u64 [sp]\n   888: a1 = reverse a1\n   890: a2 = u64 [sp + 0x8]\n   893: a2 = reverse a2\n   895: a3 = u64 [sp + 0x10]\n   898: a3 = reverse a3\n   900: a4 = u64 [sp + 0x18]\n   903: a4 = reverse a4\n   905: u64 [sp + 0x58] = a4\n   908: u64 [sp + 0x50] = a3\n   911: u64 [sp + 0x48] = a2\n   914: u64 [sp + 0x40] = a1\n   917: a1 = u64 [sp + 0x20]\n   920: a1 = reverse a1\n   922: a2 = u64 [sp + 0x28]\n   925: a2 = reverse a2\n   927: a3 = u64 [sp + 0x30]\n   930: a3 = reverse a3\n   932: a4 = u64 [sp + 0x38]\n   935: a4 = reverse a4\n   937: u64 [sp + 0x78] = a4\n   940: u64 [sp + 0x70] = a3\n   943: u64 [sp + 0x68] = a2\n   946: u64 [sp + 0x60] = a1\n   949: i32 a2 = a0 + 0\n   951: i32 a3 = s1 + 0\n   953: i32 a0 = sp + 0x40\n   956: a1 = 0x2\n   959: ecalli 6 // 'deposit_event'\n   961: sp = s0 + 0xffffffffffffff60\n   965: ra = u64 [sp + 0x98]\n   969: s0 = u64 [sp + 0x90]\n   973: s1 = u64 [sp + 0x88]\n   977: sp = sp + 0xa0\n   981: ret\n      : @10 (gas: 33)\n   983: sp = sp + 0xffffffffffffff20\n   987: u64 [sp + 0xd8] = ra\n   991: u64 [sp + 0xd0] = s0\n   995: u64 [sp + 0xc8] = s1\n   999: s0 = sp + 0xe0\n  1003: sp = sp & 0xffffffffffffffe0\n  1006: a5 = u64 [a4]\n  1008: u64 [sp + 0x40] = a5\n  1011: a5 = u64 [a4 + 0x8]\n  1014: u64 [sp + 0x48] = a5\n  1017: a5 = u64 [a4 + 0x10]\n  1020: u64 [sp + 0x50] = a5\n  1023: a4 = u64 [a4 + 0x18]\n  1026: u64 [sp + 0x58] = a4\n  1029: t0 = 0x8\n  1032: a4 = u64 [a3]\n  1034: u64 [sp + 0x18] = a4\n  1037: a4 = u64 [a3 + 0x8]\n  1040: u64 [sp + 0x20] = a4\n  1043: a4 = u64 [a3 + 0x10]\n  1046: u64 [sp + 0x28] = a4\n  1049: a3 = u64 [a3 + 0x18]\n  1052: u64 [sp + 0x30] = a3\n  1055: s1 = u64 [a2]\n  1057: a3 = u64 [a2 + 0x8]\n  1060: u64 [sp] = a3\n  1062: a3 = u64 [a2 + 0x10]\n  1065: u64 [sp + 0x8] = a3\n  1068: a2 = u64 [a2 + 0x18]\n  1071: u64 [sp + 0x10] = a2\n  1074: u64 [sp + 56] = 0\n  1077: ra = 0xa\n  1080: jump @13\n      : @11 [@dyn 4] (gas: 2)\n  1083: u64 [sp + 0x38] = a1\n  1086: ra = 10, jump @13\n      : @12 [@dyn 5] (gas: 46)\n  1091: a1 = reverse s1\n  1093: u64 [sp + 0x78] = a1\n  1096: a1 = u64 [sp]\n  1098: a1 = reverse a1\n  1100: u64 [sp + 0x70] = a1\n  1103: a1 = u64 [sp + 0x8]\n  1106: a1 = reverse a1\n  1108: u64 [sp + 0x68] = a1\n  1111: a1 = u64 [sp + 0x10]\n  1114: a1 = reverse a1\n  1116: u64 [sp + 0x60] = a1\n  1119: a1 = u64 [sp + 0x18]\n  1122: a1 = reverse a1\n  1124: u64 [sp + 0x98] = a1\n  1128: a1 = u64 [sp + 0x20]\n  1131: a1 = reverse a1\n  1133: u64 [sp + 0x90] = a1\n  1137: a1 = u64 [sp + 0x28]\n  1140: a1 = reverse a1\n  1142: u64 [sp + 0x88] = a1\n  1146: a1 = u64 [sp + 0x30]\n  1149: a1 = reverse a1\n  1151: u64 [sp + 0x80] = a1\n  1155: a1 = u64 [sp + 0x40]\n  1158: a1 = reverse a1\n  1160: u64 [sp + 0xb8] = a1\n  1164: a1 = u64 [sp + 0x48]\n  1167: a1 = reverse a1\n  1169: u64 [sp + 0xb0] = a1\n  1173: a1 = u64 [sp + 0x50]\n  1176: a1 = reverse a1\n  1178: u64 [sp + 0xa8] = a1\n  1182: a1 = u64 [sp + 0x58]\n  1185: a1 = reverse a1\n  1187: u64 [sp + 0xa0] = a1\n  1191: i32 a2 = a0 + 0\n  1193: a3 = i32 [sp + 0x38]\n  1196: i32 a0 = sp + 0x60\n  1199: a1 = 0x3\n  1202: ecalli 6 // 'deposit_event'\n  1204: sp = s0 + 0xffffffffffffff20\n  1208: ra = u64 [sp + 0xd8]\n  1212: s0 = u64 [sp + 0xd0]\n  1216: s1 = u64 [sp + 0xc8]\n  1220: sp = sp + 0xe0\n  1224: ret\n      : @13 (gas: 2)\n  1226: i32 a2 = a0 >> 0x10\n  1229: jump @18 if a2 != 0\n      : @14 (gas: 4)\n  1232: a1 = a1 + a0\n  1235: i32 a1 = a1 + 0x1f\n  1238: a1 = a1 & 0xffffffffffffffe0\n  1241: jump @18 if a1 >u 65536\n      : @15 (gas: 3)\n  1247: a2 = 0x201c4\n  1252: a3 = i32 [0x201c4]\n  1257: jump @17 if a3 >=u a1\n      : @16 (gas: 2)\n  1260: u32 [0x201c4] = a1\n  1265: fallthrough\n      : @17 (gas: 4)\n  1266: a1 = 0x201d0\n  1271: i32 a0 = a0 + 0\n  1273: a0 = a0 + a1\n  1276: ret\n      : @18 (gas: 1)\n  1278: trap\n      : @19 (gas: 6)\n  1279: sp = sp + 0xfffffffffffffff0\n  1282: u64 [sp + 0x8] = ra\n  1285: u64 [sp] = s0\n  1287: s0 = a0 & 0x1\n  1290: ecalli 4 // 'call_data_size'\n  1292: fallthrough\n      : @20 (gas: 2)\n  1293: u32 [0x201c0] = a0\n  1298: jump @22 if s0 == 0\n      : @21 (gas: 1)\n  1301: ra = 12, jump @23\n      : @22 [@dyn 6] (gas: 18)\n  1305: ra = 0xe\n  1308: sp = sp + 0xfffffffffffffe10\n  1312: u64 [sp + 0x1e8] = ra\n  1316: u64 [sp + 0x1e0] = s0\n  1320: u64 [sp + 0x1d8] = s1\n  1324: s0 = sp + 0x1f0\n  1328: sp = sp + 0xffffffffffffdc90\n  1332: sp = sp & 0xffffffffffffffe0\n  1335: s1 = sp\n  1337: a2 = s1 + 0x1878\n  1341: u64 [a2 + 960] = 0\n  1345: u64 [a2 + 952] = 0\n  1349: u64 [a2 + 936] = 0x80\n  1355: a0 = 0x40\n  1358: a1 = s1 + 0x1c20\n  1362: u64 [a2 + 944] = 0\n  1366: ra = 0x4a\n  1369: jump @4\n      : @23 [@dyn 7] (gas: 15)\n  1372: sp = sp + 0xfffffffffffffb20\n  1376: a0 = sp + 0x400\n  1380: u64 [a0 + 0xd8] = ra\n  1384: u64 [a0 + 0xd0] = s0\n  1388: u64 [a0 + 0xc8] = s1\n  1392: s0 = sp + 0x4e0\n  1396: sp = sp & 0xffffffffffffffe0\n  1399: s1 = sp\n  1401: u64 [s1 + 888] = 0\n  1405: u64 [s1 + 880] = 0\n  1409: u64 [s1 + 872] = 0\n  1413: u64 [s1 + 864] = 0\n  1417: i32 a0 = s1 + 0x360\n  1421: ecalli 15 // 'value_transferred'\n  1423: fallthrough\n      : @24 (gas: 9)\n  1424: a4 = s1 + 0x300\n  1428: a0 = u64 [a4 + 0x70]\n  1431: a1 = u64 [a4 + 0x78]\n  1434: a2 = u64 [a4 + 0x68]\n  1437: a3 = u64 [a4 + 0x60]\n  1440: a1 = a1 | a2\n  1443: a0 = a0 | a3\n  1446: a0 = a0 | a1\n  1449: jump @63 if a0 != 0\n      : @25 (gas: 17)\n  1453: a0 = i32 [0x201c0]\n  1458: u64 [s1 + 0xb8] = a0\n  1462: a0 = a0 << 0x20\n  1465: a0 = a0 >> 0x20\n  1468: a0 = a0 + 0x1f\n  1471: a0 = a0 & 0xffffffffffffffe0\n  1474: a1 = a0 + 0x80\n  1478: a0 = a1 <u a0\n  1481: a2 = s1 + 0x300\n  1485: u64 [a2 + 0x40] = a1\n  1488: u64 [a2 + 0x48] = a0\n  1491: a0 = 0 if a0 != 0\n  1493: u64 [a2 + 0x50] = a0\n  1496: a0 = 0x40\n  1499: a1 = s1 + 0x340\n  1503: u64 [s1 + 856] = 0\n  1507: ra = 16, jump @4\n      : @26 [@dyn 8] (gas: 3)\n  1512: a0 = 0x80\n  1516: a1 = u64 [s1 + 0xb8]\n  1520: ra = 18, jump @13\n      : @27 [@dyn 9] (gas: 5)\n  1525: i32 a0 = a0 + 0\n  1527: a1 = u64 [s1 + 0xb8]\n  1531: a2 = 0\n  1533: ecalli 2 // 'call_data_copy'\n  1535: fallthrough\n      : @28 (gas: 2)\n  1536: a1 = u64 [s1 + 0xb8]\n  1540: jump @64 if a1 <=u 95\n      : @29 (gas: 7)\n  1545: u64 [s1 + 792] = 0\n  1549: u64 [s1 + 784] = 0\n  1553: u64 [s1 + 768] = 0x80\n  1559: a0 = s1 + 0x320\n  1563: a1 = s1 + 0x300\n  1567: u64 [s1 + 776] = 0\n  1571: ra = 20, jump @760\n      : @30 [@dyn 10] (gas: 14)\n  1576: a1 = s1 + 0x300\n  1580: a0 = u64 [a1 + 0x30]\n  1583: u64 [s1 + 0x30] = a0\n  1586: a0 = u64 [a1 + 0x28]\n  1589: u64 [s1 + 0x28] = a0\n  1592: a0 = u64 [a1 + 0x20]\n  1595: u64 [s1 + 0x20] = a0\n  1598: u64 [s1 + 728] = 0\n  1602: u64 [s1 + 720] = 0\n  1606: u64 [s1 + 704] = 0xa0\n  1612: a0 = s1 + 0x2e0\n  1616: a1 = s1 + 0x2c0\n  1620: u64 [s1 + 712] = 0\n  1624: ra = 22, jump @760\n      : @31 [@dyn 11] (gas: 13)\n  1629: a0 = u64 [s1 + 0x2f0]\n  1633: u64 [s1 + 0x48] = a0\n  1636: a0 = u64 [s1 + 0x2e8]\n  1640: u64 [s1 + 0x40] = a0\n  1643: a0 = u64 [s1 + 0x2e0]\n  1647: u64 [s1 + 0x38] = a0\n  1650: a0 = sp + 0xffffffffffffffe0\n  1653: a0 = a0 & 0xffffffffffffffe0\n  1656: u64 [s1 + 0xa0] = a0\n  1660: sp = a0\n  1662: a0 = s1 + 0x2a0\n  1666: a1 = 0xc0\n  1670: ra = 24, jump @2\n      : @32 [@dyn 12] (gas: 20)\n  1675: a4 = s1 + 0x200\n  1679: a0 = u64 [a4 + 0xb0]\n  1683: a1 = u64 [a4 + 0xb8]\n  1687: a3 = u64 [a4 + 0xa0]\n  1691: a2 = u64 [a4 + 0xa8]\n  1695: u64 [s1 + 0x90] = a0\n  1699: a4 = u64 [s1 + 0xa0]\n  1703: u64 [a4 + 0x10] = a0\n  1706: u64 [s1 + 0x88] = a1\n  1710: u64 [a4 + 0x18] = a1\n  1713: u64 [s1 + 0x78] = a3\n  1716: u64 [a4] = a3\n  1718: u64 [s1 + 0x80] = a2\n  1722: u64 [a4 + 0x8] = a2\n  1725: a0 = 0x301d0\n  1730: u64 [s1 + 0xb8] = a0\n  1734: i32 a0 = a0 + 0\n  1736: u64 [s1 + 0xb0] = a0\n  1740: ecalli 5 // 'caller'\n  1742: fallthrough\n      : @33 (gas: 7)\n  1743: a2 = u64 [s1 + 0xb8]\n  1747: a0 = u32 [a2 + 0x10]\n  1750: a1 = u64 [a2]\n  1752: a2 = u64 [a2 + 0x8]\n  1755: a0 = a0 | a1\n  1758: a0 = a0 | a2\n  1761: jump @65 if a0 == 0\n      : @34 (gas: 7)\n  1765: u64 [s1 + 920] = 0\n  1769: u64 [s1 + 912] = 0\n  1773: u64 [s1 + 904] = 0\n  1777: u64 [s1 + 896] = 0\n  1781: a0 = s1 + 0x280\n  1785: a1 = s1 + 0x380\n  1789: ra = 26, jump @6\n      : @35 [@dyn 13] (gas: 14)\n  1794: a0 = u64 [s1 + 0x280]\n  1798: u64 [s1 + 0x70] = a0\n  1801: a0 = u64 [s1 + 0x288]\n  1805: u64 [s1 + 0x68] = a0\n  1808: a0 = u64 [s1 + 0x298]\n  1812: u64 [s1 + 0x98] = a0\n  1816: a0 = u64 [s1 + 0x290]\n  1820: u64 [s1 + 0xa8] = a0\n  1824: a0 = u64 [s1 + 0xb0]\n  1828: ra = 0x1c\n  1831: ecalli 5 // 'caller'\n  1833: a2 = u64 [s1 + 0xb8]\n  1837: t0 = 0x1e\n  1840: jump @933\n      : @36 [@dyn 14] (gas: 2)\n  1843: a2 = u64 [s1 + 0xb8]\n  1847: t0 = 30, jump @933\n      : @37 [@dyn 15] (gas: 22)\n  1852: a0 = a0 >> 0x20\n  1855: a2 = reverse a2\n  1857: a3 = a2 << 0x20\n  1860: a0 = a0 | a3\n  1863: a2 = a2 >> 0x20\n  1866: a3 = u64 [s1 + 0xa8]\n  1870: a3 = a3 >> 0x20\n  1873: a3 = a3 << 0x20\n  1876: a2 = a2 | a3\n  1879: u64 [s1 + 952] = 0\n  1883: u64 [s1 + 944] = 0\n  1887: u64 [s1 + 936] = 0\n  1891: u64 [s1 + 928] = 0\n  1895: a3 = u64 [s1 + 0x98]\n  1899: a4 = s1 + 0x300\n  1903: u64 [a4 + 0xd8] = a3\n  1907: u64 [a4 + 0xd0] = a2\n  1911: u64 [a4 + 0xc8] = a0\n  1915: u64 [a4 + 0xc0] = a1\n  1919: a0 = s1 + 0x3a0\n  1923: a1 = s1 + 0x3c0\n  1927: ra = 32, jump @7\n      : @38 [@dyn 16] (gas: 3)\n  1932: a0 = s1 + 0x260\n  1936: a1 = 0x40\n  1939: ra = 34, jump @2\n      : @39 [@dyn 17] (gas: 14)\n  1944: a0 = u64 [s1 + 0x278]\n  1948: u64 [s1 + 0x58] = a0\n  1951: a0 = u64 [s1 + 0x270]\n  1955: u64 [s1 + 0x50] = a0\n  1958: a0 = u64 [s1 + 0x268]\n  1962: u64 [s1 + 0x60] = a0\n  1965: a0 = u64 [s1 + 0x260]\n  1969: u64 [s1 + 0x98] = a0\n  1973: a0 = u64 [s1 + 0xb0]\n  1977: ra = 0x24\n  1980: ecalli 5 // 'caller'\n  1982: a2 = u64 [s1 + 0xb8]\n  1986: t0 = 0x26\n  1989: jump @926\n      : @40 [@dyn 18] (gas: 2)\n  1992: a2 = u64 [s1 + 0xb8]\n  1996: t0 = 38, jump @926\n      : @41 [@dyn 19] (gas: 34)\n  2001: t0 = a1 | a0\n  2004: a3 = a3 >> 0x20\n  2007: a2 = reverse a2\n  2009: a1 = a2 << 0x20\n  2012: a1 = a1 | a3\n  2015: a2 = a2 >> 0x20\n  2018: a3 = u64 [s1 + 0xa8]\n  2022: a3 = a3 << 0x20\n  2025: a3 = a3 >> 0x20\n  2028: u64 [s1 + 536] = 0\n  2032: u64 [s1 + 568] = 0\n  2036: u64 [s1 + 0x230] = a3\n  2040: a0 = u64 [s1 + 0x68]\n  2043: u64 [s1 + 0x228] = a0\n  2047: a0 = u64 [s1 + 0x70]\n  2050: u64 [s1 + 0x220] = a0\n  2054: a3 = u64 [0x20000]\n  2059: a4 = u64 [0x20008]\n  2064: a5 = u64 [0x20010]\n  2069: a0 = u64 [0x20018]\n  2074: u64 [s1 + 0x258] = a3\n  2078: a3 = s1 + 0x200\n  2082: u64 [a3 + 0x50] = a4\n  2085: u64 [a3 + 0x48] = a5\n  2088: u64 [a3 + 0x40] = a0\n  2091: u64 [a3 + 0x10] = a2\n  2094: u64 [a3 + 0x8] = a1\n  2097: a2 = s1 + 0x240\n  2101: a3 = s1 + 0x220\n  2105: a4 = s1 + 0x200\n  2109: u64 [s1 + 0x200] = t0\n  2113: a0 = 0\n  2115: a1 = 0\n  2117: ra = 40, jump @10\n      : @42 [@dyn 20] (gas: 14)\n  2122: a2 = u64 [s1 + 0x80]\n  2126: a0 = a2 >u 0\n  2128: a1 = u64 [s1 + 0x78]\n  2131: a1 = a1 <u 0x65\n  2134: a1 = a1 ^ 0x1\n  2137: a1 = a0 if a2 != 0\n  2140: a3 = u64 [s1 + 0x90]\n  2144: a0 = a3 >u 0\n  2146: a4 = u64 [s1 + 0x88]\n  2150: a2 = a4 >u 0\n  2152: a2 = a0 if a4 == 0\n  2155: a0 = a3 | a4\n  2158: a2 = a1 if a0 == 0\n  2161: jump @55 if a2 == 0\n      : @43 (gas: 12)\n  2165: a0 = u64 [s1 + 0x98]\n  2169: a3 = u64 [s1 + 0x50]\n  2172: a0 = a0 | a3\n  2175: a1 = u64 [s1 + 0x60]\n  2178: a2 = u64 [s1 + 0x58]\n  2181: a1 = a1 | a2\n  2184: a0 = a0 | a1\n  2187: a0 = a0 >> 0x20\n  2190: a1 = a1 | a3\n  2193: a1 = a1 << 0x20\n  2196: a0 = a0 | a1\n  2199: jump @62 if a0 != 0\n      : @44 (gas: 8)\n  2203: u64 [s1 + 400] = 0\n  2207: u64 [s1 + 392] = 0\n  2211: u64 [s1 + 384] = 0\n  2215: a0 = 0x8c379a000000000\n  2225: a1 = s1 + 0x180\n  2229: u64 [s1 + 0x198] = a0\n  2233: a0 = u64 [s1 + 0x98]\n  2237: ra = 42, jump @4\n      : @45 [@dyn 21] (gas: 11)\n  2242: a0 = u64 [s1 + 0x58]\n  2245: a1 = u64 [s1 + 0x50]\n  2248: a2 = a1 | a0\n  2251: a3 = 0x100000000\n  2261: a0 = 0xfffffffc\n  2271: a1 = u64 [s1 + 0x98]\n  2275: a0 = a1 <u a0\n  2278: a1 = u64 [s1 + 0x60]\n  2281: a0 = 0 if a1 != 0\n  2283: a0 = 0 if a2 != 0\n  2285: jump @62 if a0 == 0\n      : @46 (gas: 10)\n  2289: a0 = u64 [s1 + 0x98]\n  2293: i32 a0 = a0 + 0x4\n  2296: u64 [s1 + 376] = 0\n  2300: u64 [s1 + 368] = 0\n  2304: u64 [s1 + 352] = 0x20\n  2309: a1 = s1 + 0x160\n  2313: u64 [s1 + 360] = 0\n  2317: u64 [s1 + 0xb8] = a2\n  2321: u64 [s1 + 0xb0] = a3\n  2325: ra = 44, jump @4\n      : @47 [@dyn 22] (gas: 9)\n  2330: a0 = u64 [s1 + 0xb0]\n  2334: a0 = a0 + 0xffffffffffffffdc\n  2337: a1 = u64 [s1 + 0x98]\n  2341: a0 = a1 <u a0\n  2344: a1 = u64 [s1 + 0x60]\n  2347: a0 = 0 if a1 != 0\n  2349: a1 = u64 [s1 + 0xb8]\n  2353: a0 = 0 if a1 != 0\n  2355: jump @62 if a0 == 0\n      : @48 (gas: 8)\n  2359: a0 = u64 [s1 + 0x98]\n  2363: i32 a0 = a0 + 0x24\n  2366: u64 [s1 + 344] = 0\n  2370: u64 [s1 + 336] = 0\n  2374: u64 [s1 + 320] = 0x21\n  2379: a1 = s1 + 0x140\n  2383: u64 [s1 + 328] = 0\n  2387: ra = 46, jump @4\n      : @49 [@dyn 23] (gas: 9)\n  2392: a2 = u64 [s1 + 0xb8]\n  2396: a3 = 0x100000000\n  2406: a0 = 0xffffffbc\n  2416: a1 = u64 [s1 + 0x98]\n  2420: a0 = a1 <u a0\n  2423: a1 = u64 [s1 + 0x60]\n  2426: a0 = 0 if a1 != 0\n  2428: a0 = 0 if a2 != 0\n  2430: jump @62 if a0 == 0\n      : @50 (gas: 14)\n  2434: a0 = u64 [s1 + 0x98]\n  2438: i32 a0 = a0 + 0x44\n  2441: a1 = u64 [0x20020]\n  2446: a4 = s1 + 0x100\n  2450: u64 [a4 + 0x38] = a1\n  2453: a1 = u64 [0x20028]\n  2458: a2 = u64 [0x20030]\n  2463: u64 [s1 + 0xb0] = a3\n  2467: a3 = u64 [0x20038]\n  2472: u64 [a4 + 0x30] = a1\n  2475: u64 [a4 + 0x28] = a2\n  2478: a1 = s1 + 0x120\n  2482: u64 [a4 + 0x20] = a3\n  2485: ra = 48, jump @4\n      : @51 [@dyn 24] (gas: 9)\n  2490: a0 = u64 [s1 + 0xb0]\n  2494: a0 = a0 + 0xffffffffffffff9c\n  2497: a1 = u64 [s1 + 0x98]\n  2501: a0 = a1 <u a0\n  2504: a1 = u64 [s1 + 0x60]\n  2507: a0 = 0 if a1 != 0\n  2509: a1 = u64 [s1 + 0xb8]\n  2513: a0 = 0 if a1 != 0\n  2515: jump @62 if a0 == 0\n      : @52 (gas: 9)\n  2519: a0 = u64 [s1 + 0x98]\n  2523: i32 a0 = a0 + 0x64\n  2526: u64 [s1 + 272] = 0\n  2530: u64 [s1 + 264] = 0\n  2534: a1 = 0x3000000000000000\n  2544: u64 [s1 + 0x118] = a1\n  2548: a1 = s1 + 0x100\n  2552: u64 [s1 + 256] = 0\n  2556: ra = 50, jump @4\n      : @53 [@dyn 25] (gas: 3)\n  2561: a1 = 0x84\n  2565: a0 = u64 [s1 + 0x98]\n  2569: ra = 52, jump @13\n      : @54 [@dyn 26] (gas: 5)\n  2574: i32 a1 = a0 + 0\n  2576: a0 = 0x1\n  2579: a2 = 0x84\n  2583: ecalli 12 // 'seal_return'\n  2585: fallthrough\n      : @55 (gas: 20)\n  2586: a0 = 0xffffffff00000000\n  2596: u64 [s1 + 0xb8] = a0\n  2600: a2 = 0xffffffff\n  2610: u64 [s1 + 0xb0] = a2\n  2614: a0 = u64 [s1 + 0x20]\n  2617: a0 = a0 & 0xffffffffffffffff\n  2620: u64 [s1 + 0xa8] = a0\n  2624: a0 = u64 [s1 + 0x28]\n  2627: a0 = a0 & 0xffffffffffffffff\n  2630: u64 [s1 + 0x98] = a0\n  2634: a0 = u64 [s1 + 0x30]\n  2637: a0 = a0 & a2\n  2640: u64 [s1 + 0x90] = a0\n  2644: u64 [s1 + 1016] = 0\n  2648: u64 [s1 + 1008] = 0\n  2652: u64 [s1 + 1000] = 0\n  2656: u64 [s1 + 992] = 0x1\n  2661: a0 = s1 + 0x1e0\n  2665: a1 = s1 + 0x3e0\n  2669: ra = 54, jump @6\n      : @56 [@dyn 27] (gas: 20)\n  2674: a0 = u64 [s1 + 0x1f8]\n  2678: a1 = u64 [s1 + 0x1f0]\n  2682: a0 = a0 & 0xffffffffffffffff\n  2685: a2 = u64 [s1 + 0xb8]\n  2689: a1 = a1 & a2\n  2692: a2 = u64 [s1 + 0x90]\n  2696: a1 = a1 | a2\n  2699: u64 [s1 + 1048] = 0\n  2703: u64 [s1 + 1040] = 0\n  2707: u64 [s1 + 1032] = 0\n  2711: u64 [s1 + 1024] = 0x1\n  2716: a2 = u64 [s1 + 0x98]\n  2720: u64 [s1 + 0x428] = a2\n  2724: a2 = u64 [s1 + 0xa8]\n  2728: u64 [s1 + 0x420] = a2\n  2732: u64 [s1 + 0x438] = a0\n  2736: u64 [s1 + 0x430] = a1\n  2740: a0 = s1 + 0x400\n  2744: a1 = s1 + 0x420\n  2748: ra = 56, jump @7\n      : @57 [@dyn 28] (gas: 17)\n  2753: a0 = u64 [s1 + 0x38]\n  2756: a0 = a0 & 0xffffffffffffffff\n  2759: u64 [s1 + 0xa8] = a0\n  2763: a0 = u64 [s1 + 0x40]\n  2766: a0 = a0 & 0xffffffffffffffff\n  2769: u64 [s1 + 0x98] = a0\n  2773: a0 = u64 [s1 + 0x48]\n  2776: a1 = u64 [s1 + 0xb0]\n  2780: a0 = a0 & a1\n  2783: u64 [s1 + 0xb0] = a0\n  2787: u64 [s1 + 1112] = 0\n  2791: u64 [s1 + 1104] = 0\n  2795: u64 [s1 + 1096] = 0\n  2799: u64 [s1 + 1088] = 0x2\n  2804: a0 = s1 + 0x1c0\n  2808: a1 = s1 + 0x440\n  2812: ra = 58, jump @6\n      : @58 [@dyn 29] (gas: 20)\n  2817: a0 = u64 [s1 + 0x1d8]\n  2821: a1 = u64 [s1 + 0x1d0]\n  2825: a0 = a0 & 0xffffffffffffffff\n  2828: a2 = u64 [s1 + 0xb8]\n  2832: a1 = a1 & a2\n  2835: a2 = u64 [s1 + 0xb0]\n  2839: a1 = a1 | a2\n  2842: u64 [s1 + 1144] = 0\n  2846: u64 [s1 + 1136] = 0\n  2850: u64 [s1 + 1128] = 0\n  2854: u64 [s1 + 1120] = 0x2\n  2859: a2 = u64 [s1 + 0x98]\n  2863: u64 [s1 + 0x488] = a2\n  2867: a2 = u64 [s1 + 0xa8]\n  2871: u64 [s1 + 0x480] = a2\n  2875: u64 [s1 + 0x498] = a0\n  2879: u64 [s1 + 0x490] = a1\n  2883: a0 = s1 + 0x460\n  2887: a1 = s1 + 0x480\n  2891: ra = 60, jump @7\n      : @59 [@dyn 30] (gas: 7)\n  2896: u64 [s1 + 1208] = 0\n  2900: u64 [s1 + 1200] = 0\n  2904: u64 [s1 + 1192] = 0\n  2908: u64 [s1 + 1184] = 0x3\n  2913: a0 = s1 + 0x4a0\n  2917: a1 = u64 [s1 + 0xa0]\n  2921: ra = 62, jump @7\n      : @60 [@dyn 31] (gas: 3)\n  2926: a0 = s1 + 0x1a0\n  2930: a1 = 0x40\n  2933: ra = 64, jump @2\n      : @61 [@dyn 32] (gas: 13)\n  2938: a4 = s1 + 0x100\n  2942: a3 = u64 [a4 + 0xb8]\n  2946: a1 = u64 [a4 + 0xb0]\n  2950: a2 = u64 [a4 + 0xa8]\n  2954: a0 = u64 [a4 + 0xa0]\n  2958: a3 = a3 | a2\n  2961: a2 = a0 | a1\n  2964: a2 = a2 | a3\n  2967: a2 = a2 >> 0x20\n  2970: a1 = a1 | a3\n  2973: a1 = a1 << 0x20\n  2976: a1 = a1 | a2\n  2979: jump @70 if a1 == 0\n      : @62 (gas: 1)\n  2983: trap\n      : @63 (gas: 6)\n  2984: a1 = 0x201d0\n  2989: i32 a1 = a1 + 0\n  2991: a0 = 0x1\n  2994: a2 = 0\n  2996: ecalli 12 // 'seal_return'\n  2998: jump @65\n      : @64 (gas: 6)\n  3000: a1 = 0x201d0\n  3005: i32 a1 = a1 + 0\n  3007: a0 = 0x1\n  3010: a2 = 0\n  3012: ecalli 12 // 'seal_return'\n  3014: fallthrough\n      : @65 (gas: 8)\n  3015: u64 [s1 + 240] = 0\n  3019: u64 [s1 + 232] = 0\n  3023: u64 [s1 + 224] = 0\n  3027: a0 = 0x1e4fbdf700000000\n  3037: a1 = s1 + 0xe0\n  3041: u64 [s1 + 0xf8] = a0\n  3045: a0 = 0\n  3047: ra = 66, jump @4\n      : @66 [@dyn 33] (gas: 7)\n  3052: u64 [s1 + 216] = 0\n  3056: u64 [s1 + 208] = 0\n  3060: u64 [s1 + 200] = 0\n  3064: a0 = 0x4\n  3067: a1 = s1 + 0xc0\n  3071: u64 [s1 + 192] = 0\n  3075: ra = 68, jump @4\n      : @67 [@dyn 34] (gas: 2)\n  3080: a1 = i32 [0x201c4]\n  3085: jump @69 if a1 >u 63\n      : @68 (gas: 2)\n  3089: u32 [0x201c4] = 0x40\n  3095: fallthrough\n      : @69 (gas: 8)\n  3096: a1 = 0x201d0\n  3101: i32 a1 = a1 + 0\n  3103: a0 = 0x1\n  3106: a2 = 0x24\n  3109: ecalli 12 // 'seal_return'\n  3111: u64 [s1 + 0xb8] = a0\n  3115: ra = 0x46\n  3118: jump @13\n      : @70 (gas: 2)\n  3121: u64 [s1 + 0xb8] = a0\n  3125: ra = 70, jump @13\n      : @71 [@dyn 35] (gas: 5)\n  3130: i32 a0 = a0 + 0\n  3132: a1 = 0\n  3134: a2 = 0\n  3136: ecalli 2 // 'call_data_copy'\n  3138: jump @0\n      : @72 (gas: 3)\n  3141: a0 = u64 [s1 + 0xb8]\n  3145: a1 = 0\n  3147: ra = 72, jump @13\n      : @73 [@dyn 36] (gas: 5)\n  3152: i32 a1 = a0 + 0\n  3154: a0 = 0\n  3156: a2 = 0\n  3158: ecalli 12 // 'seal_return'\n  3160: jump @65\n      : @74 [@dyn 37] (gas: 4)\n  3163: a0 = 0x201c0\n  3168: u64 [s1 + 0xd8] = a0\n  3172: a0 = i32 [0x201c0]\n  3177: jump @76 if a0 >=u 4\n      : @75 (gas: 1)\n  3181: jump @718\n      : @76 (gas: 6)\n  3184: a0 = s1 + 0x2000\n  3188: i32 a0 = a0 + 0xfffffffffffffc40\n  3192: a1 = 0\n  3194: ra = 0x4c\n  3197: ecalli 3 // 'call_data_load'\n  3199: fallthrough\n      : @77 [@dyn 38] (gas: 3)\n  3200: a3 = s1 + 0x1878\n  3204: a0 = i32 [a3 + 0x3e4]\n  3208: jump @79 if a0 != 2357215170\n      : @78 (gas: 1)\n  3215: jump @333\n      : @79 (gas: 1)\n  3218: jump @184 if a0 == 2376452955\n      : @80 (gas: 2)\n  3226: a2 = s1 + 0x2078\n  3230: jump @82 if a0 != 2863441240\n      : @81 (gas: 1)\n  3237: jump @375\n      : @82 (gas: 1)\n  3240: jump @84 if a0 != 2876972169\n      : @83 (gas: 1)\n  3247: jump @243\n      : @84 (gas: 1)\n  3250: jump @86 if a0 != 2986437588\n      : @85 (gas: 1)\n  3257: jump @323\n      : @86 (gas: 1)\n  3260: jump @88 if a0 != 3049398615\n      : @87 (gas: 1)\n  3267: jump @300\n      : @88 (gas: 1)\n  3270: jump @128 if a0 == 3134496799\n      : @89 (gas: 1)\n  3278: jump @91 if a0 != 3741391937\n      : @90 (gas: 1)\n  3285: jump @231\n      : @91 (gas: 1)\n  3288: jump @195 if a0 == 3903314574\n      : @92 (gas: 1)\n  3296: jump @94 if a0 == 1628634670\n      : @93 (gas: 1)\n  3303: jump @273\n      : @94 (gas: 8)\n  3306: u64 [a3 + 1120] = 0\n  3310: u64 [a3 + 1112] = 0\n  3314: u64 [a3 + 1104] = 0\n  3318: u64 [a3 + 1096] = 0\n  3322: a0 = s1 + 0x2000\n  3326: i32 a0 = a0 + 0xfffffffffffffcc0\n  3330: ecalli 15 // 'value_transferred'\n  3332: fallthrough\n      : @95 (gas: 10)\n  3333: a3 = s1 + 0x1878\n  3337: a4 = a3 + 0x400\n  3341: a0 = u64 [a4 + 0x58]\n  3344: a1 = u64 [a4 + 0x60]\n  3347: a2 = u64 [a4 + 0x50]\n  3350: a3 = u64 [a4 + 0x48]\n  3353: a1 = a1 | a2\n  3356: a0 = a0 | a3\n  3359: a0 = a0 | a1\n  3362: jump @97 if a0 == 0\n      : @96 (gas: 1)\n  3365: jump @662\n      : @97 (gas: 3)\n  3368: a0 = u64 [s1 + 0xd8]\n  3372: a0 = i32 [a0]\n  3374: jump @99 if a0 >u 35\n      : @98 (gas: 1)\n  3378: jump @663\n      : @99 (gas: 26)\n  3381: a0 = s1 + 0x2000\n  3385: i32 a0 = a0 + 0xfffffffffffffce0\n  3389: a1 = 0x4\n  3392: ecalli 3 // 'call_data_load'\n  3394: a0 = s1 + 0x1878\n  3398: a5 = a0 + 0x400\n  3402: a1 = u64 [a5 + 0x80]\n  3406: a2 = u64 [a5 + 0x78]\n  3409: a3 = u64 [a5 + 0x70]\n  3412: a4 = u64 [a5 + 0x68]\n  3415: u64 [s1 + 0xd0] = a1\n  3419: u64 [s1 + 0xc0] = a3\n  3423: a0 = a3 | a1\n  3426: u64 [s1 + 0xc8] = a2\n  3430: u64 [s1 + 0xb8] = a4\n  3434: a1 = a4 | a2\n  3437: a0 = a0 | a1\n  3440: a0 = a0 >u 0\n  3442: u64 [s1 + 1784] = 0\n  3446: u64 [s1 + 1776] = 0\n  3450: u64 [s1 + 0x6e0] = a0\n  3454: a0 = s1 + 0x6e0\n  3458: u64 [s1 + 1768] = 0\n  3462: ra = 0x4e\n  3465: t0 = 0x2fa\n  3469: jump @941\n      : @100 [@dyn 39] (gas: 9)\n  3472: a0 = 0x301d0\n  3477: u64 [s1 + 0xd8] = a0\n  3481: i32 a0 = a0 + 0\n  3483: u64 [s1 + 0xb0] = a0\n  3487: ra = 0x50\n  3490: ecalli 5 // 'caller'\n  3492: a2 = u64 [s1 + 0xd8]\n  3496: t0 = 0x52\n  3499: jump @923\n      : @101 [@dyn 40] (gas: 2)\n  3502: a2 = u64 [s1 + 0xd8]\n  3506: t0 = 82, jump @923\n      : @102 [@dyn 41] (gas: 7)\n  3511: u64 [s1 + 1752] = 0\n  3515: u64 [s1 + 0x6d0] = a1\n  3519: u64 [s1 + 0x6c8] = a0\n  3523: a1 = s1 + 0x6c0\n  3527: u64 [s1 + 0x6c0] = a3\n  3531: a0 = 0\n  3533: ra = 84, jump @4\n      : @103 [@dyn 42] (gas: 7)\n  3538: u64 [s1 + 1720] = 0\n  3542: u64 [s1 + 1712] = 0\n  3546: u64 [s1 + 1696] = 0x4\n  3551: a0 = 0x20\n  3554: a1 = s1 + 0x6a0\n  3558: u64 [s1 + 1704] = 0\n  3562: ra = 86, jump @4\n      : @104 [@dyn 43] (gas: 3)\n  3567: a2 = 0x201c4\n  3572: a0 = i32 [0x201c4]\n  3577: jump @106 if a0 >u 63\n      : @105 (gas: 2)\n  3581: u32 [0x201c4] = 0x40\n  3587: fallthrough\n      : @106 (gas: 15)\n  3588: u64 [s1 + 0x98] = a2\n  3592: a0 = sp + 0xffffffffffffffe0\n  3595: a2 = a0 & 0xffffffffffffffe0\n  3598: u64 [s1 + 0xa8] = a2\n  3602: sp = a2\n  3604: a0 = 0x201d0\n  3609: i32 a0 = a0 + 0\n  3611: i32 a2 = a2 + 0\n  3613: a1 = 0x40\n  3616: u64 [s1 + 0xa0] = a0\n  3620: ra = 0x58\n  3623: ecalli 8 // 'hash_keccak_256'\n  3625: a3 = u64 [s1 + 0xa8]\n  3629: t0 = 0x5a\n  3632: jump @927\n      : @107 [@dyn 44] (gas: 2)\n  3635: a3 = u64 [s1 + 0xa8]\n  3639: t0 = 90, jump @927\n      : @108 [@dyn 45] (gas: 7)\n  3644: u64 [a5 + 0xa0] = a3\n  3648: u64 [a5 + 0x98] = a2\n  3652: u64 [a5 + 0x90] = a1\n  3656: u64 [a5 + 0x88] = a0\n  3660: a0 = s1 + 0x680\n  3664: a1 = s1 + 0x1d00\n  3668: ra = 92, jump @6\n      : @109 [@dyn 46] (gas: 21)\n  3673: a1 = s1 + 0x600\n  3677: a0 = u64 [a1 + 0x98]\n  3681: t0 = u64 [s1 + 0x680]\n  3685: a2 = u64 [a1 + 0x90]\n  3689: a3 = u64 [a1 + 0x88]\n  3693: a5 = u64 [s1 + 0xd0]\n  3697: a4 = a0 ^ a5\n  3700: a1 = a0 <u a5\n  3703: a0 = u64 [s1 + 0xc8]\n  3707: a5 = a2 <u a0\n  3710: a5 = a1 if a4 != 0\n  3713: a1 = u64 [s1 + 0xc0]\n  3717: t1 = a3 ^ a1\n  3720: a3 = a3 <u a1\n  3723: a1 = u64 [s1 + 0xb8]\n  3727: a1 = t0 <u a1\n  3730: a1 = a3 if t1 != 0\n  3733: a0 = a0 ^ a2\n  3736: a0 = a0 | a4\n  3739: a1 = a5 if a0 != 0\n  3742: jump @111 if a1 != 0\n      : @110 (gas: 1)\n  3745: jump @403\n      : @111 (gas: 3)\n  3748: a0 = s1 + 0x1e0\n  3752: a1 = 0x40\n  3755: ra = 94, jump @2\n      : @112 [@dyn 47] (gas: 6)\n  3760: a1 = s1 + 0x100\n  3764: a4 = u64 [a1 + 0xf8]\n  3768: a5 = u64 [a1 + 0xf0]\n  3772: a3 = u64 [a1 + 0xe8]\n  3776: a0 = u64 [a1 + 0xe0]\n  3780: t0 = 96, jump @939\n      : @113 [@dyn 48] (gas: 1)\n  3785: jump @115 if a1 == 0\n      : @114 (gas: 1)\n  3788: jump @385\n      : @115 (gas: 11)\n  3791: u64 [s1 + 464] = 0\n  3795: u64 [s1 + 456] = 0\n  3799: u64 [s1 + 448] = 0\n  3803: a2 = 0x8c379a000000000\n  3813: a1 = s1 + 0x1c0\n  3817: u64 [s1 + 0x1d8] = a2\n  3821: u64 [s1 + 0xd8] = a0\n  3825: u64 [s1 + 0xd0] = a3\n  3829: u64 [s1 + 0xc8] = a4\n  3833: u64 [s1 + 0xc0] = a5\n  3837: ra = 98, jump @4\n      : @116 [@dyn 49] (gas: 5)\n  3842: a1 = u64 [s1 + 0xd8]\n  3846: a0 = u64 [s1 + 0xc8]\n  3850: a3 = u64 [s1 + 0xc0]\n  3854: a3 = a3 | a0\n  3857: t0 = 100, jump @925\n      : @117 [@dyn 50] (gas: 1)\n  3862: jump @119 if a0 != 0\n      : @118 (gas: 1)\n  3865: jump @385\n      : @119 (gas: 9)\n  3868: i32 a0 = a1 + 0x4\n  3871: u64 [s1 + 440] = 0\n  3875: u64 [s1 + 432] = 0\n  3879: u64 [s1 + 416] = 0x20\n  3884: a1 = s1 + 0x1a0\n  3888: u64 [s1 + 424] = 0\n  3892: u64 [s1 + 0xc8] = a3\n  3896: u64 [s1 + 0xc0] = a4\n  3900: ra = 102, jump @4\n      : @120 [@dyn 51] (gas: 1)\n  3905: t0 = 104, jump @931\n      : @121 [@dyn 52] (gas: 1)\n  3910: jump @123 if a0 != 0\n      : @122 (gas: 1)\n  3913: jump @385\n      : @123 (gas: 7)\n  3916: i32 a0 = a1 + 0x24\n  3919: u64 [s1 + 408] = 0\n  3923: u64 [s1 + 400] = 0\n  3927: u64 [s1 + 384] = 0x17\n  3932: a1 = s1 + 0x180\n  3936: u64 [s1 + 392] = 0\n  3940: ra = 106, jump @4\n      : @124 [@dyn 53] (gas: 4)\n  3945: a2 = u64 [s1 + 0xd8]\n  3949: a0 = 0xffffffbc\n  3959: a0 = a2 <u a0\n  3962: t0 = 108, jump @935\n      : @125 [@dyn 54] (gas: 1)\n  3967: jump @127 if a0 != 0\n      : @126 (gas: 1)\n  3970: jump @385\n      : @127 (gas: 12)\n  3973: i32 a0 = a2 + 0x44\n  3976: a1 = u64 [0x20178]\n  3981: a2 = u64 [0x20180]\n  3986: a3 = u64 [0x20188]\n  3991: a4 = s1 + 0x100\n  3995: u64 [a4 + 0x78] = a1\n  3998: u64 [a4 + 0x70] = a2\n  4001: u64 [a4 + 0x68] = a3\n  4004: a1 = s1 + 0x160\n  4008: u64 [s1 + 352] = 0\n  4012: ra = 0x236\n  4016: jump @4\n      : @128 (gas: 9)\n  4019: u64 [a2 + 672] = 0\n  4023: u64 [a2 + 664] = 0\n  4027: u64 [a2 + 656] = 0\n  4031: u64 [a2 + 648] = 0\n  4035: a0 = s1 + 0x2000\n  4039: i32 a0 = a0 + 0x300\n  4043: ra = 0x6e\n  4046: ecalli 15 // 'value_transferred'\n  4048: fallthrough\n      : @129 [@dyn 55] (gas: 3)\n  4049: a3 = s1 + 0x2078\n  4053: a4 = a3 + 0x200\n  4057: t0 = 112, jump @953\n      : @130 [@dyn 56] (gas: 1)\n  4062: jump @132 if a0 == 0\n      : @131 (gas: 1)\n  4065: jump @664\n      : @132 (gas: 3)\n  4068: a0 = u64 [s1 + 0xd8]\n  4072: a0 = i32 [a0]\n  4074: jump @134 if a0 >u 35\n      : @133 (gas: 1)\n  4078: jump @665\n      : @134 (gas: 27)\n  4081: a0 = s1 + 0x2000\n  4085: i32 a0 = a0 + 0x320\n  4089: a1 = 0x4\n  4092: ecalli 3 // 'call_data_load'\n  4094: a0 = s1 + 0x2078\n  4098: a5 = a0 + 0x200\n  4102: a1 = u64 [a5 + 0xc0]\n  4106: a2 = u64 [a5 + 0xb8]\n  4110: a3 = u64 [a5 + 0xb0]\n  4114: a4 = u64 [a5 + 0xa8]\n  4118: u64 [s1 + 0xc8] = a1\n  4122: u64 [s1 + 0xb8] = a3\n  4126: a0 = a3 | a1\n  4129: u64 [s1 + 0xc0] = a2\n  4133: u64 [s1 + 0xb0] = a4\n  4137: a1 = a4 | a2\n  4140: a0 = a0 | a1\n  4143: a0 = a0 >u 0\n  4145: a1 = s1 + 0x1878\n  4149: u64 [a1 + 128] = 0\n  4153: u64 [a1 + 120] = 0\n  4156: u64 [a1 + 0x68] = a0\n  4159: a0 = s1 + 0x18e0\n  4163: u64 [a1 + 112] = 0\n  4166: ra = 0x72\n  4169: t0 = 0x2fa\n  4173: jump @941\n      : @135 [@dyn 57] (gas: 9)\n  4176: a0 = 0x301d0\n  4181: u64 [s1 + 0xd8] = a0\n  4185: i32 a0 = a0 + 0\n  4187: u64 [s1 + 0xa8] = a0\n  4191: ra = 0x74\n  4194: ecalli 5 // 'caller'\n  4196: a2 = u64 [s1 + 0xd8]\n  4200: t0 = 0x76\n  4203: jump @923\n      : @136 [@dyn 58] (gas: 2)\n  4206: a2 = u64 [s1 + 0xd8]\n  4210: t0 = 118, jump @923\n      : @137 [@dyn 59] (gas: 8)\n  4215: a2 = s1 + 0x1878\n  4219: u64 [a2 + 96] = 0\n  4222: u64 [a2 + 0x58] = a1\n  4225: u64 [a2 + 0x50] = a0\n  4228: a1 = s1 + 0x18c0\n  4232: u64 [a2 + 0x48] = a3\n  4235: a0 = 0\n  4237: ra = 120, jump @4\n      : @138 [@dyn 60] (gas: 3)\n  4242: t0 = 0x7a\n  4245: a1 = s1 + 0x1878\n  4249: fallthrough\n      : @139 [@dyn 61] (gas: 8)\n  4250: u64 [a1 + 64] = 0\n  4253: u64 [a1 + 56] = 0\n  4256: u64 [a1 + 40] = 0x4\n  4260: a2 = a1\n  4262: a0 = 0x20\n  4265: a1 = s1 + 0x18a0\n  4269: u64 [a2 + 48] = 0\n  4272: ra = 124, jump @4\n      : @140 [@dyn 62] (gas: 7)\n  4277: a0 = sp + 0xffffffffffffffe0\n  4280: a0 = a0 & 0xffffffffffffffe0\n  4283: u64 [s1 + 0xd0] = a0\n  4287: sp = a0\n  4289: a2 = 0x201c4\n  4294: a0 = i32 [0x201c4]\n  4299: jump @142 if a0 >u 63\n      : @141 (gas: 2)\n  4303: u32 [0x201c4] = 0x40\n  4309: fallthrough\n      : @142 (gas: 15)\n  4310: u64 [s1 + 0x98] = a2\n  4314: a0 = sp + 0xffffffffffffffe0\n  4317: a2 = a0 & 0xffffffffffffffe0\n  4320: u64 [s1 + 0xa0] = a2\n  4324: sp = a2\n  4326: a0 = 0x201d0\n  4331: i32 a0 = a0 + 0\n  4333: i32 a2 = a2 + 0\n  4335: a1 = 0x40\n  4338: u64 [s1 + 0x68] = a0\n  4341: ra = 0x7e\n  4344: ecalli 8 // 'hash_keccak_256'\n  4346: a3 = u64 [s1 + 0xa0]\n  4350: t0 = 0x80\n  4354: jump @946\n      : @143 [@dyn 63] (gas: 2)\n  4357: a3 = u64 [s1 + 0xa0]\n  4361: t0 = 128, jump @946\n      : @144 [@dyn 64] (gas: 7)\n  4367: a1 = u64 [s1 + 0xd0]\n  4371: u64 [a1 + 0x18] = a3\n  4374: u64 [a1 + 0x10] = a2\n  4377: u64 [a1 + 0x8] = a4\n  4380: u64 [a1] = a0\n  4382: a0 = s1 + 0x1880\n  4386: ra = 130, jump @6\n      : @145 [@dyn 65] (gas: 2)\n  4392: a1 = s1 + 0x1878\n  4396: fallthrough\n      : @146 (gas: 37)\n  4397: t2 = u64 [a1 + 0x20]\n  4400: a0 = u64 [a1 + 0x18]\n  4403: a4 = u64 [a1 + 0x8]\n  4406: a5 = u64 [a1 + 0x10]\n  4409: a1 = sp + 0xffffffffffffffe0\n  4412: a1 = a1 & 0xffffffffffffffe0\n  4415: sp = a1\n  4417: a3 = u64 [s1 + 0xb8]\n  4421: a3 = a3 + a5\n  4424: t0 = u64 [s1 + 0xb0]\n  4428: t0 = t0 + a4\n  4431: a4 = t0 <u a4\n  4434: a3 = a3 + a4\n  4437: t1 = a3 ^ a5\n  4440: a2 = a3 <u a5\n  4443: a2 = a4 if t1 == 0\n  4446: a4 = u64 [s1 + 0xc0]\n  4450: a4 = a4 + a0\n  4453: a5 = a4 + a2\n  4456: t1 = a5 <u a4\n  4459: ra = u64 [s1 + 0xc8]\n  4463: ra = ra + t2\n  4466: a4 = a4 <u a0\n  4469: a4 = a4 + ra\n  4472: ra = a4 + t1\n  4475: t1 = a5 <u a0\n  4478: a4 = t2 ^ ra\n  4481: t2 = ra <u t2\n  4484: t2 = t1 if a4 == 0\n  4487: a0 = a0 ^ a5\n  4490: a0 = a0 | a4\n  4493: t2 = a2 if a0 == 0\n  4496: u64 [a1 + 0x10] = a5\n  4499: u64 [a1 + 0x8] = a3\n  4502: u64 [a1] = t0\n  4504: u64 [a1 + 0x18] = ra\n  4507: jump @148 if t2 == 0\n      : @147 (gas: 1)\n  4510: jump @666\n      : @148 (gas: 2)\n  4513: a0 = u64 [s1 + 0xd0]\n  4517: ra = 132, jump @7\n      : @149 [@dyn 66] (gas: 8)\n  4523: a1 = s1 + 0x2078\n  4527: u64 [a1 + 736] = 0\n  4531: u64 [a1 + 728] = 0\n  4535: u64 [a1 + 720] = 0\n  4539: u64 [a1 + 712] = 0x1\n  4544: a0 = s1 + 0x1860\n  4548: a1 = s1 + 0x2340\n  4552: ra = 134, jump @6\n      : @150 [@dyn 67] (gas: 3)\n  4558: t0 = 0x88\n  4562: a1 = s1 + 0x1878\n  4566: fallthrough\n      : @151 [@dyn 68] (gas: 10)\n  4567: a2 = a1 + 0xffffffffffffff00\n  4571: a0 = u64 [a2 + 0xf8]\n  4575: u64 [s1 + 0x80] = a0\n  4579: a0 = u64 [a2 + 0xf0]\n  4583: u64 [s1 + 0x78] = a0\n  4586: a0 = u64 [a2 + 0xe8]\n  4590: u64 [s1 + 0x88] = a0\n  4594: a0 = s1 + 0x1840\n  4598: a1 = 0x40\n  4601: ra = 138, jump @2\n      : @152 [@dyn 69] (gas: 14)\n  4607: a2 = s1 + 0x1078\n  4611: t0 = u64 [a2 + 0x7e0]\n  4615: a1 = a2 + 0x700\n  4619: a5 = u64 [a1 + 0xd8]\n  4623: a4 = u64 [a1 + 0xd0]\n  4627: a0 = u64 [a1 + 0xc8]\n  4631: a3 = a4 | t0\n  4634: a1 = a0 | a5\n  4637: a1 = a1 | a3\n  4640: a1 = a1 >> 0x20\n  4643: a3 = a3 | a5\n  4646: a3 = a3 << 0x20\n  4649: a1 = a1 | a3\n  4652: jump @154 if a1 == 0\n      : @153 (gas: 1)\n  4655: jump @385\n      : @154 (gas: 11)\n  4658: u64 [a2 + 1976] = 0\n  4662: u64 [a2 + 1968] = 0\n  4666: u64 [a2 + 1960] = 0\n  4670: a3 = 0x23b872dd00000000\n  4680: a1 = s1 + 0x1820\n  4684: u64 [a2 + 0x7c0] = a3\n  4688: u64 [s1 + 0xd0] = a0\n  4692: u64 [s1 + 0xa0] = a4\n  4696: u64 [s1 + 0x98] = a5\n  4700: u64 [s1 + 0x90] = t0\n  4704: ra = 140, jump @4\n      : @155 [@dyn 70] (gas: 6)\n  4710: a0 = u64 [s1 + 0xa8]\n  4714: ra = 0x8e\n  4718: ecalli 0 // 'address'\n  4719: a2 = u64 [s1 + 0xd8]\n  4723: t0 = 0x90\n  4727: jump @933\n      : @156 [@dyn 71] (gas: 2)\n  4730: a2 = u64 [s1 + 0xd8]\n  4734: t0 = 144, jump @933\n      : @157 [@dyn 72] (gas: 14)\n  4740: u64 [s1 + 0x70] = a1\n  4743: a0 = a0 >> 0x20\n  4746: a1 = reverse a2\n  4748: a2 = a1 << 0x20\n  4751: a0 = a0 | a2\n  4754: u64 [s1 + 0x60] = a0\n  4757: a1 = a1 >> 0x20\n  4760: u64 [s1 + 0x58] = a1\n  4763: a0 = u64 [s1 + 0xa8]\n  4767: ra = 0x92\n  4771: ecalli 5 // 'caller'\n  4773: a2 = u64 [s1 + 0xd8]\n  4777: t0 = 0x94\n  4781: jump @926\n      : @158 [@dyn 73] (gas: 2)\n  4784: a2 = u64 [s1 + 0xd8]\n  4788: t0 = 148, jump @926\n      : @159 [@dyn 74] (gas: 50)\n  4794: t0 = a1 | a0\n  4797: a3 = a3 >> 0x20\n  4800: a2 = reverse a2\n  4802: a1 = a2 << 0x20\n  4805: t1 = a1 | a3\n  4808: t2 = a2 >> 0x20\n  4811: a0 = u64 [s1 + 0xd0]\n  4815: a3 = a0 + 0x4\n  4818: a5 = a3 <u a0\n  4821: a0 = u64 [s1 + 0xa0]\n  4825: a4 = a0 + a5\n  4828: a0 = a4 <u a0\n  4831: a0 = a5 if a5 == 0\n  4834: a1 = u64 [s1 + 0x98]\n  4838: a0 = a0 + a1\n  4841: a5 = a0 <u a1\n  4844: a1 = u64 [s1 + 0x90]\n  4848: a5 = a5 + a1\n  4851: a1 = s1 + 0x1078\n  4855: a2 = u64 [s1 + 0x58]\n  4858: u64 [a1 + 0x738] = a2\n  4862: a2 = u64 [s1 + 0x60]\n  4865: u64 [a1 + 0x730] = a2\n  4869: a2 = u64 [s1 + 0x70]\n  4872: u64 [a1 + 0x728] = a2\n  4876: a2 = a1 + 0x700\n  4880: u64 [a2 + 0x80] = a5\n  4884: u64 [a2 + 0x78] = a0\n  4887: a0 = u64 [s1 + 0xc8]\n  4891: u64 [a2 + 0x20] = a0\n  4894: a0 = u64 [s1 + 0xc0]\n  4898: u64 [a2 + 0x18] = a0\n  4901: a0 = u64 [s1 + 0xb8]\n  4905: u64 [a2 + 0x10] = a0\n  4908: a0 = u64 [s1 + 0xb0]\n  4912: u64 [a2 + 0x8] = a0\n  4915: u64 [a1 + 1856] = 0\n  4919: u64 [a2 + 0x70] = a4\n  4922: u64 [a2 + 0x68] = a3\n  4925: u64 [a1 + 0x758] = t2\n  4929: u64 [a1 + 0x750] = t1\n  4933: u64 [a1 + 0x748] = t0\n  4937: a5 = a1\n  4939: a0 = s1 + 0x1800\n  4943: a1 = s1 + 0x17e0\n  4947: a2 = s1 + 0x17c0\n  4951: a3 = s1 + 0x17a0\n  4955: a4 = s1 + 0x1780\n  4959: u64 [a5 + 1888] = 0\n  4963: ra = 150, jump @854\n      : @160 [@dyn 75] (gas: 17)\n  4969: a1 = s1 + 0x1078\n  4973: a0 = u64 [a1 + 0x790]\n  4977: t0 = u64 [a1 + 0x7a0]\n  4981: t1 = u64 [a1 + 0x788]\n  4985: a3 = u64 [a1 + 0x798]\n  4989: a1 = u64 [s1 + 0xa0]\n  4993: a4 = a0 ^ a1\n  4996: a5 = a0 <u a1\n  4999: ra = u64 [s1 + 0xd0]\n  5003: t2 = t1 <u ra\n  5006: a5 = t2 if a4 == 0\n  5009: a2 = u64 [s1 + 0x98]\n  5013: a4 = a3 - a2\n  5016: a3 = a3 <u a2\n  5019: a2 = u64 [s1 + 0x90]\n  5023: a2 = t0 - a2\n  5026: t0 = 152, jump @942\n      : @161 [@dyn 76] (gas: 4)\n  5032: u64 [s1 + 0x70] = a0\n  5035: ra = 0x9a\n  5039: ecalli 9 // 'ref_time_left'\n  5041: fallthrough\n      : @162 [@dyn 77] (gas: 14)\n  5042: a0 = u64 [s1 + 0x78]\n  5045: a0 = reverse a0\n  5047: a1 = a0 << 0x20\n  5050: a2 = u64 [s1 + 0x80]\n  5054: a2 = reverse a2\n  5056: a2 = a2 >> 0x20\n  5059: a1 = a1 | a2\n  5062: a2 = u64 [s1 + 0x88]\n  5066: a2 = reverse a2\n  5068: a3 = a2 << 0x20\n  5071: a0 = a0 >> 0x20\n  5074: a0 = a0 | a3\n  5077: a3 = u64 [s1 + 0xd8]\n  5081: t0 = 156, jump @938\n      : @163 [@dyn 78] (gas: 17)\n  5087: u64 [a2 + 768] = 0\n  5091: u64 [a2 + 760] = 0\n  5095: u64 [a2 + 752] = 0\n  5099: a0 = u64 [s1 + 0x70]\n  5102: t0 = a0\n  5104: a5 = u64 [s1 + 0x58]\n  5107: a0 = a0 | a5\n  5110: a1 = u64 [s1 + 0x60]\n  5113: a4 = u64 [s1 + 0x50]\n  5116: a1 = a1 | a4\n  5119: a0 = a0 | a1\n  5122: a0 = a0 >> 0x20\n  5125: a1 = a1 | a5\n  5128: a1 = a1 << 0x20\n  5131: a0 = a0 | a1\n  5134: u64 [a2 + 744] = 0\n  5138: jump @165 if a0 == 0\n      : @164 (gas: 1)\n  5141: jump @385\n      : @165 (gas: 3)\n  5144: a0 = u64 [s1 + 0xd0]\n  5148: a1 = t0\n  5150: ra = 158, jump @13\n      : @166 [@dyn 79] (gas: 4)\n  5156: u64 [s1 + 0x88] = a0\n  5160: a1 = 0x20\n  5163: a0 = u64 [s1 + 0xd0]\n  5167: ra = 160, jump @13\n      : @167 [@dyn 80] (gas: 34)\n  5173: a2 = s1 + 0x2078\n  5177: a3 = a2 + 0x300\n  5181: u32 [a3 + 8] = 0x20\n  5185: u64 [a3 + 64] = 0xffffffffffffffff\n  5189: u64 [a3 + 56] = 0xffffffffffffffff\n  5193: u64 [a3 + 48] = 0xffffffffffffffff\n  5197: u64 [a3 + 40] = 0xffffffffffffffff\n  5201: a1 = u64 [s1 + 0xd8]\n  5205: a1 = a1 << 0x20\n  5208: a1 = a1 >> 0x20\n  5211: a2 = 0x800000000\n  5221: t0 = a1 | a2\n  5224: a1 = s1 + 0x2360\n  5228: a1 = a1 << 0x20\n  5231: a1 = a1 >> 0x20\n  5234: a2 = s1 + 0x23a0\n  5238: a2 = a2 << 0x20\n  5241: a3 = a2 | a1\n  5244: a1 = u64 [s1 + 0x88]\n  5248: a1 = a1 << 0x20\n  5251: a1 = a1 >> 0x20\n  5254: a4 = u64 [s1 + 0x70]\n  5257: a4 = a4 << 0x20\n  5260: a4 = a4 | a1\n  5263: a0 = a0 << 0x20\n  5266: a0 = a0 >> 0x20\n  5269: a1 = s1 + 0x2380\n  5273: a1 = a1 << 0x20\n  5276: a5 = a1 | a0\n  5279: a1 = 0xffffffffffffffff\n  5282: a2 = 0xffffffffffffffff\n  5285: a0 = t0\n  5287: ecalli 1 // 'call'\n  5289: fallthrough\n      : @168 (gas: 1)\n  5290: jump @170 if a0 == 0\n      : @169 (gas: 1)\n  5293: jump @521\n      : @170 (gas: 2)\n  5296: ecalli 11 // 'return_data_size'\n  5298: fallthrough\n      : @171 (gas: 2)\n  5299: a1 = 0x20\n  5302: jump @173 if a0 >=u a1\n      : @172 (gas: 3)\n  5305: ecalli 11 // 'return_data_size'\n  5307: a1 = a0\n  5309: fallthrough\n      : @173 (gas: 18)\n  5310: a2 = s1 + 0x1078\n  5314: t0 = u64 [s1 + 0xd0]\n  5318: a4 = u64 [s1 + 0xa0]\n  5322: a5 = u64 [s1 + 0x98]\n  5326: a3 = u64 [s1 + 0x90]\n  5330: u64 [s1 + 0x80] = a1\n  5334: u64 [s1 + 136] = 0\n  5338: u64 [a2 + 0x6a8] = a1\n  5342: u64 [a2 + 0x6c8] = t0\n  5346: u64 [a2 + 1712] = 0\n  5350: u64 [a2 + 0x6d0] = a4\n  5354: u64 [a2 + 1720] = 0\n  5358: u64 [a2 + 0x6d8] = a5\n  5362: u64 [a2 + 1728] = 0\n  5366: a0 = s1 + 0x1740\n  5370: a1 = s1 + 0x1720\n  5374: u64 [a2 + 0x6e0] = a3\n  5378: ra = 162, jump @810\n      : @174 [@dyn 81] (gas: 40)\n  5384: t0 = u64 [s1 + 0xd0]\n  5388: a1 = u64 [s1 + 0x80]\n  5392: a0 = a1 + t0\n  5395: a1 = a0 <u a1\n  5398: t1 = u64 [s1 + 0xa0]\n  5402: a5 = u64 [s1 + 0x88]\n  5406: a2 = a5 + t1\n  5409: a2 = a2 + a1\n  5412: a3 = a2 ^ a5\n  5415: a4 = a2 <u a5\n  5418: a4 = a1 if a3 == 0\n  5421: ra = u64 [s1 + 0x98]\n  5425: a1 = a5 + ra\n  5428: a4 = a4 + a1\n  5431: t2 = a4 <u a1\n  5434: a1 = a1 <u a5\n  5437: a3 = u64 [s1 + 0x90]\n  5441: a5 = a5 + a3\n  5444: a1 = a1 + a5\n  5447: t2 = t2 + a1\n  5450: a1 = s1 + 0x1078\n  5454: u64 [a1 + 0x658] = a4\n  5458: a1 = s1 + 0x1078\n  5462: u64 [a1 + 0x650] = a2\n  5466: a1 = s1 + 0x1078\n  5470: u64 [a1 + 0x648] = a0\n  5474: a0 = s1 + 0x1078\n  5478: u64 [a0 + 0x680] = a3\n  5482: a0 = s1 + 0x1078\n  5486: u64 [a0 + 0x678] = ra\n  5490: a0 = s1 + 0x1078\n  5494: u64 [a0 + 0x670] = t1\n  5498: a0 = s1 + 0x1078\n  5502: u64 [a0 + 0x668] = t0\n  5506: a0 = s1 + 0x1700\n  5510: a1 = s1 + 0x16e0\n  5514: a2 = s1 + 0x16c0\n  5518: a4 = s1 + 0x1078\n  5522: u64 [a4 + 0x660] = t2\n  5526: ra = 164, jump @820\n      : @175 [@dyn 82] (gas: 3)\n  5532: a0 = s1 + 0x16a0\n  5536: a1 = 0x40\n  5539: ra = 166, jump @2\n      : @176 [@dyn 83] (gas: 7)\n  5545: a3 = s1 + 0x1078\n  5549: a5 = a3 + 0x600\n  5553: a0 = u64 [a5 + 0x40]\n  5556: a1 = u64 [a5 + 0x38]\n  5559: a2 = u64 [a5 + 0x30]\n  5562: a4 = u64 [a5 + 0x28]\n  5565: t0 = 168, jump @936\n      : @177 [@dyn 84] (gas: 1)\n  5571: jump @179 if a0 == 0\n      : @178 (gas: 1)\n  5574: jump @385\n      : @179 (gas: 13)\n  5577: a0 = u64 [s1 + 0xb0]\n  5581: a2 = a3 + 0x600\n  5585: u64 [a2 + 0x8] = a0\n  5588: a0 = u64 [s1 + 0xb8]\n  5592: u64 [a2 + 0x10] = a0\n  5595: a0 = u64 [s1 + 0xc0]\n  5599: u64 [a2 + 0x18] = a0\n  5602: a1 = s1 + 0x1680\n  5606: a0 = u64 [s1 + 0xc8]\n  5610: u64 [a2 + 0x20] = a0\n  5613: a0 = a4\n  5615: u64 [s1 + 0xd0] = a4\n  5619: ra = 170, jump @4\n      : @180 [@dyn 85] (gas: 6)\n  5625: a0 = u64 [s1 + 0xa8]\n  5629: ra = 0xac\n  5633: ecalli 5 // 'caller'\n  5635: a2 = u64 [s1 + 0xd8]\n  5639: t0 = 0xae\n  5643: jump @926\n      : @181 [@dyn 86] (gas: 2)\n  5646: a2 = u64 [s1 + 0xd8]\n  5650: t0 = 174, jump @926\n      : @182 [@dyn 87] (gas: 25)\n  5656: t0 = a1 | a0\n  5659: a3 = a3 >> 0x20\n  5662: a2 = reverse a2\n  5664: a1 = a2 << 0x20\n  5667: a1 = a1 | a3\n  5670: a2 = a2 >> 0x20\n  5673: a3 = u64 [0x20060]\n  5678: a0 = s1 + 0x1078\n  5682: u64 [a0 + 0x600] = a3\n  5686: a3 = u64 [0x20068]\n  5691: a4 = u64 [0x20070]\n  5696: a5 = u64 [0x20078]\n  5701: u64 [a0 + 0x5f8] = a3\n  5705: a3 = a0 + 0x500\n  5709: u64 [a3 + 0xf0] = a4\n  5713: u64 [a0 + 1504] = 0\n  5717: u64 [a3 + 0xe8] = a5\n  5721: u64 [a3 + 0xd8] = a2\n  5725: u64 [a3 + 0xd0] = a1\n  5729: a1 = 0x20\n  5732: a2 = s1 + 0x1660\n  5736: a3 = s1 + 0x1640\n  5740: u64 [a0 + 0x5c8] = t0\n  5744: a0 = u64 [s1 + 0xd0]\n  5748: ra = 176, jump @8\n      : @183 [@dyn 88] (gas: 5)\n  5754: a0 = 0\n  5756: a1 = u64 [s1 + 0x68]\n  5759: a2 = 0\n  5761: ecalli 12 // 'seal_return'\n  5763: jump @720\n      : @184 (gas: 9)\n  5766: a0 = s1 + 0x2078\n  5770: u64 [a0 + 128] = 0\n  5774: u64 [a0 + 120] = 0\n  5777: u64 [a0 + 112] = 0\n  5780: u64 [a0 + 104] = 0\n  5783: a0 = s1 + 0x2000\n  5787: i32 a0 = a0 + 0xe0\n  5791: ecalli 15 // 'value_transferred'\n  5793: fallthrough\n      : @185 (gas: 9)\n  5794: a4 = s1 + 0x2078\n  5798: a0 = u64 [a4 + 0x78]\n  5801: a1 = u64 [a4 + 0x80]\n  5805: a2 = u64 [a4 + 0x70]\n  5808: a3 = u64 [a4 + 0x68]\n  5811: a1 = a1 | a2\n  5814: a0 = a0 | a3\n  5817: a0 = a0 | a1\n  5820: jump @187 if a0 == 0\n      : @186 (gas: 1)\n  5823: jump @672\n      : @187 (gas: 3)\n  5826: a0 = u64 [s1 + 0xd8]\n  5830: a0 = i32 [a0]\n  5832: jump @189 if a0 >u 3\n      : @188 (gas: 1)\n  5836: jump @673\n      : @189 (gas: 8)\n  5839: u64 [a4 + 160] = 0\n  5843: u64 [a4 + 152] = 0\n  5847: u64 [a4 + 144] = 0\n  5851: u64 [a4 + 136] = 0\n  5855: a0 = s1 + 0x7ff\n  5859: a0 = a0 + 0x7a1\n  5863: a1 = s1 + 0x2100\n  5867: ra = 178, jump @6\n      : @190 [@dyn 89] (gas: 13)\n  5873: a0 = s1 + 0x7ff\n  5877: a0 = a0 + 0x61\n  5880: a2 = a0 + 0x700\n  5884: a1 = u64 [a2 + 0x50]\n  5887: u64 [s1 + 0xc8] = a1\n  5891: a1 = u64 [a2 + 0x48]\n  5894: u64 [s1 + 0xd8] = a1\n  5898: a0 = u64 [a2 + 0x40]\n  5901: u64 [s1 + 0xd0] = a0\n  5905: a0 = s1 + 0x7ff\n  5909: a0 = a0 + 0x781\n  5913: a1 = 0x40\n  5916: ra = 180, jump @2\n      : @191 [@dyn 90] (gas: 8)\n  5922: a3 = s1 + 0x7ff\n  5926: a3 = a3 + 0x61\n  5929: a5 = a3 + 0x700\n  5933: a4 = u64 [a5 + 0x38]\n  5936: a1 = u64 [a5 + 0x30]\n  5939: a2 = u64 [a5 + 0x28]\n  5942: a0 = u64 [a5 + 0x20]\n  5945: t0 = 182, jump @948\n      : @192 [@dyn 91] (gas: 1)\n  5951: jump @194 if a1 == 0\n      : @193 (gas: 1)\n  5954: jump @385\n      : @194 (gas: 15)\n  5957: a1 = u64 [s1 + 0xc8]\n  5961: a1 = a1 << 0x20\n  5964: a2 = a1 >> 0x20\n  5967: u64 [a3 + 1816] = 0\n  5971: a1 = u64 [s1 + 0xd0]\n  5975: a4 = a3 + 0x700\n  5979: u64 [a4] = a1\n  5981: a1 = u64 [s1 + 0xd8]\n  5985: u64 [a4 + 0x8] = a1\n  5988: a1 = s1 + 0x7ff\n  5992: a1 = a1 + 0x761\n  5996: u64 [a4 + 0x10] = a2\n  5999: u64 [s1 + 0xd8] = a0\n  6003: ra = 0x2bc\n  6007: jump @4\n      : @195 (gas: 8)\n  6010: u64 [a2 + 960] = 0\n  6014: u64 [a2 + 952] = 0\n  6018: u64 [a2 + 944] = 0\n  6022: u64 [a2 + 936] = 0\n  6026: a0 = s1 + 0x2000\n  6030: i32 a0 = a0 + 0x420\n  6034: ecalli 15 // 'value_transferred'\n  6036: fallthrough\n      : @196 (gas: 10)\n  6037: a3 = s1 + 0x2078\n  6041: a4 = a3 + 0x300\n  6045: a0 = u64 [a4 + 0xb8]\n  6049: a1 = u64 [a4 + 0xc0]\n  6053: a2 = u64 [a4 + 0xb0]\n  6057: a3 = u64 [a4 + 0xa8]\n  6061: a1 = a1 | a2\n  6064: a0 = a0 | a3\n  6067: a0 = a0 | a1\n  6070: jump @198 if a0 == 0\n      : @197 (gas: 1)\n  6073: jump @674\n      : @198 (gas: 3)\n  6076: a0 = u64 [s1 + 0xd8]\n  6080: a0 = i32 [a0]\n  6082: jump @200 if a0 >u 35\n      : @199 (gas: 1)\n  6086: jump @675\n      : @200 (gas: 6)\n  6089: a0 = s1 + 0x2000\n  6093: i32 a0 = a0 + 0x440\n  6097: a1 = 0x4\n  6100: ra = 0xb8\n  6104: ecalli 3 // 'call_data_load'\n  6106: fallthrough\n      : @201 [@dyn 92] (gas: 4)\n  6107: a4 = s1 + 0x2078\n  6111: a1 = u64 [a4 + 0x3d8]\n  6115: a0 = u64 [a4 + 0x3e0]\n  6119: t0 = 186, jump @932\n      : @202 [@dyn 93] (gas: 1)\n  6125: jump @204 if a3 != 0\n      : @203 (gas: 1)\n  6128: jump @676\n      : @204 (gas: 11)\n  6131: a2 = u64 [a4 + 0x3d0]\n  6135: a3 = u64 [a4 + 0x3c8]\n  6139: a4 = s1 + 0x1878\n  6143: a5 = a4 + 0x200\n  6147: u64 [a5 + 0xc8] = a3\n  6151: u64 [a5 + 0xd0] = a2\n  6155: u64 [a5 + 0xd8] = a1\n  6159: a1 = s1 + 0x1b40\n  6163: u64 [a5 + 0xe0] = a0\n  6167: a0 = 0\n  6169: ra = 188, jump @4\n      : @205 [@dyn 94] (gas: 3)\n  6175: t0 = 0xbe\n  6179: a1 = s1 + 0x1878\n  6183: fallthrough\n      : @206 [@dyn 95] (gas: 8)\n  6184: u64 [a1 + 704] = 0\n  6188: u64 [a1 + 696] = 0\n  6192: u64 [a1 + 680] = 0x5\n  6197: a2 = a1\n  6199: a0 = 0x20\n  6202: a1 = s1 + 0x1b20\n  6206: u64 [a2 + 688] = 0\n  6210: ra = 192, jump @4\n      : @207 [@dyn 96] (gas: 6)\n  6216: a0 = sp + 0xffffffffffffffe0\n  6219: a0 = a0 & 0xffffffffffffffe0\n  6222: u64 [s1 + 0xd0] = a0\n  6226: sp = a0\n  6228: a1 = i32 [0x201c4]\n  6233: jump @209 if a1 >u 63\n      : @208 (gas: 2)\n  6237: u32 [0x201c4] = 0x40\n  6243: fallthrough\n      : @209 (gas: 13)\n  6244: a0 = sp + 0xffffffffffffffe0\n  6247: a2 = a0 & 0xffffffffffffffe0\n  6250: u64 [s1 + 0xd8] = a2\n  6254: sp = a2\n  6256: a0 = 0x201d0\n  6261: i32 a0 = a0 + 0\n  6263: i32 a2 = a2 + 0\n  6265: a1 = 0x40\n  6268: ra = 0xc2\n  6272: ecalli 8 // 'hash_keccak_256'\n  6274: a3 = u64 [s1 + 0xd8]\n  6278: t0 = 0xc4\n  6282: jump @947\n      : @210 [@dyn 97] (gas: 2)\n  6285: a3 = u64 [s1 + 0xd8]\n  6289: t0 = 196, jump @947\n      : @211 [@dyn 98] (gas: 12)\n  6295: u64 [s1 + 0xa8] = a1\n  6299: a2 = u64 [s1 + 0xd0]\n  6303: u64 [a2 + 0x18] = a1\n  6306: u64 [s1 + 0xb0] = a0\n  6310: u64 [a2 + 0x10] = a0\n  6313: u64 [s1 + 0xa0] = a4\n  6317: u64 [a2 + 0x8] = a4\n  6320: u64 [s1 + 0x98] = a5\n  6324: u64 [a2] = a5\n  6326: a0 = s1 + 0x1b00\n  6330: a1 = 0x40\n  6333: ra = 198, jump @2\n      : @212 [@dyn 99] (gas: 16)\n  6339: a1 = s1 + 0x1878\n  6343: a5 = a1 + 0x200\n  6347: a0 = u64 [a5 + 0xa0]\n  6351: u64 [s1 + 0xc0] = a0\n  6355: a2 = u64 [a5 + 0x98]\n  6359: u64 [s1 + 0xb8] = a2\n  6363: a4 = u64 [a5 + 0x90]\n  6367: u64 [s1 + 0xc8] = a4\n  6371: a3 = u64 [a5 + 0x88]\n  6375: u64 [s1 + 0xd8] = a3\n  6379: u64 [a5 + 0x80] = a0\n  6383: u64 [a5 + 0x78] = a2\n  6386: u64 [a5 + 0x70] = a4\n  6389: a0 = s1 + 0x1ae0\n  6393: u64 [a5 + 0x68] = a3\n  6396: ra = 200, jump @801\n      : @213 [@dyn 100] (gas: 3)\n  6402: a0 = s1 + 0x1ac0\n  6406: a1 = u64 [s1 + 0xd0]\n  6410: ra = 202, jump @6\n      : @214 [@dyn 101] (gas: 12)\n  6416: a0 = u64 [s1 + 0xc0]\n  6420: a1 = u64 [s1 + 0xc8]\n  6424: a0 = a0 | a1\n  6427: a2 = u64 [s1 + 0xb8]\n  6431: a1 = u64 [s1 + 0xd8]\n  6435: a1 = a1 | a2\n  6438: a1 = a1 | a0\n  6441: a1 = a1 >> 0x20\n  6444: a0 = a0 | a2\n  6447: a0 = a0 << 0x20\n  6450: a0 = a0 | a1\n  6453: jump @216 if a0 == 0\n      : @215 (gas: 1)\n  6456: jump @385\n      : @216 (gas: 17)\n  6459: a0 = s1 + 0x1878\n  6463: a5 = a0 + 0x200\n  6467: a4 = u64 [a5 + 0x60]\n  6470: a3 = u64 [a5 + 0x58]\n  6473: a2 = u64 [a5 + 0x50]\n  6476: a1 = u64 [a5 + 0x48]\n  6479: u64 [s1 + 0xd0] = a1\n  6483: u64 [a5 + 0x28] = a1\n  6486: u64 [s1 + 0x90] = a2\n  6490: u64 [a5 + 0x30] = a2\n  6493: u64 [s1 + 0x88] = a3\n  6497: u64 [a5 + 0x38] = a3\n  6500: a1 = s1 + 0x1aa0\n  6504: u64 [s1 + 0x80] = a4\n  6508: u64 [a5 + 0x40] = a4\n  6511: a0 = u64 [s1 + 0xd8]\n  6515: ra = 204, jump @4\n      : @217 [@dyn 102] (gas: 21)\n  6521: a0 = u64 [s1 + 0x98]\n  6525: a0 = a0 + 0x1\n  6528: a1 = a0 <u 0x1\n  6531: a2 = u64 [s1 + 0xa0]\n  6535: a1 = a1 + a2\n  6538: a2 = a0 | a1\n  6541: a2 = a2 <u 0x1\n  6544: a3 = u64 [s1 + 0xb0]\n  6548: a2 = a2 + a3\n  6551: a3 = a2 <u a3\n  6554: a4 = u64 [s1 + 0xa8]\n  6558: a3 = a3 + a4\n  6561: a4 = s1 + 0x2078\n  6565: a5 = a4 + 0x300\n  6569: u64 [a5 + 0xf0] = a1\n  6573: u64 [a5 + 0xe8] = a0\n  6577: u64 [a5 + 0xf8] = a2\n  6581: u64 [a4 + 0x400] = a3\n  6585: a0 = s1 + 0x1a80\n  6589: a1 = s1 + 0x2460\n  6593: ra = 206, jump @6\n      : @218 [@dyn 103] (gas: 11)\n  6599: a0 = u64 [s1 + 0xc0]\n  6603: a1 = u64 [s1 + 0xb8]\n  6607: a2 = a1 | a0\n  6610: a3 = 0x100000000\n  6620: a0 = 0xffffffe0\n  6630: a1 = u64 [s1 + 0xd8]\n  6634: a0 = a1 <u a0\n  6637: a1 = u64 [s1 + 0xc8]\n  6641: a0 = 0 if a1 != 0\n  6643: a0 = 0 if a2 != 0\n  6645: jump @220 if a0 != 0\n      : @219 (gas: 1)\n  6648: jump @385\n      : @220 (gas: 22)\n  6651: a0 = s1 + 0x1878\n  6655: u64 [s1 + 0xc0] = a2\n  6659: a2 = a0\n  6661: t0 = u64 [a0 + 0x220]\n  6665: a5 = a0 + 0x200\n  6669: a4 = u64 [a5 + 0x18]\n  6672: u64 [s1 + 0xb8] = a3\n  6676: a3 = u64 [a5 + 0x10]\n  6679: a1 = u64 [a5 + 0x8]\n  6682: a0 = u64 [s1 + 0xd8]\n  6686: i32 a0 = a0 + 0x20\n  6689: u64 [s1 + 0x78] = a1\n  6692: a5 = a2 + 0x100\n  6696: u64 [a5 + 0xe8] = a1\n  6700: u64 [s1 + 0x70] = a3\n  6703: u64 [a5 + 0xf0] = a3\n  6707: u64 [s1 + 0x68] = a4\n  6710: u64 [a5 + 0xf8] = a4\n  6714: a1 = s1 + 0x1a60\n  6718: u64 [s1 + 0x60] = t0\n  6721: u64 [a2 + 0x200] = t0\n  6725: ra = 208, jump @4\n      : @221 [@dyn 104] (gas: 5)\n  6731: a1 = u64 [s1 + 0x98]\n  6735: a0 = a1 + 0x2\n  6738: a1 = a0 <u a1\n  6741: a3 = u64 [s1 + 0xa0]\n  6745: t0 = 210, jump @955\n      : @222 [@dyn 105] (gas: 14)\n  6751: a1 = u64 [s1 + 0xb0]\n  6755: a3 = a3 + a1\n  6758: a1 = a3 <u a1\n  6761: a4 = u64 [s1 + 0xa8]\n  6765: a1 = a1 + a4\n  6768: a4 = s1 + 0x2078\n  6772: a5 = a4 + 0x400\n  6776: u64 [a5 + 0x10] = a2\n  6779: u64 [a5 + 0x8] = a0\n  6782: u64 [a5 + 0x18] = a3\n  6785: u64 [a5 + 0x20] = a1\n  6788: a0 = s1 + 0x1a40\n  6792: a1 = s1 + 0x2480\n  6796: ra = 212, jump @6\n      : @223 [@dyn 106] (gas: 9)\n  6802: a0 = u64 [s1 + 0xb8]\n  6806: a0 = a0 + 0xffffffffffffffc0\n  6809: a1 = u64 [s1 + 0xd8]\n  6813: a0 = a1 <u a0\n  6816: a1 = u64 [s1 + 0xc8]\n  6820: a0 = 0 if a1 != 0\n  6822: a1 = u64 [s1 + 0xc0]\n  6826: a0 = 0 if a1 != 0\n  6828: jump @225 if a0 != 0\n      : @224 (gas: 1)\n  6831: jump @385\n      : @225 (gas: 13)\n  6834: a3 = s1 + 0x1878\n  6838: a0 = u64 [a3 + 0x1c8]\n  6842: a0 = a0 & 0xff\n  6846: a2 = a0 >u 0\n  6848: u64 [s1 + 0xc8] = a2\n  6852: a0 = u64 [s1 + 0xd8]\n  6856: i32 a0 = a0 + 0x40\n  6859: u64 [a3 + 448] = 0\n  6863: u64 [a3 + 440] = 0\n  6867: u64 [a3 + 432] = 0\n  6871: a1 = s1 + 0x1a20\n  6875: u64 [a3 + 0x1a8] = a2\n  6879: ra = 214, jump @4\n      : @226 [@dyn 107] (gas: 3)\n  6885: a0 = s1 + 0x1a00\n  6889: a1 = 0x40\n  6892: ra = 216, jump @2\n      : @227 [@dyn 108] (gas: 42)\n  6898: a1 = s1 + 0x1878\n  6902: a3 = u64 [a1 + 0x1a0]\n  6906: u64 [s1 + 0xd8] = a3\n  6910: a2 = u64 [a1 + 0x198]\n  6914: u64 [s1 + 0xc0] = a2\n  6918: a4 = u64 [a1 + 0x190]\n  6922: u64 [s1 + 0xb8] = a4\n  6926: a5 = u64 [a1 + 0x188]\n  6930: u64 [s1 + 0xb0] = a5\n  6934: a0 = u64 [s1 + 0xc8]\n  6938: u64 [a1 + 0xe8] = a0\n  6942: a0 = u64 [s1 + 0x60]\n  6945: u64 [a1 + 0x120] = a0\n  6949: a0 = u64 [s1 + 0x68]\n  6952: u64 [a1 + 0x118] = a0\n  6956: a0 = u64 [s1 + 0x70]\n  6959: u64 [a1 + 0x110] = a0\n  6963: u64 [a1 + 256] = 0\n  6967: u64 [a1 + 248] = 0\n  6971: u64 [a1 + 240] = 0\n  6975: a0 = u64 [s1 + 0x78]\n  6978: u64 [a1 + 0x108] = a0\n  6982: a0 = u64 [s1 + 0x80]\n  6986: u64 [a1 + 0x140] = a0\n  6990: a0 = u64 [s1 + 0x88]\n  6994: u64 [a1 + 0x138] = a0\n  6998: a0 = u64 [s1 + 0x90]\n  7002: u64 [a1 + 0x130] = a0\n  7006: a0 = u64 [s1 + 0xd0]\n  7010: u64 [a1 + 0x128] = a0\n  7014: a0 = a1 + 0x100\n  7018: u64 [a0 + 0x60] = a3\n  7021: u64 [a0 + 0x58] = a2\n  7024: u64 [a0 + 0x50] = a4\n  7027: t0 = a1\n  7029: a0 = s1 + 0x19e0\n  7033: a1 = s1 + 0x19c0\n  7037: a2 = s1 + 0x19a0\n  7041: a3 = s1 + 0x1980\n  7045: a4 = s1 + 0x1960\n  7049: u64 [t0 + 0x148] = a5\n  7053: ra = 218, jump @766\n      : @228 [@dyn 109] (gas: 12)\n  7059: a4 = u64 [s1 + 0xb8]\n  7063: a2 = u64 [s1 + 0xb0]\n  7067: a0 = u64 [s1 + 0xd8]\n  7071: a0 = a0 | a4\n  7074: a3 = u64 [s1 + 0xc0]\n  7078: a1 = a2 | a3\n  7081: a1 = a1 | a0\n  7084: a1 = a1 >> 0x20\n  7087: a0 = a0 | a3\n  7090: a0 = a0 << 0x20\n  7093: a0 = a0 | a1\n  7096: jump @230 if a0 == 0\n      : @229 (gas: 1)\n  7099: jump @385\n      : @230 (gas: 9)\n  7102: t0 = a3\n  7104: a1 = s1 + 0x1878\n  7108: a5 = a1 + 0x100\n  7112: a0 = u64 [a5 + 0x70]\n  7115: a3 = u64 [a5 + 0x80]\n  7119: u64 [s1 + 0xd0] = a3\n  7123: t1 = u64 [a1 + 0x168]\n  7127: a3 = u64 [a5 + 0x78]\n  7130: jump @297\n      : @231 (gas: 8)\n  7133: u64 [a2 + 896] = 0\n  7137: u64 [a2 + 888] = 0\n  7141: u64 [a2 + 880] = 0\n  7145: u64 [a2 + 872] = 0\n  7149: a0 = s1 + 0x2000\n  7153: i32 a0 = a0 + 0x3e0\n  7157: ecalli 15 // 'value_transferred'\n  7159: fallthrough\n      : @232 (gas: 10)\n  7160: a4 = s1 + 0x2078\n  7164: a5 = a4 + 0x300\n  7168: a0 = u64 [a5 + 0x78]\n  7171: a1 = u64 [a5 + 0x80]\n  7175: a2 = u64 [a5 + 0x70]\n  7178: a3 = u64 [a5 + 0x68]\n  7181: a1 = a1 | a2\n  7184: a0 = a0 | a3\n  7187: a0 = a0 | a1\n  7190: jump @234 if a0 == 0\n      : @233 (gas: 1)\n  7193: jump @677\n      : @234 (gas: 3)\n  7196: a0 = u64 [s1 + 0xd8]\n  7200: a1 = i32 [a0]\n  7202: jump @236 if a1 >u 3\n      : @235 (gas: 1)\n  7206: jump @678\n      : @236 (gas: 7)\n  7209: u64 [a4 + 928] = 0\n  7213: u64 [a4 + 920] = 0\n  7217: u64 [a4 + 912] = 0\n  7221: u64 [a4 + 904] = 0x3\n  7226: a0 = s1 + 0x1940\n  7230: a1 = s1 + 0x2400\n  7234: ra = 220, jump @6\n      : @237 [@dyn 110] (gas: 3)\n  7240: t0 = 0xde\n  7244: a1 = s1 + 0x1878\n  7248: fallthrough\n      : @238 [@dyn 111] (gas: 11)\n  7249: a0 = u64 [a1 + 0xe0]\n  7253: u64 [s1 + 0xd8] = a0\n  7257: a0 = u64 [a1 + 0xd8]\n  7261: u64 [s1 + 0xd0] = a0\n  7265: a0 = u64 [a1 + 0xd0]\n  7269: u64 [s1 + 0xc8] = a0\n  7273: a0 = u64 [a1 + 0xc8]\n  7277: u64 [s1 + 0xc0] = a0\n  7281: a0 = s1 + 0x1920\n  7285: a1 = 0x40\n  7288: ra = 224, jump @2\n      : @239 [@dyn 112] (gas: 6)\n  7294: a3 = s1 + 0x1878\n  7298: a0 = u64 [a3 + 0xc0]\n  7302: a1 = u64 [a3 + 0xb8]\n  7306: a2 = u64 [a3 + 0xb0]\n  7310: a4 = u64 [a3 + 0xa8]\n  7314: t0 = 226, jump @936\n      : @240 [@dyn 113] (gas: 1)\n  7320: jump @242 if a0 == 0\n      : @241 (gas: 1)\n  7323: jump @385\n      : @242 (gas: 13)\n  7326: a0 = u64 [s1 + 0xc0]\n  7330: u64 [a3 + 0x88] = a0\n  7334: a0 = u64 [s1 + 0xc8]\n  7338: u64 [a3 + 0x90] = a0\n  7342: a0 = u64 [s1 + 0xd0]\n  7346: u64 [a3 + 0x98] = a0\n  7350: a1 = s1 + 0x1900\n  7354: a0 = u64 [s1 + 0xd8]\n  7358: u64 [a3 + 0xa0] = a0\n  7362: a0 = a4\n  7364: u64 [s1 + 0xd8] = a4\n  7368: ra = 0x2bc\n  7372: jump @4\n      : @243 (gas: 8)\n  7375: u64 [a2 + 256] = 0\n  7379: u64 [a2 + 248] = 0\n  7383: u64 [a2 + 240] = 0\n  7387: u64 [a2 + 232] = 0\n  7391: a0 = s1 + 0x2000\n  7395: i32 a0 = a0 + 0x160\n  7399: ecalli 15 // 'value_transferred'\n  7401: fallthrough\n      : @244 (gas: 9)\n  7402: a3 = s1 + 0x2078\n  7406: a0 = u64 [a3 + 0xf8]\n  7410: a1 = u64 [a3 + 0x100]\n  7414: a2 = u64 [a3 + 0xf0]\n  7418: a3 = u64 [a3 + 0xe8]\n  7422: a1 = a1 | a2\n  7425: a0 = a0 | a3\n  7428: a0 = a0 | a1\n  7431: jump @246 if a0 == 0\n      : @245 (gas: 1)\n  7434: jump @679\n      : @246 (gas: 3)\n  7437: a0 = u64 [s1 + 0xd8]\n  7441: a0 = i32 [a0]\n  7443: jump @248 if a0 >u 35\n      : @247 (gas: 1)\n  7447: jump @680\n      : @248 (gas: 27)\n  7450: a0 = s1 + 0x2000\n  7454: i32 a0 = a0 + 0x180\n  7458: a1 = 0x4\n  7461: ecalli 3 // 'call_data_load'\n  7463: a0 = s1 + 0x2078\n  7467: a5 = a0 + 0x100\n  7471: a1 = u64 [a5 + 0x20]\n  7474: a2 = u64 [a5 + 0x18]\n  7477: a3 = u64 [a5 + 0x10]\n  7480: a4 = u64 [a5 + 0x8]\n  7483: u64 [s1 + 0xc0] = a1\n  7487: u64 [s1 + 0xb0] = a3\n  7491: a0 = a3 | a1\n  7494: u64 [s1 + 0xb8] = a2\n  7498: u64 [s1 + 0xa8] = a4\n  7502: a1 = a4 | a2\n  7505: a0 = a0 | a1\n  7508: a0 = a0 >u 0\n  7510: a1 = s1 + 0x1078\n  7514: u64 [a1 + 1120] = 0\n  7518: u64 [a1 + 1112] = 0\n  7522: u64 [a1 + 0x448] = a0\n  7526: a0 = s1 + 0x14c0\n  7530: u64 [a1 + 1104] = 0\n  7534: ra = 0xe4\n  7538: t0 = 0x338\n  7542: jump @941\n      : @249 [@dyn 114] (gas: 9)\n  7545: a0 = 0x301d0\n  7550: u64 [s1 + 0xd0] = a0\n  7554: i32 a0 = a0 + 0\n  7556: u64 [s1 + 0xa0] = a0\n  7560: ra = 0xe6\n  7564: ecalli 5 // 'caller'\n  7566: a2 = u64 [s1 + 0xd0]\n  7570: t0 = 0xe8\n  7574: jump @923\n      : @250 [@dyn 115] (gas: 2)\n  7577: a2 = u64 [s1 + 0xd0]\n  7581: t0 = 232, jump @923\n      : @251 [@dyn 116] (gas: 9)\n  7587: a2 = s1 + 0x1078\n  7591: u64 [a2 + 1088] = 0\n  7595: a4 = a2 + 0x400\n  7599: u64 [a4 + 0x38] = a1\n  7602: u64 [a4 + 0x30] = a0\n  7605: a1 = s1 + 0x14a0\n  7609: u64 [a4 + 0x28] = a3\n  7612: a0 = 0\n  7614: ra = 234, jump @4\n      : @252 [@dyn 117] (gas: 9)\n  7620: a1 = s1 + 0x1078\n  7624: u64 [a1 + 1056] = 0\n  7628: u64 [a1 + 1048] = 0\n  7632: u64 [a1 + 1032] = 0x5\n  7637: a2 = a1\n  7639: a0 = 0x20\n  7642: a1 = s1 + 0x1480\n  7646: u64 [a2 + 1040] = 0\n  7650: ra = 236, jump @4\n      : @253 [@dyn 118] (gas: 6)\n  7656: a0 = sp + 0xffffffffffffffe0\n  7659: a0 = a0 & 0xffffffffffffffe0\n  7662: u64 [s1 + 0xd8] = a0\n  7666: sp = a0\n  7668: a1 = i32 [0x201c4]\n  7673: jump @255 if a1 >u 63\n      : @254 (gas: 2)\n  7677: u32 [0x201c4] = 0x40\n  7683: fallthrough\n      : @255 (gas: 42)\n  7684: a0 = sp + 0xffffffffffffffe0\n  7687: a2 = a0 & 0xffffffffffffffe0\n  7690: u64 [s1 + 0xc8] = a2\n  7694: sp = a2\n  7696: a0 = 0x201d0\n  7701: i32 a0 = a0 + 0\n  7703: i32 a2 = a2 + 0\n  7705: a1 = 0x40\n  7708: u64 [s1 + 0x98] = a0\n  7712: ecalli 8 // 'hash_keccak_256'\n  7714: a3 = u64 [s1 + 0xc8]\n  7718: a0 = u64 [a3 + 0x18]\n  7721: a1 = u64 [a3 + 0x10]\n  7724: a2 = u64 [a3 + 0x8]\n  7727: a3 = u64 [a3]\n  7729: a0 = reverse a0\n  7731: a5 = reverse a1\n  7733: a2 = reverse a2\n  7735: t0 = reverse a3\n  7737: a1 = u64 [s1 + 0xd8]\n  7741: u64 [a1 + 0x18] = t0\n  7744: u64 [a1 + 0x10] = a2\n  7747: u64 [a1 + 0x8] = a5\n  7750: u64 [a1] = a0\n  7752: a4 = sp + 0xffffffffffffffe0\n  7755: a1 = a4 & 0xffffffffffffffe0\n  7758: sp = a1\n  7760: a4 = a0 + 0x2\n  7763: a0 = a4 <u a0\n  7766: a3 = a5 + a0\n  7769: a5 = a3 <u a5\n  7772: a5 = a0 if a0 == 0\n  7775: a5 = a5 + a2\n  7778: a0 = a5 <u a2\n  7781: a0 = a0 + t0\n  7784: u64 [a1 + 0x10] = a5\n  7787: u64 [a1 + 0x8] = a3\n  7790: u64 [a1] = a4\n  7792: u64 [a1 + 0x18] = a0\n  7795: a0 = s1 + 0x1460\n  7799: u64 [s1 + 0xc8] = a1\n  7803: ra = 238, jump @6\n      : @256 [@dyn 119] (gas: 3)\n  7809: a0 = s1 + 0x1078\n  7813: a0 = u8 [a0 + 0x3e8]\n  7817: jump @258 if a0 == 0\n      : @257 (gas: 1)\n  7820: jump @386\n      : @258 (gas: 3)\n  7823: a0 = s1 + 0x10a0\n  7827: a1 = 0x40\n  7830: ra = 240, jump @2\n      : @259 [@dyn 120] (gas: 2)\n  7836: a3 = s1 + 0x1078\n  7840: fallthrough\n      : @260 (gas: 12)\n  7841: t0 = u64 [a3 + 0x40]\n  7844: a5 = u64 [a3 + 0x38]\n  7847: a4 = u64 [a3 + 0x30]\n  7850: a0 = u64 [a3 + 0x28]\n  7853: a2 = a4 | t0\n  7856: a1 = a0 | a5\n  7859: a1 = a1 | a2\n  7862: a1 = a1 >> 0x20\n  7865: a2 = a2 | a5\n  7868: a2 = a2 << 0x20\n  7871: a1 = a1 | a2\n  7874: jump @262 if a1 == 0\n      : @261 (gas: 1)\n  7877: jump @385\n      : @262 (gas: 12)\n  7880: a2 = a3\n  7882: u64 [a3 + 24] = 0\n  7885: u64 [a3 + 16] = 0\n  7888: u64 [a3 + 8] = 0\n  7891: a3 = 0x8c379a000000000\n  7901: a1 = s1 + 0x1080\n  7905: u64 [a2 + 0x20] = a3\n  7908: u64 [s1 + 0xd8] = a0\n  7912: u64 [s1 + 0xd0] = a4\n  7916: u64 [s1 + 0xc0] = t0\n  7920: u64 [s1 + 0xc8] = a5\n  7924: ra = 242, jump @4\n      : @263 [@dyn 121] (gas: 5)\n  7930: a1 = u64 [s1 + 0xd8]\n  7934: a0 = u64 [s1 + 0xc8]\n  7938: a3 = u64 [s1 + 0xc0]\n  7942: a3 = a3 | a0\n  7945: t0 = 244, jump @925\n      : @264 [@dyn 122] (gas: 1)\n  7951: jump @385 if a0 == 0\n      : @265 (gas: 1)\n  7955: t0 = 246, jump @954\n      : @266 [@dyn 123] (gas: 8)\n  7961: u64 [a2 + 0] = 0\n  7963: u64 [a2 + 4294967288] = 0\n  7966: u64 [a2 + 4294967272] = 0x20\n  7970: a1 = s1 + 0x1060\n  7974: u64 [a2 + 4294967280] = 0\n  7977: u64 [s1 + 0xc8] = a3\n  7981: u64 [s1 + 0xc0] = a4\n  7985: ra = 248, jump @4\n      : @267 [@dyn 124] (gas: 1)\n  7991: t0 = 250, jump @931\n      : @268 [@dyn 125] (gas: 1)\n  7997: jump @385 if a0 == 0\n      : @269 (gas: 9)\n  8001: i32 a0 = a1 + 0x24\n  8004: a4 = s1 + 0x7ff\n  8008: a4 = a4 + 0x61\n  8011: u64 [a4 + 2040] = 0\n  8015: u64 [a4 + 2032] = 0\n  8019: u64 [a4 + 2016] = 0xe\n  8024: a1 = s1 + 0x1040\n  8028: u64 [a4 + 2024] = 0\n  8032: ra = 252, jump @4\n      : @270 [@dyn 126] (gas: 1)\n  8038: t0 = 254, jump @929\n      : @271 [@dyn 127] (gas: 1)\n  8044: jump @385 if a0 == 0\n      : @272 (gas: 12)\n  8048: i32 a0 = a3 + 0x44\n  8051: a1 = u64 [0x200d8]\n  8056: a2 = u64 [0x200e0]\n  8061: a4 = s1 + 0x7ff\n  8065: a4 = a4 + 0x61\n  8068: u64 [a4 + 0x7d8] = a1\n  8072: u64 [a4 + 1992] = 0\n  8076: u64 [a4 + 0x7d0] = a2\n  8080: a1 = s1 + 0x1020\n  8084: u64 [a4 + 1984] = 0\n  8088: ra = 0x236\n  8092: jump @4\n      : @273 (gas: 1)\n  8095: jump @275 if a0 == 1941178475\n      : @274 (gas: 1)\n  8102: jump @681\n      : @275 (gas: 8)\n  8105: u64 [a3 + 1568] = 0\n  8109: u64 [a3 + 1560] = 0\n  8113: u64 [a3 + 1552] = 0\n  8117: u64 [a3 + 1544] = 0\n  8121: a0 = s1 + 0x2000\n  8125: i32 a0 = a0 + 0xfffffffffffffe80\n  8129: ecalli 15 // 'value_transferred'\n  8131: fallthrough\n      : @276 (gas: 10)\n  8132: a3 = s1 + 0x1878\n  8136: a4 = a3 + 0x600\n  8140: a0 = u64 [a4 + 0x18]\n  8143: a1 = u64 [a4 + 0x20]\n  8146: a2 = u64 [a4 + 0x10]\n  8149: a3 = u64 [a4 + 0x8]\n  8152: a1 = a1 | a2\n  8155: a0 = a0 | a3\n  8158: a0 = a0 | a1\n  8161: jump @278 if a0 == 0\n      : @277 (gas: 1)\n  8164: jump @685\n      : @278 (gas: 3)\n  8167: a0 = u64 [s1 + 0xd8]\n  8171: a0 = i32 [a0]\n  8173: jump @280 if a0 >u 35\n      : @279 (gas: 1)\n  8177: jump @686\n      : @280 (gas: 6)\n  8180: a0 = s1 + 0x2000\n  8184: i32 a0 = a0 + 0xfffffffffffffea0\n  8188: a1 = 0x4\n  8191: ra = 0x100\n  8195: ecalli 3 // 'call_data_load'\n  8197: fallthrough\n      : @281 [@dyn 128] (gas: 4)\n  8198: a4 = s1 + 0x1878\n  8202: a1 = u64 [a4 + 0x638]\n  8206: a0 = u64 [a4 + 0x640]\n  8210: t0 = 258, jump @932\n      : @282 [@dyn 129] (gas: 1)\n  8216: jump @284 if a3 != 0\n      : @283 (gas: 1)\n  8219: jump @687\n      : @284 (gas: 12)\n  8222: a2 = u64 [a4 + 0x630]\n  8226: a3 = u64 [a4 + 0x628]\n  8230: a4 = s1 + 0x7ff\n  8234: a4 = a4 + 0x61\n  8237: u64 [a4 + 0x60] = a3\n  8240: u64 [a4 + 0x68] = a2\n  8243: u64 [a4 + 0x70] = a1\n  8246: a1 = s1 + 0x7ff\n  8250: a1 = a1 + 0xc1\n  8254: u64 [a4 + 0x78] = a0\n  8257: a0 = 0\n  8259: ra = 260, jump @4\n      : @285 [@dyn 130] (gas: 7)\n  8265: a1 = s1 + 0x7ff\n  8269: a1 = a1 + 0x61\n  8272: a3 = 0\n  8274: u64 [a1 + 88] = 0\n  8277: u64 [a1 + 80] = 0\n  8280: u64 [a1 + 64] = 0x5\n  8284: t0 = 262, jump @930\n      : @286 [@dyn 131] (gas: 3)\n  8290: a1 = a1 + 0xa1\n  8294: u64 [a2 + 0x48] = a3\n  8297: ra = 264, jump @4\n      : @287 [@dyn 132] (gas: 6)\n  8303: a0 = sp + 0xffffffffffffffe0\n  8306: a0 = a0 & 0xffffffffffffffe0\n  8309: u64 [s1 + 0xb8] = a0\n  8313: sp = a0\n  8315: a1 = i32 [0x201c4]\n  8320: jump @289 if a1 >u 63\n      : @288 (gas: 2)\n  8324: u32 [0x201c4] = 0x40\n  8330: fallthrough\n      : @289 (gas: 30)\n  8331: a0 = sp + 0xffffffffffffffe0\n  8334: a2 = a0 & 0xffffffffffffffe0\n  8337: u64 [s1 + 0xd8] = a2\n  8341: sp = a2\n  8343: a0 = 0x201d0\n  8348: i32 a0 = a0 + 0\n  8350: i32 a2 = a2 + 0\n  8352: a1 = 0x40\n  8355: ecalli 8 // 'hash_keccak_256'\n  8357: a3 = u64 [s1 + 0xd8]\n  8361: a0 = u64 [a3 + 0x18]\n  8364: a1 = u64 [a3 + 0x10]\n  8367: a2 = u64 [a3 + 0x8]\n  8370: a3 = u64 [a3]\n  8372: a5 = reverse a0\n  8374: u64 [s1 + 0xc8] = a5\n  8378: a4 = reverse a1\n  8380: u64 [s1 + 0xd0] = a4\n  8384: a2 = reverse a2\n  8386: u64 [s1 + 0xc0] = a2\n  8390: a0 = reverse a3\n  8392: u64 [s1 + 0xd8] = a0\n  8396: a1 = u64 [s1 + 0xb8]\n  8400: u64 [a1 + 0x18] = a0\n  8403: u64 [a1 + 0x10] = a2\n  8406: u64 [a1 + 0x8] = a4\n  8409: u64 [a1] = a5\n  8411: a0 = s1 + 0x7ff\n  8415: a0 = a0 + 0x81\n  8419: ra = 266, jump @6\n      : @290 [@dyn 133] (gas: 32)\n  8425: a1 = s1 + 0x7ff\n  8429: a1 = a1 + 0x61\n  8432: a0 = u64 [a1 + 0x20]\n  8435: u64 [s1 + 0xb8] = a0\n  8439: a0 = u64 [a1 + 0x28]\n  8442: u64 [s1 + 0xb0] = a0\n  8446: a0 = u64 [a1 + 0x30]\n  8449: u64 [s1 + 0xa8] = a0\n  8453: a0 = u64 [a1 + 0x38]\n  8456: u64 [s1 + 0xa0] = a0\n  8460: a0 = u64 [s1 + 0xc8]\n  8464: a0 = a0 + 0x1\n  8467: a1 = a0 <u 0x1\n  8470: a2 = u64 [s1 + 0xd0]\n  8474: a1 = a1 + a2\n  8477: a2 = s1 + 0x1878\n  8481: a3 = a2 + 0x600\n  8485: u64 [a3 + 0x50] = a1\n  8488: a1 = a1 | a0\n  8491: u64 [a3 + 0x48] = a0\n  8494: a0 = a1 <u 0x1\n  8497: a1 = u64 [s1 + 0xc0]\n  8501: a0 = a0 + a1\n  8504: u64 [a3 + 0x58] = a0\n  8507: a0 = a0 <u a1\n  8510: a1 = u64 [s1 + 0xd8]\n  8514: a0 = a0 + a1\n  8517: u64 [a3 + 0x60] = a0\n  8520: a0 = s1 + 0x7ff\n  8524: a0 = a0 + 0x61\n  8527: a1 = s1 + 0x1ec0\n  8531: ra = 268, jump @6\n      : @291 [@dyn 134] (gas: 9)\n  8537: a5 = s1 + 0x7ff\n  8541: a5 = a5 + 0x61\n  8544: a0 = u64 [a5]\n  8546: u64 [s1 + 0x98] = a0\n  8550: a1 = u64 [s1 + 0xc8]\n  8554: a0 = a1 + 0x2\n  8557: a1 = a0 <u a1\n  8560: a3 = u64 [s1 + 0xd0]\n  8564: t0 = 270, jump @955\n      : @292 [@dyn 135] (gas: 21)\n  8570: a1 = u64 [a5 + 0x8]\n  8573: u64 [s1 + 0xd0] = a1\n  8577: a1 = u64 [s1 + 0xc0]\n  8581: a3 = a3 + a1\n  8584: a1 = a3 <u a1\n  8587: a4 = u64 [s1 + 0xd8]\n  8591: a1 = a1 + a4\n  8594: a4 = u64 [a5 + 0x10]\n  8597: u64 [s1 + 0xc8] = a4\n  8601: a4 = u64 [a5 + 0x18]\n  8604: u64 [s1 + 0xc0] = a4\n  8608: a4 = s1 + 0x1878\n  8612: a5 = a4 + 0x600\n  8616: u64 [a5 + 0x80] = a1\n  8620: u64 [a5 + 0x78] = a3\n  8623: u64 [a5 + 0x70] = a2\n  8626: u64 [a5 + 0x68] = a0\n  8629: a0 = s1 + 0x7ff\n  8633: a0 = a0 + 0x41\n  8636: a1 = s1 + 0x1ee0\n  8640: ra = 272, jump @6\n      : @293 [@dyn 136] (gas: 7)\n  8646: a0 = s1 + 0x1000\n  8650: a0 = u8 [a0 + 0xfffffffffffff840]\n  8654: u64 [s1 + 0x90] = a0\n  8658: a0 = s1 + 0x7ff\n  8662: a0 = a0 + 0x21\n  8665: a1 = 0x40\n  8668: ra = 274, jump @2\n      : @294 [@dyn 137] (gas: 44)\n  8674: a0 = s1 + 0x1000\n  8678: a2 = u64 [a0 + 0xfffffffffffff838]\n  8682: u64 [s1 + 0xd8] = a2\n  8686: a0 = s1 + 0x1000\n  8690: a1 = u64 [a0 + 0xfffffffffffff830]\n  8694: u64 [s1 + 0x88] = a1\n  8698: a0 = s1 + 0x1000\n  8702: a3 = u64 [a0 + 0xfffffffffffff828]\n  8706: u64 [s1 + 0x80] = a3\n  8710: a0 = s1 + 0x1000\n  8714: a5 = u64 [a0 + 0xfffffffffffff820]\n  8718: u64 [s1 + 0x78] = a5\n  8721: a0 = u64 [s1 + 0x90]\n  8725: u64 [s1 + 0x780] = a0\n  8729: u64 [s1 + 1944] = 0\n  8733: u64 [s1 + 1936] = 0\n  8737: u64 [s1 + 1928] = 0\n  8741: a0 = u64 [s1 + 0xc0]\n  8745: u64 [s1 + 0x7b8] = a0\n  8749: a0 = u64 [s1 + 0xc8]\n  8753: u64 [s1 + 0x7b0] = a0\n  8757: a0 = u64 [s1 + 0xd0]\n  8761: u64 [s1 + 0x7a8] = a0\n  8765: a0 = u64 [s1 + 0x98]\n  8769: u64 [s1 + 0x7a0] = a0\n  8773: a0 = u64 [s1 + 0xa0]\n  8777: u64 [s1 + 0x7d8] = a0\n  8781: a0 = u64 [s1 + 0xa8]\n  8785: u64 [s1 + 0x7d0] = a0\n  8789: a0 = u64 [s1 + 0xb0]\n  8793: u64 [s1 + 0x7c8] = a0\n  8797: a0 = u64 [s1 + 0xb8]\n  8801: u64 [s1 + 0x7c0] = a0\n  8805: u64 [s1 + 0x7f8] = a2\n  8809: u64 [s1 + 0x7f0] = a1\n  8813: u64 [s1 + 0x7e8] = a3\n  8817: a0 = s1 + 0x7ff\n  8821: a0 = a0 + 0x1\n  8824: a1 = s1 + 0x7e0\n  8828: a2 = s1 + 0x7c0\n  8832: a3 = s1 + 0x7a0\n  8836: a4 = s1 + 0x780\n  8840: u64 [s1 + 0x7e0] = a5\n  8844: ra = 276, jump @766\n      : @295 [@dyn 138] (gas: 12)\n  8850: a4 = u64 [s1 + 0x80]\n  8854: a2 = u64 [s1 + 0x78]\n  8857: a0 = u64 [s1 + 0xd8]\n  8861: a0 = a0 | a4\n  8864: a3 = u64 [s1 + 0x88]\n  8868: a1 = a2 | a3\n  8871: a1 = a1 | a0\n  8874: a1 = a1 >> 0x20\n  8877: a0 = a0 | a3\n  8880: a0 = a0 << 0x20\n  8883: a0 = a0 | a1\n  8886: jump @385 if a0 != 0\n      : @296 (gas: 11)\n  8890: t0 = a3\n  8892: a0 = s1 + 0x1000\n  8896: a0 = u64 [a0 + 0xfffffffffffff808]\n  8900: a1 = s1 + 0x1000\n  8904: a1 = u64 [a1 + 0xfffffffffffff818]\n  8908: u64 [s1 + 0xd0] = a1\n  8912: a1 = s1 + 0x1000\n  8916: t1 = u64 [a1 + 0xfffffffffffff800]\n  8920: a1 = s1 + 0x1000\n  8924: a3 = u64 [a1 + 0xfffffffffffff810]\n  8928: fallthrough\n      : @297 (gas: 26)\n  8929: t2 = a0 ^ a4\n  8932: a5 = a0 <u a4\n  8935: ra = t1 <u a2\n  8938: a5 = ra if t2 == 0\n  8941: a1 = a3 - t0\n  8944: t2 = a1 - a5\n  8947: a1 = a1 <u a5\n  8950: u64 [s1 + 0xc8] = a1\n  8954: a3 = a3 <u t0\n  8957: a5 = u64 [s1 + 0xd8]\n  8961: a1 = u64 [s1 + 0xd0]\n  8965: a5 = a1 - a5\n  8968: a5 = a5 - a3\n  8971: a1 = u64 [s1 + 0xc8]\n  8975: a5 = a5 - a1\n  8978: a0 = a0 - a4\n  8981: a0 = a0 - ra\n  8984: a1 = t1 - a2\n  8987: a0 = a0 | a5\n  8990: a3 = a1 | t2\n  8993: a3 = a3 | a0\n  8996: a0 = a0 | t2\n  8999: a3 = a3 >> 0x20\n  9002: a0 = a0 << 0x20\n  9005: a0 = a0 | a3\n  9008: jump @385 if a0 != 0\n      : @298 (gas: 3)\n  9012: a0 = a2\n  9014: u64 [s1 + 0xd8] = a1\n  9018: ra = 278, jump @13\n      : @299 [@dyn 139] (gas: 5)\n  9024: i32 a1 = a0 + 0\n  9026: a2 = i32 [s1 + 0xd8]\n  9030: a0 = 0\n  9032: ecalli 12 // 'seal_return'\n  9034: jump @703\n      : @300 (gas: 8)\n  9037: u64 [a2 + 576] = 0\n  9041: u64 [a2 + 568] = 0\n  9045: u64 [a2 + 560] = 0\n  9049: u64 [a2 + 552] = 0\n  9053: a0 = s1 + 0x2000\n  9057: i32 a0 = a0 + 0x2a0\n  9061: ecalli 15 // 'value_transferred'\n  9063: fallthrough\n      : @301 (gas: 10)\n  9064: a3 = s1 + 0x2078\n  9068: a4 = a3 + 0x200\n  9072: a0 = u64 [a4 + 0x38]\n  9075: a1 = u64 [a4 + 0x40]\n  9078: a2 = u64 [a4 + 0x30]\n  9081: a3 = u64 [a4 + 0x28]\n  9084: a1 = a1 | a2\n  9087: a0 = a0 | a3\n  9090: a0 = a0 | a1\n  9093: jump @303 if a0 == 0\n      : @302 (gas: 1)\n  9096: jump @688\n      : @303 (gas: 3)\n  9099: a0 = u64 [s1 + 0xd8]\n  9103: a0 = i32 [a0]\n  9105: jump @305 if a0 >u 35\n      : @304 (gas: 1)\n  9109: jump @689\n      : @305 (gas: 24)\n  9112: a0 = sp + 0xffffffffffffffe0\n  9115: a0 = a0 & 0xffffffffffffffe0\n  9118: u64 [s1 + 0xd8] = a0\n  9122: sp = a0\n  9124: a0 = s1 + 0x2000\n  9128: i32 a0 = a0 + 0x2c0\n  9132: a1 = 0x4\n  9135: ecalli 3 // 'call_data_load'\n  9137: a0 = s1 + 0x2078\n  9141: a5 = a0 + 0x200\n  9145: a2 = u64 [a5 + 0x60]\n  9148: u64 [s1 + 0xc8] = a2\n  9152: a3 = u64 [a5 + 0x58]\n  9155: u64 [s1 + 0xc0] = a3\n  9159: a1 = u64 [a5 + 0x50]\n  9162: u64 [s1 + 0xd0] = a1\n  9166: a4 = u64 [a5 + 0x48]\n  9169: u64 [s1 + 0xb8] = a4\n  9173: a0 = u64 [s1 + 0xd8]\n  9177: u64 [a0 + 0x18] = a2\n  9180: u64 [a0 + 0x10] = a3\n  9183: u64 [a0 + 0x8] = a1\n  9186: u64 [a0] = a4\n  9188: ra = 280, jump @912\n      : @306 [@dyn 140] (gas: 9)\n  9194: a0 = u64 [s1 + 0xc8]\n  9198: a1 = u64 [s1 + 0xc0]\n  9202: a0 = a0 | a1\n  9205: a1 = u64 [s1 + 0xb8]\n  9209: a1 = a1 <u 0x65\n  9212: a2 = u64 [s1 + 0xd0]\n  9216: a1 = 0 if a2 != 0\n  9218: a1 = 0 if a0 != 0\n  9220: jump @308 if a1 == 0\n      : @307 (gas: 1)\n  9223: jump @690\n      : @308 (gas: 3)\n  9226: a0 = s1 + 0x15e0\n  9230: a1 = 0x40\n  9233: ra = 282, jump @2\n      : @309 [@dyn 141] (gas: 14)\n  9239: a2 = s1 + 0x1078\n  9243: t0 = u64 [a2 + 0x580]\n  9247: a1 = a2 + 0x500\n  9251: a5 = u64 [a1 + 0x78]\n  9254: a4 = u64 [a1 + 0x70]\n  9257: a0 = u64 [a1 + 0x68]\n  9260: a3 = a4 | t0\n  9263: a1 = a0 | a5\n  9266: a1 = a1 | a3\n  9269: a1 = a1 >> 0x20\n  9272: a3 = a3 | a5\n  9275: a3 = a3 << 0x20\n  9278: a1 = a1 | a3\n  9281: jump @385 if a1 != 0\n      : @310 (gas: 11)\n  9285: u64 [a2 + 1368] = 0\n  9289: u64 [a2 + 1360] = 0\n  9293: u64 [a2 + 1352] = 0\n  9297: a3 = 0x8c379a000000000\n  9307: a1 = s1 + 0x15c0\n  9311: u64 [a2 + 0x560] = a3\n  9315: u64 [s1 + 0xd8] = a0\n  9319: u64 [s1 + 0xd0] = a4\n  9323: u64 [s1 + 0xc0] = t0\n  9327: u64 [s1 + 0xc8] = a5\n  9331: ra = 284, jump @4\n      : @311 [@dyn 142] (gas: 5)\n  9337: a1 = u64 [s1 + 0xd8]\n  9341: a0 = u64 [s1 + 0xc8]\n  9345: a3 = u64 [s1 + 0xc0]\n  9349: a3 = a3 | a0\n  9352: t0 = 286, jump @925\n      : @312 [@dyn 143] (gas: 1)\n  9358: jump @385 if a0 == 0\n      : @313 (gas: 1)\n  9362: t0 = 288, jump @954\n      : @314 [@dyn 144] (gas: 8)\n  9368: u64 [a2 + 1344] = 0\n  9372: u64 [a2 + 1336] = 0\n  9376: u64 [a2 + 1320] = 0x20\n  9381: a1 = s1 + 0x15a0\n  9385: u64 [a2 + 1328] = 0\n  9389: u64 [s1 + 0xc8] = a3\n  9393: u64 [s1 + 0xc0] = a4\n  9397: ra = 290, jump @4\n      : @315 [@dyn 145] (gas: 4)\n  9403: a1 = u64 [s1 + 0xd8]\n  9407: a0 = u64 [s1 + 0xc0]\n  9411: a0 = a0 + 0xffffffffffffffdc\n  9414: t0 = 292, jump @943\n      : @316 [@dyn 146] (gas: 1)\n  9420: jump @385 if a0 == 0\n      : @317 (gas: 8)\n  9424: i32 a0 = a1 + 0x24\n  9427: a2 = s1 + 0x1078\n  9431: u64 [a2 + 1312] = 0\n  9435: u64 [a2 + 1304] = 0\n  9439: u64 [a2 + 1288] = 0x21\n  9444: a1 = s1 + 0x1580\n  9448: u64 [a2 + 1296] = 0\n  9452: ra = 294, jump @4\n      : @318 [@dyn 147] (gas: 9)\n  9458: a3 = u64 [s1 + 0xc8]\n  9462: a4 = u64 [s1 + 0xd0]\n  9466: a1 = u64 [s1 + 0xd8]\n  9470: a2 = 0x100000000\n  9480: a0 = 0xffffffbc\n  9490: a0 = a1 <u a0\n  9493: a0 = 0 if a4 != 0\n  9495: a0 = 0 if a3 != 0\n  9497: jump @385 if a0 == 0\n      : @319 (gas: 14)\n  9501: i32 a0 = a1 + 0x44\n  9504: a1 = u64 [0x20080]\n  9509: u64 [s1 + 0xc0] = a2\n  9513: a5 = s1 + 0x1078\n  9517: u64 [a5 + 0x500] = a1\n  9521: a1 = u64 [0x20088]\n  9526: a2 = u64 [0x20090]\n  9531: a3 = u64 [0x20098]\n  9536: a4 = a5 + 0x400\n  9540: u64 [a4 + 0xf8] = a1\n  9544: u64 [a4 + 0xf0] = a2\n  9548: a1 = s1 + 0x1560\n  9552: u64 [a4 + 0xe8] = a3\n  9556: ra = 296, jump @4\n      : @320 [@dyn 148] (gas: 5)\n  9562: a2 = u64 [s1 + 0xd8]\n  9566: a0 = u64 [s1 + 0xc0]\n  9570: a0 = a0 + 0xffffffffffffff9c\n  9573: a0 = a2 <u a0\n  9576: t0 = 298, jump @935\n      : @321 [@dyn 149] (gas: 1)\n  9582: jump @385 if a0 == 0\n      : @322 (gas: 10)\n  9586: i32 a0 = a2 + 0x64\n  9589: a3 = s1 + 0x1078\n  9593: u64 [a3 + 1240] = 0\n  9597: u64 [a3 + 1232] = 0\n  9601: a1 = 0x3000000000000000\n  9611: u64 [a3 + 0x4e0] = a1\n  9615: a1 = s1 + 0x1540\n  9619: u64 [a3 + 1224] = 0\n  9623: ra = 0x1b0\n  9627: jump @4\n      : @323 (gas: 8)\n  9630: u64 [a2 + 512] = 0\n  9634: u64 [a2 + 504] = 0\n  9638: u64 [a2 + 496] = 0\n  9642: u64 [a2 + 488] = 0\n  9646: a0 = s1 + 0x2000\n  9650: i32 a0 = a0 + 0x260\n  9654: ecalli 15 // 'value_transferred'\n  9656: fallthrough\n      : @324 (gas: 10)\n  9657: a4 = s1 + 0x2078\n  9661: a5 = a4 + 0x100\n  9665: a0 = u64 [a5 + 0xf8]\n  9669: a1 = u64 [a4 + 0x200]\n  9673: a2 = u64 [a5 + 0xf0]\n  9677: a3 = u64 [a5 + 0xe8]\n  9681: a1 = a1 | a2\n  9684: a0 = a0 | a3\n  9687: a0 = a0 | a1\n  9690: jump @326 if a0 == 0\n      : @325 (gas: 1)\n  9693: jump @693\n      : @326 (gas: 3)\n  9696: a0 = u64 [s1 + 0xd8]\n  9700: a0 = i32 [a0]\n  9702: jump @328 if a0 >u 3\n      : @327 (gas: 1)\n  9706: jump @694\n      : @328 (gas: 7)\n  9709: u64 [a4 + 544] = 0\n  9713: u64 [a4 + 536] = 0\n  9717: u64 [a4 + 528] = 0\n  9721: u64 [a4 + 520] = 0x1\n  9726: a0 = s1 + 0x1520\n  9730: a1 = s1 + 0x2280\n  9734: ra = 300, jump @6\n      : @329 [@dyn 150] (gas: 11)\n  9740: a1 = s1 + 0x1078\n  9744: a2 = a1 + 0x400\n  9748: a0 = u64 [a2 + 0xb8]\n  9752: u64 [s1 + 0xc8] = a0\n  9756: a0 = u64 [a2 + 0xb0]\n  9760: u64 [s1 + 0xd8] = a0\n  9764: a0 = u64 [a2 + 0xa8]\n  9768: u64 [s1 + 0xd0] = a0\n  9772: a0 = s1 + 0x1500\n  9776: a1 = 0x40\n  9779: ra = 302, jump @2\n      : @330 [@dyn 151] (gas: 7)\n  9785: a3 = s1 + 0x1078\n  9789: a5 = a3 + 0x400\n  9793: a4 = u64 [a5 + 0xa0]\n  9797: a1 = u64 [a5 + 0x98]\n  9801: a2 = u64 [a5 + 0x90]\n  9805: a0 = u64 [a5 + 0x88]\n  9809: t0 = 304, jump @948\n      : @331 [@dyn 152] (gas: 1)\n  9815: jump @385 if a1 != 0\n      : @332 (gas: 14)\n  9819: a1 = u64 [s1 + 0xc8]\n  9823: a1 = a1 << 0x20\n  9826: a2 = a1 >> 0x20\n  9829: u64 [a3 + 1152] = 0\n  9833: a1 = u64 [s1 + 0xd0]\n  9837: a4 = a3 + 0x400\n  9841: u64 [a4 + 0x68] = a1\n  9844: a1 = u64 [s1 + 0xd8]\n  9848: u64 [a4 + 0x70] = a1\n  9851: a1 = s1 + 0x14e0\n  9855: u64 [a4 + 0x78] = a2\n  9858: u64 [s1 + 0xd8] = a0\n  9862: ra = 0x2bc\n  9866: jump @4\n      : @333 (gas: 9)\n  9869: u64 [a3 + 1696] = 0\n  9873: u64 [a3 + 1688] = 0\n  9877: u64 [a3 + 1680] = 0\n  9881: u64 [a3 + 1672] = 0\n  9885: a0 = s1 + 0x2000\n  9889: i32 a0 = a0 + 0xffffffffffffff00\n  9893: ra = 0x132\n  9897: ecalli 15 // 'value_transferred'\n  9899: fallthrough\n      : @334 [@dyn 153] (gas: 3)\n  9900: a3 = s1 + 0x1878\n  9904: a4 = a3 + 0x600\n  9908: t0 = 308, jump @953\n      : @335 [@dyn 154] (gas: 1)\n  9914: jump @337 if a0 == 0\n      : @336 (gas: 1)\n  9917: jump @695\n      : @337 (gas: 3)\n  9920: a0 = u64 [s1 + 0xd8]\n  9924: a0 = i32 [a0]\n  9926: jump @339 if a0 >u 35\n      : @338 (gas: 1)\n  9930: jump @696\n      : @339 (gas: 29)\n  9933: a0 = s1 + 0x2000\n  9937: i32 a0 = a0 + 0xffffffffffffff20\n  9941: a1 = 0x4\n  9944: ecalli 3 // 'call_data_load'\n  9946: a0 = s1 + 0x1878\n  9950: a5 = a0 + 0x600\n  9954: a1 = u64 [a5 + 0xc0]\n  9958: a2 = u64 [a5 + 0xb8]\n  9962: a3 = u64 [a5 + 0xb0]\n  9966: a4 = u64 [a5 + 0xa8]\n  9970: u64 [s1 + 0x40] = a1\n  9973: u64 [s1 + 0x30] = a3\n  9976: a0 = a3 | a1\n  9979: u64 [s1 + 0x38] = a2\n  9982: u64 [s1 + 0x28] = a4\n  9985: a1 = a4 | a2\n  9988: a0 = a0 | a1\n  9991: a0 = a0 >u 0\n  9993: a1 = s1 + 0x7ff\n  9997: a1 = a1 + 0x61\n 10000: u64 [a1 + 1784] = 0\n 10004: u64 [a1 + 1776] = 0\n 10008: u64 [a1 + 0x6e0] = a0\n 10012: a0 = s1 + 0x7ff\n 10016: a0 = a0 + 0x741\n 10020: u64 [a1 + 1768] = 0\n 10024: ra = 0x136\n 10028: t0 = 0x338\n 10032: jump @941\n      : @340 [@dyn 155] (gas: 8)\n 10035: a0 = 0x301d0\n 10040: u64 [s1 + 0x60] = a0\n 10043: i32 a0 = a0 + 0\n 10045: u64 [s1 + 0x58] = a0\n 10048: ra = 0x138\n 10052: ecalli 5 // 'caller'\n 10054: t0 = 0x13a\n 10058: jump @924\n      : @341 [@dyn 156] (gas: 1)\n 10061: t0 = 314, jump @924\n      : @342 [@dyn 157] (gas: 9)\n 10067: u64 [a2 + 1752] = 0\n 10071: a4 = a2 + 0x600\n 10075: u64 [a4 + 0xd0] = a1\n 10079: u64 [a4 + 0xc8] = a0\n 10083: a1 = s1 + 0x7ff\n 10087: a1 = a1 + 0x721\n 10091: u64 [a4 + 0xc0] = a3\n 10095: a0 = 0\n 10097: ra = 316, jump @4\n      : @343 [@dyn 158] (gas: 6)\n 10103: a1 = s1 + 0x7ff\n 10107: a1 = a1 + 0x61\n 10110: u64 [a1 + 1720] = 0\n 10114: u64 [a1 + 1712] = 0\n 10118: u64 [a1 + 1696] = 0x5\n 10123: t0 = 318, jump @930\n      : @344 [@dyn 159] (gas: 3)\n 10129: a1 = a1 + 0x701\n 10133: u64 [a2 + 1704] = 0\n 10137: ra = 320, jump @4\n      : @345 [@dyn 160] (gas: 3)\n 10143: a2 = 0x201c4\n 10148: a0 = i32 [0x201c4]\n 10153: jump @347 if a0 >u 63\n      : @346 (gas: 2)\n 10157: u32 [0x201c4] = 0x40\n 10163: fallthrough\n      : @347 (gas: 38)\n 10164: u64 [s1 + 0x48] = a2\n 10167: a0 = sp + 0xffffffffffffffe0\n 10170: a2 = a0 & 0xffffffffffffffe0\n 10173: u64 [s1 + 0xd8] = a2\n 10177: sp = a2\n 10179: a0 = 0x201d0\n 10184: i32 a0 = a0 + 0\n 10186: i32 a2 = a2 + 0\n 10188: a1 = 0x40\n 10191: u64 [s1 + 0x50] = a0\n 10194: ecalli 8 // 'hash_keccak_256'\n 10196: a3 = u64 [s1 + 0xd8]\n 10200: a0 = u64 [a3]\n 10202: a1 = u64 [a3 + 0x8]\n 10205: a2 = u64 [a3 + 0x10]\n 10208: a3 = u64 [a3 + 0x18]\n 10211: a0 = reverse a0\n 10213: a1 = reverse a1\n 10215: a2 = reverse a2\n 10217: a3 = reverse a3\n 10219: a4 = a3 + 0x2\n 10222: a3 = a4 <u a3\n 10225: a5 = a2 + a3\n 10228: a2 = a5 <u a2\n 10231: a2 = a3 if a3 == 0\n 10234: a2 = a2 + a1\n 10237: a1 = a2 <u a1\n 10240: a0 = a0 + a1\n 10243: a1 = s1 + 0x1878\n 10247: a3 = a1 + 0x600\n 10251: u64 [a3 + 0xc8] = a4\n 10255: u64 [a3 + 0xd0] = a5\n 10259: u64 [a3 + 0xd8] = a2\n 10263: u64 [a3 + 0xe0] = a0\n 10267: a0 = s1 + 0x7ff\n 10271: a0 = a0 + 0x6e1\n 10275: a1 = s1 + 0x1f40\n 10279: ra = 322, jump @6\n      : @348 [@dyn 161] (gas: 4)\n 10285: a0 = s1 + 0x7ff\n 10289: a0 = a0 + 0x61\n 10292: a0 = u8 [a0 + 0x680]\n 10296: jump @430 if a0 != 0\n      : @349 (gas: 5)\n 10300: a0 = u64 [s1 + 0x58]\n 10303: ra = 0x144\n 10307: ecalli 5 // 'caller'\n 10309: t0 = 0x146\n 10313: jump @924\n      : @350 [@dyn 162] (gas: 1)\n 10316: t0 = 326, jump @924\n      : @351 [@dyn 163] (gas: 9)\n 10322: u64 [a2 + 1464] = 0\n 10326: a4 = a2 + 0x500\n 10330: u64 [a4 + 0xb0] = a1\n 10334: u64 [a4 + 0xa8] = a0\n 10338: a1 = s1 + 0x7ff\n 10342: a1 = a1 + 0x601\n 10346: u64 [a4 + 0xa0] = a3\n 10350: a0 = 0\n 10352: ra = 328, jump @4\n      : @352 [@dyn 164] (gas: 6)\n 10358: a1 = s1 + 0x7ff\n 10362: a1 = a1 + 0x61\n 10365: u64 [a1 + 1432] = 0\n 10369: u64 [a1 + 1424] = 0\n 10373: u64 [a1 + 1408] = 0x4\n 10378: t0 = 330, jump @930\n      : @353 [@dyn 165] (gas: 3)\n 10384: a1 = a1 + 0x5e1\n 10388: u64 [a2 + 1416] = 0\n 10392: ra = 332, jump @4\n      : @354 [@dyn 166] (gas: 3)\n 10398: a2 = u64 [s1 + 0x48]\n 10401: a0 = i32 [a2]\n 10403: jump @356 if a0 >u 63\n      : @355 (gas: 3)\n 10407: u32 [a2 + 0] = 0x40\n 10410: t0 = 0x14e\n 10414: jump @952\n      : @356 (gas: 1)\n 10417: t0 = 334, jump @952\n      : @357 [@dyn 167] (gas: 4)\n 10423: ra = 0x150\n 10427: ecalli 8 // 'hash_keccak_256'\n 10429: t0 = 0x152\n 10433: jump @934\n      : @358 [@dyn 168] (gas: 1)\n 10436: t0 = 338, jump @934\n      : @359 [@dyn 169] (gas: 9)\n 10442: u64 [a4 + 0x700] = a3\n 10446: a3 = a4 + 0x600\n 10450: u64 [a3 + 0xf8] = a2\n 10454: u64 [a3 + 0xf0] = a1\n 10458: u64 [a3 + 0xe8] = a0\n 10462: a0 = s1 + 0x7ff\n 10466: a0 = a0 + 0x5c1\n 10470: a1 = s1 + 0x1f60\n 10474: ra = 340, jump @6\n      : @360 [@dyn 170] (gas: 21)\n 10480: a1 = s1 + 0x7ff\n 10484: a1 = a1 + 0x61\n 10487: a2 = a1 + 0x500\n 10491: a0 = u64 [a2 + 0x78]\n 10494: u64 [s1 + 0xd0] = a0\n 10498: a0 = u64 [a2 + 0x70]\n 10501: u64 [s1 + 0xc8] = a0\n 10505: a0 = u64 [a2 + 0x68]\n 10508: u64 [s1 + 0xc0] = a0\n 10512: a0 = u64 [a2 + 0x60]\n 10515: u64 [s1 + 0xd8] = a0\n 10519: a0 = s1 + 0x1878\n 10523: u64 [a0 + 1824] = 0\n 10527: u64 [a0 + 1816] = 0\n 10531: u64 [a0 + 1808] = 0\n 10535: a1 = a0\n 10537: u64 [a1 + 1800] = 0x3\n 10542: a0 = s1 + 0x7ff\n 10546: a0 = a0 + 0x5a1\n 10550: a1 = s1 + 0x1f80\n 10554: ra = 342, jump @6\n      : @361 [@dyn 171] (gas: 69)\n 10560: a1 = s1 + 0x7ff\n 10564: a1 = a1 + 0x61\n 10567: t2 = u64 [a1 + 0x540]\n 10571: a2 = a1 + 0x500\n 10575: a0 = u64 [a2 + 0x58]\n 10578: u64 [s1 + 0xb8] = a0\n 10582: a3 = u64 [a2 + 0x50]\n 10585: a5 = u64 [a2 + 0x48]\n 10588: ra = u64 [s1 + 0xd8]\n 10592: a1 = ra mulhu t2\n 10595: a0 = u64 [s1 + 0xc0]\n 10599: a2 = a0 * t2\n 10602: a1 = a1 + a2\n 10605: a2 = a1 <u a2\n 10608: a4 = a0 mulhu t2\n 10611: t1 = a4 + a2\n 10614: a4 = ra * a5\n 10617: a1 = a1 + a4\n 10620: u64 [s1 + 0x98] = a1\n 10624: a1 = a1 <u a4\n 10627: a4 = ra mulhu a5\n 10630: a1 = a1 + a4\n 10633: t0 = t1 + a1\n 10636: a2 = a0 * a5\n 10639: a1 = a2 + t0\n 10642: u64 [s1 + 0xb0] = a1\n 10646: a4 = a1 <u a2\n 10649: a1 = t0 <u t1\n 10652: a2 = a0 mulhu a5\n 10655: a1 = a1 + a2\n 10658: a1 = a1 + a4\n 10661: u64 [s1 + 0xa8] = a1\n 10665: a1 = a0 * a3\n 10668: a2 = u64 [s1 + 0xb8]\n 10672: a2 = a2 * ra\n 10675: a1 = a1 + a2\n 10678: u64 [s1 + 0xa0] = a1\n 10682: t0 = u64 [s1 + 0xc8]\n 10686: u64 [s1 + 0x78] = a5\n 10689: a2 = a5 * t0\n 10692: a4 = u64 [s1 + 0xd0]\n 10696: a5 = a4 * t2\n 10699: a5 = a5 + a2\n 10702: a2 = a3 * ra\n 10705: t1 = t0 * t2\n 10708: a2 = a2 + t1\n 10711: u64 [s1 + 0x88] = a3\n 10715: a3 = a3 mulhu ra\n 10718: u64 [s1 + 0x68] = a3\n 10721: a1 = u64 [s1 + 0xa0]\n 10725: a3 = a3 + a1\n 10728: a1 = t0 mulhu t2\n 10731: u64 [s1 + 0xa0] = a1\n 10735: a1 = a1 + a5\n 10738: a5 = a2 <u t1\n 10741: u64 [s1 + 0x70] = a1\n 10744: a1 = a1 + a3\n 10747: t1 = a1 + a5\n 10750: a5 = a0 | a4\n 10753: a1 = ra | t0\n 10756: a1 = a1 | a5\n 10759: a0 = u64 [s1 + 0xb0]\n 10763: a2 = a2 + a0\n 10766: a4 = a2 <u a0\n 10769: a0 = u64 [s1 + 0xa8]\n 10773: t1 = t1 + a0\n 10776: a5 = t1 + a4\n 10779: u64 [s1 + 0x80] = a2\n 10783: jump @364 if a1 == 0\n      : @362 (gas: 52)\n 10787: a1 = a5 ^ a0\n 10790: a2 = a5 <u a0\n 10793: a4 = a2 if a1 != 0\n 10796: a0 = u64 [s1 + 0x68]\n 10799: a3 = a3 <u a0\n 10802: a1 = u64 [s1 + 0xc0]\n 10806: a2 = a1 >u 0\n 10808: ra = a5\n 10810: t0 = u64 [s1 + 0xb8]\n 10814: a5 = t0 >u 0\n 10816: a2 = a2 & a5\n 10819: a5 = u64 [s1 + 0xd8]\n 10823: a5 = t0 mulhu a5\n 10826: a5 = a5 >u 0\n 10828: a2 = a2 | a5\n 10831: t1 = u64 [s1 + 0x88]\n 10835: a5 = a1 mulhu t1\n 10838: a5 = a5 >u 0\n 10840: a2 = a2 | a5\n 10843: a2 = a2 | a3\n 10846: u64 [s1 + 0xc0] = a2\n 10850: a0 = u64 [s1 + 0xa0]\n 10854: a1 = u64 [s1 + 0x70]\n 10857: a0 = a1 <u a0\n 10860: u64 [s1 + 0xb0] = a0\n 10864: a2 = u64 [s1 + 0xd0]\n 10868: a5 = a2 >u 0\n 10870: a0 = u64 [s1 + 0x78]\n 10873: a1 = a0 >u 0\n 10875: a1 = a1 & a5\n 10878: a5 = a2 mulhu t2\n 10881: a5 = a5 >u 0\n 10883: a1 = a1 | a5\n 10886: a5 = ra\n 10888: ra = u64 [s1 + 0xc8]\n 10892: a3 = a0 mulhu ra\n 10895: a3 = a3 >u 0\n 10897: a1 = a1 | a3\n 10900: a0 = u64 [s1 + 0xb0]\n 10904: a1 = a1 | a0\n 10907: a2 = ra | a2\n 10910: a3 = t1 | t0\n 10913: a2 = a2 >u 0\n 10915: a3 = a3 >u 0\n 10917: a2 = a2 & a3\n 10920: a1 = a1 | a2\n 10923: a2 = u64 [s1 + 0x80]\n 10927: a0 = u64 [s1 + 0xc0]\n 10931: a1 = a1 | a0\n 10934: a1 = a1 | a4\n 10937: a1 = a1 & 0x1\n 10940: jump @364 if a1 == 0\n      : @363 (gas: 1)\n 10943: jump @707\n      : @364 (gas: 56)\n 10946: u64 [s1 + 0x90] = a5\n 10950: a1 = u64 [s1 + 0xd8]\n 10954: t0 = a1 * t2\n 10957: a0 = t0 | a2\n 10960: a1 = u64 [s1 + 0x98]\n 10964: t2 = a2\n 10966: a2 = a1 | a5\n 10969: a0 = a0 | a2\n 10972: a0 = a0 <u 0x1\n 10975: u64 [s1 + 0xd8] = a0\n 10979: a0 = clz t2\n 10981: a0 = a0 + 0x40\n 10984: a2 = clz a5\n 10986: a2 = a0 if a5 == 0\n 10989: a0 = clz t0\n 10991: a0 = a0 + 0x40\n 10994: a3 = clz a1\n 10996: a3 = a0 if a1 == 0\n 10999: a0 = a3 + 0x80\n 11003: a4 = t2 | a5\n 11006: a2 = a0 if a4 == 0\n 11009: a5 = a0 <u a3\n 11012: a5 = 0 if a4 != 0\n 11014: a3 = a5 >u 0\n 11016: a0 = a2 <u 0xfa\n 11020: a4 = a0 ^ 0x1\n 11023: a3 = a4 if a5 == 0\n 11026: a0 = a3 <u 0x1\n 11029: a0 = a0 + 0xffffffffffffffff\n 11032: ra = -a3\n 11034: a5 = -a5\n 11036: t1 = a5 - a4\n 11039: a2 = 0xf9 - a2\n 11043: u64 [s1 + 0xc0] = ra\n 11047: a4 = ra >u 0\n 11049: a5 = a0 >u 0\n 11051: u64 [s1 + 0xc8] = a0\n 11055: a5 = a4 if a0 == 0\n 11058: a0 = t1 >u 0\n 11060: u64 [s1 + 0xd0] = a2\n 11064: a2 = a2 <u 0x100\n 11068: a2 = a2 ^ 0x1\n 11071: a2 = a0 if t1 != 0\n 11074: a2 = a5 if a3 != 0\n 11077: a0 = u64 [s1 + 0xd8]\n 11081: a0 = a0 | a2\n 11084: a2 = u64 [s1 + 0x90]\n 11088: a2 = 0 if a0 != 0\n 11090: a3 = t2\n 11092: a3 = 0 if a0 != 0\n 11094: a5 = a1\n 11096: a5 = 0 if a0 != 0\n 11098: u64 [s1 + 0x88] = t0\n 11102: a4 = t0\n 11104: a4 = 0 if a0 != 0\n 11106: jump @366 if a0 == 0\n      : @365 (gas: 1)\n 11109: jump @545\n      : @366 (gas: 8)\n 11112: a0 = u64 [s1 + 0xd0]\n 11116: a0 = a0 ^ 0xff\n 11120: t2 = u64 [s1 + 0xc0]\n 11124: t0 = a0 | t2\n 11127: ra = u64 [s1 + 0xc8]\n 11131: a0 = t1 | ra\n 11134: a0 = t0 | a0\n 11137: jump @368 if a0 != 0\n      : @367 (gas: 1)\n 11140: jump @545\n      : @368 (gas: 18)\n 11143: a3 = u64 [s1 + 0xd0]\n 11147: a2 = a3 + 0x1\n 11150: u64 [s1 + 0xd8] = a2\n 11154: a0 = a2 <u 0x1\n 11157: a0 = a0 + t1\n 11160: u64 [s1 + 0xb0] = a0\n 11164: a0 = a0 | a2\n 11167: a0 = a0 <u 0x1\n 11170: a0 = a0 + t2\n 11173: u64 [s1 + 0xa0] = a0\n 11177: a0 = a0 <u t2\n 11180: a0 = a0 + ra\n 11183: u64 [s1 + 0xa8] = a0\n 11187: a2 = 0xff - a3\n 11191: u64 [s1 + 0xb8] = a2\n 11195: a2 = 0x80 - a2\n 11199: a0 = u64 [s1 + 0x88]\n 11203: ra = 344, jump @956\n      : @369 [@dyn 172] (gas: 6)\n 11209: u64 [s1 + 0xc8] = a0\n 11213: u64 [s1 + 0xc0] = a1\n 11217: a0 = u64 [s1 + 0x80]\n 11221: a1 = u64 [s1 + 0x90]\n 11225: a2 = u64 [s1 + 0xb8]\n 11229: ra = 346, jump @961\n      : @370 [@dyn 173] (gas: 9)\n 11235: u64 [s1 + 0x78] = a0\n 11238: a0 = u64 [s1 + 0xc0]\n 11242: a0 = a0 | a1\n 11245: u64 [s1 + 0xc0] = a0\n 11249: a1 = u64 [s1 + 0xd0]\n 11253: a2 = 0x7f - a1\n 11256: a0 = u64 [s1 + 0x88]\n 11260: a1 = u64 [s1 + 0x98]\n 11264: ra = 348, jump @961\n      : @371 [@dyn 174] (gas: 18)\n 11270: a2 = u64 [s1 + 0xb8]\n 11274: a3 = a2 <u 0x80\n 11278: u64 [s1 + 0xd0] = a3\n 11282: a4 = u64 [s1 + 0xc0]\n 11286: a1 = a4 if a3 != 0\n 11289: a4 = u64 [s1 + 0x90]\n 11293: a1 = a4 if a2 == 0\n 11296: u64 [s1 + 0xc0] = a1\n 11300: a1 = u64 [s1 + 0xc8]\n 11304: a4 = u64 [s1 + 0x78]\n 11307: a1 = a1 | a4\n 11310: a1 = a0 if a3 == 0\n 11313: a0 = u64 [s1 + 0x80]\n 11317: a1 = a0 if a2 == 0\n 11320: u64 [s1 + 0xc8] = a1\n 11324: a0 = u64 [s1 + 0x88]\n 11328: a1 = u64 [s1 + 0x98]\n 11332: ra = 350, jump @961\n      : @372 [@dyn 175] (gas: 13)\n 11338: a3 = u64 [s1 + 0xa0]\n 11342: a4 = u64 [s1 + 0xa8]\n 11346: a2 = u64 [s1 + 0xb0]\n 11350: a2 = a2 | a4\n 11353: a5 = u64 [s1 + 0xd8]\n 11357: a5 = a5 | a3\n 11360: a2 = a2 | a5\n 11363: a3 = u64 [s1 + 0xd0]\n 11367: a1 = 0 if a3 == 0\n 11369: u64 [s1 + 0xb8] = a1\n 11373: a0 = 0 if a3 == 0\n 11375: u64 [s1 + 0xd0] = a0\n 11379: jump @374 if a2 == 0\n      : @373 (gas: 1)\n 11382: jump @538\n      : @374 (gas: 3)\n 11385: a5 = 0\n 11387: u64 [s1 + 120] = 0\n 11390: jump @544\n      : @375 (gas: 8)\n 11393: u64 [a2 + 192] = 0\n 11397: u64 [a2 + 184] = 0\n 11401: u64 [a2 + 176] = 0\n 11405: u64 [a2 + 168] = 0\n 11409: a0 = s1 + 0x2000\n 11413: i32 a0 = a0 + 0x120\n 11417: ecalli 15 // 'value_transferred'\n 11419: fallthrough\n      : @376 (gas: 9)\n 11420: a4 = s1 + 0x2078\n 11424: a0 = u64 [a4 + 0xb8]\n 11428: a1 = u64 [a4 + 0xc0]\n 11432: a2 = u64 [a4 + 0xb0]\n 11436: a3 = u64 [a4 + 0xa8]\n 11440: a1 = a1 | a2\n 11443: a0 = a0 | a3\n 11446: a0 = a0 | a1\n 11449: jump @378 if a0 == 0\n      : @377 (gas: 1)\n 11452: jump @697\n      : @378 (gas: 3)\n 11455: a0 = u64 [s1 + 0xd8]\n 11459: a0 = i32 [a0]\n 11461: jump @380 if a0 >u 3\n      : @379 (gas: 1)\n 11465: jump @698\n      : @380 (gas: 7)\n 11468: u64 [a4 + 224] = 0\n 11472: u64 [a4 + 216] = 0\n 11476: u64 [a4 + 208] = 0\n 11480: u64 [a4 + 200] = 0x2\n 11485: a0 = s1 + 0x1000\n 11489: a1 = s1 + 0x2140\n 11493: ra = 352, jump @6\n      : @381 [@dyn 176] (gas: 13)\n 11499: a0 = s1 + 0x7ff\n 11503: a0 = a0 + 0x61\n 11506: a2 = a0 + 0x700\n 11510: a1 = u64 [a2 + 0xb0]\n 11514: u64 [s1 + 0xc8] = a1\n 11518: a1 = u64 [a2 + 0xa8]\n 11522: u64 [s1 + 0xd8] = a1\n 11526: a0 = u64 [a2 + 0xa0]\n 11530: u64 [s1 + 0xd0] = a0\n 11534: a0 = s1 + 0x7ff\n 11538: a0 = a0 + 0x7e1\n 11542: a1 = 0x40\n 11545: ra = 354, jump @2\n      : @382 [@dyn 177] (gas: 8)\n 11551: a3 = s1 + 0x7ff\n 11555: a3 = a3 + 0x61\n 11558: a5 = a3 + 0x700\n 11562: a4 = u64 [a5 + 0x98]\n 11566: a1 = u64 [a5 + 0x90]\n 11570: a2 = u64 [a5 + 0x88]\n 11574: a0 = u64 [a5 + 0x80]\n 11578: t0 = 356, jump @948\n      : @383 [@dyn 178] (gas: 1)\n 11584: jump @385 if a1 != 0\n      : @384 (gas: 1)\n 11587: jump @699\n      : @385 (gas: 1)\n 11590: trap\n      : @386 (gas: 3)\n 11591: a0 = s1 + 0x1440\n 11595: a1 = u64 [s1 + 0xd8]\n 11599: ra = 358, jump @6\n      : @387 [@dyn 179] (gas: 2)\n 11605: a3 = s1 + 0x1078\n 11609: fallthrough\n      : @388 (gas: 21)\n 11610: a4 = a3 + 0x300\n 11614: a0 = u64 [a4 + 0xd0]\n 11618: a1 = u64 [a4 + 0xe0]\n 11622: a2 = u64 [a4 + 0xc8]\n 11626: a3 = u64 [a4 + 0xd8]\n 11630: a5 = u64 [s1 + 0xb0]\n 11634: a4 = a5 ^ a0\n 11637: a0 = a0 <u a5\n 11640: a5 = u64 [s1 + 0xa8]\n 11644: a2 = a2 <u a5\n 11647: a2 = a0 if a4 != 0\n 11650: a0 = u64 [s1 + 0xb8]\n 11654: t0 = a3 <u a0\n 11657: a5 = u64 [s1 + 0xc0]\n 11661: a4 = a5 ^ a1\n 11664: a1 = a1 <u a5\n 11667: a1 = t0 if a4 == 0\n 11670: a0 = a0 ^ a3\n 11673: a0 = a0 | a4\n 11676: a1 = a2 if a0 == 0\n 11679: jump @447 if a1 == 0\n      : @389 (gas: 3)\n 11683: a0 = s1 + 0x1140\n 11687: a1 = 0x40\n 11690: ra = 360, jump @2\n      : @390 [@dyn 180] (gas: 2)\n 11696: a3 = s1 + 0x1078\n 11700: fallthrough\n      : @391 (gas: 12)\n 11701: t0 = u64 [a3 + 0xe0]\n 11705: a5 = u64 [a3 + 0xd8]\n 11709: a4 = u64 [a3 + 0xd0]\n 11713: a0 = u64 [a3 + 0xc8]\n 11717: a2 = a4 | t0\n 11720: a1 = a0 | a5\n 11723: a1 = a1 | a2\n 11726: a1 = a1 >> 0x20\n 11729: a2 = a2 | a5\n 11732: a2 = a2 << 0x20\n 11735: a1 = a1 | a2\n 11738: jump @385 if a1 != 0\n      : @392 (gas: 12)\n 11742: a2 = a3\n 11744: u64 [a3 + 184] = 0\n 11748: u64 [a3 + 176] = 0\n 11752: u64 [a3 + 168] = 0\n 11756: a3 = 0x8c379a000000000\n 11766: a1 = s1 + 0x1120\n 11770: u64 [a2 + 0xc0] = a3\n 11774: u64 [s1 + 0xd8] = a0\n 11778: u64 [s1 + 0xd0] = a4\n 11782: u64 [s1 + 0xc0] = t0\n 11786: u64 [s1 + 0xc8] = a5\n 11790: ra = 362, jump @4\n      : @393 [@dyn 181] (gas: 5)\n 11796: a1 = u64 [s1 + 0xd8]\n 11800: a0 = u64 [s1 + 0xc8]\n 11804: a3 = u64 [s1 + 0xc0]\n 11808: a3 = a3 | a0\n 11811: t0 = 364, jump @925\n      : @394 [@dyn 182] (gas: 1)\n 11817: jump @385 if a0 == 0\n      : @395 (gas: 1)\n 11821: t0 = 366, jump @954\n      : @396 [@dyn 183] (gas: 9)\n 11827: a5 = 0\n 11829: u64 [a2 + 160] = 0\n 11833: u64 [a2 + 152] = 0\n 11837: u64 [a2 + 136] = 0x20\n 11842: a1 = s1 + 0x1100\n 11846: u64 [a2 + 144] = 0\n 11850: u64 [s1 + 0xc8] = a3\n 11854: u64 [s1 + 0xc0] = a4\n 11858: ra = 368, jump @4\n      : @397 [@dyn 184] (gas: 1)\n 11864: t0 = 370, jump @944\n      : @398 [@dyn 185] (gas: 1)\n 11870: jump @385 if a0 == 0\n      : @399 (gas: 8)\n 11874: i32 a0 = a1 + 0x24\n 11877: a2 = s1 + 0x1078\n 11881: u64 [a2 + 128] = 0\n 11885: u64 [a2 + 120] = 0\n 11888: u64 [a2 + 104] = 0x19\n 11892: a1 = s1 + 0x10e0\n 11896: u64 [a2 + 112] = 0\n 11899: ra = 372, jump @4\n      : @400 [@dyn 186] (gas: 1)\n 11905: t0 = 374, jump @929\n      : @401 [@dyn 187] (gas: 1)\n 11911: jump @385 if a0 == 0\n      : @402 (gas: 13)\n 11915: i32 a0 = a3 + 0x44\n 11918: a1 = u64 [0x200c0]\n 11923: a2 = u64 [0x200c8]\n 11928: a3 = u64 [0x200d0]\n 11933: a4 = s1 + 0x1078\n 11937: u64 [a4 + 0x60] = a1\n 11940: u64 [a4 + 0x58] = a2\n 11943: u64 [a4 + 0x50] = a3\n 11946: a2 = 0x6e00000000000000\n 11956: a1 = s1 + 0x10c0\n 11960: u64 [a4 + 0x48] = a2\n 11963: ra = 0x236\n 11967: jump @4\n      : @403 (gas: 6)\n 11970: a0 = u64 [s1 + 0xb0]\n 11974: ra = 0x178\n 11978: ecalli 5 // 'caller'\n 11980: a2 = u64 [s1 + 0xd8]\n 11984: t0 = 0x17a\n 11988: jump @923\n      : @404 [@dyn 188] (gas: 2)\n 11991: a2 = u64 [s1 + 0xd8]\n 11995: t0 = 378, jump @923\n      : @405 [@dyn 189] (gas: 7)\n 12001: u64 [s1 + 1656] = 0\n 12005: u64 [s1 + 0x670] = a1\n 12009: u64 [s1 + 0x668] = a0\n 12013: a1 = s1 + 0x660\n 12017: u64 [s1 + 0x660] = a3\n 12021: a0 = 0\n 12023: ra = 380, jump @4\n      : @406 [@dyn 190] (gas: 7)\n 12029: u64 [s1 + 1624] = 0\n 12033: u64 [s1 + 1616] = 0\n 12037: u64 [s1 + 1600] = 0x4\n 12042: a0 = 0x20\n 12045: a1 = s1 + 0x640\n 12049: u64 [s1 + 1608] = 0\n 12053: ra = 382, jump @4\n      : @407 [@dyn 191] (gas: 3)\n 12059: a2 = u64 [s1 + 0x98]\n 12063: a0 = i32 [a2]\n 12065: jump @409 if a0 >u 63\n      : @408 (gas: 2)\n 12069: u32 [a2 + 0] = 0x40\n 12072: fallthrough\n      : @409 (gas: 12)\n 12073: a0 = sp + 0xffffffffffffffe0\n 12076: a0 = a0 & 0xffffffffffffffe0\n 12079: u64 [s1 + 0xa8] = a0\n 12083: sp = a0\n 12085: i32 a2 = a0 + 0\n 12087: a1 = 0x40\n 12090: a0 = u64 [s1 + 0xa0]\n 12094: ra = 0x180\n 12098: ecalli 8 // 'hash_keccak_256'\n 12100: a3 = u64 [s1 + 0xa8]\n 12104: t0 = 0x182\n 12108: jump @927\n      : @410 [@dyn 192] (gas: 2)\n 12111: a3 = u64 [s1 + 0xa8]\n 12115: t0 = 386, jump @927\n      : @411 [@dyn 193] (gas: 7)\n 12121: u64 [a5 + 0xc0] = a3\n 12125: u64 [a5 + 0xb8] = a2\n 12129: u64 [a5 + 0xb0] = a1\n 12133: u64 [a5 + 0xa8] = a0\n 12137: a0 = s1 + 0x620\n 12141: a1 = s1 + 0x1d20\n 12145: ra = 388, jump @6\n      : @412 [@dyn 194] (gas: 14)\n 12151: a0 = u64 [s1 + 0x620]\n 12155: u64 [s1 + 0xa8] = a0\n 12159: a0 = u64 [s1 + 0x628]\n 12163: u64 [s1 + 0x90] = a0\n 12167: a0 = u64 [s1 + 0x630]\n 12171: u64 [s1 + 0x88] = a0\n 12175: a0 = u64 [s1 + 0x638]\n 12179: u64 [s1 + 0x80] = a0\n 12183: a0 = u64 [s1 + 0xb0]\n 12187: ra = 0x186\n 12191: ecalli 5 // 'caller'\n 12193: a2 = u64 [s1 + 0xd8]\n 12197: t0 = 0x188\n 12201: jump @923\n      : @413 [@dyn 195] (gas: 2)\n 12204: a2 = u64 [s1 + 0xd8]\n 12208: t0 = 392, jump @923\n      : @414 [@dyn 196] (gas: 27)\n 12214: u64 [s1 + 1528] = 0\n 12218: u64 [s1 + 0x5f0] = a1\n 12222: u64 [s1 + 0x5e8] = a0\n 12226: a0 = s1 + 0x600\n 12230: a1 = s1 + 0x5e0\n 12234: u64 [s1 + 0x5e0] = a3\n 12238: ra = 0x18a\n 12242: sp = sp + 0xfffffffffffffcc0\n 12246: a2 = sp + 0x300\n 12250: u64 [a2 + 0x38] = ra\n 12253: u64 [a2 + 0x30] = s0\n 12256: u64 [a2 + 0x28] = s1\n 12259: s0 = sp + 0x340\n 12263: sp = sp & 0xffffffffffffffe0\n 12266: s1 = sp\n 12268: a2 = u64 [a1]\n 12270: a3 = u64 [a1 + 0x8]\n 12273: a1 = u32 [a1 + 0x10]\n 12276: u64 [s1 + 0x8] = a0\n 12279: u64 [s1 + 664] = 0\n 12283: u64 [s1 + 0x290] = a1\n 12287: u64 [s1 + 0x288] = a3\n 12291: a1 = s1 + 0x280\n 12295: u64 [s1 + 0x280] = a2\n 12299: a0 = 0\n 12301: ra = 0x358\n 12305: jump @4\n      : @415 [@dyn 197] (gas: 21)\n 12308: a4 = s1 + 0x600\n 12312: a0 = u64 [a4]\n 12314: a1 = u64 [a4 + 0x8]\n 12317: a2 = u64 [a4 + 0x10]\n 12320: a3 = u64 [a4 + 0x18]\n 12323: u64 [s1 + 0x598] = a3\n 12327: u64 [s1 + 0x590] = a2\n 12331: u64 [s1 + 0x588] = a1\n 12335: u64 [s1 + 0x580] = a0\n 12339: a0 = u64 [s1 + 0x80]\n 12343: u64 [s1 + 0x5b8] = a0\n 12347: a0 = u64 [s1 + 0x88]\n 12351: u64 [s1 + 0x5b0] = a0\n 12355: a0 = u64 [s1 + 0x90]\n 12359: u64 [s1 + 0x5a8] = a0\n 12363: a0 = s1 + 0x5c0\n 12367: a1 = s1 + 0x5a0\n 12371: a2 = s1 + 0x580\n 12375: a3 = u64 [s1 + 0xa8]\n 12379: u64 [s1 + 0x5a0] = a3\n 12383: ra = 396, jump @793\n      : @416 [@dyn 198] (gas: 21)\n 12389: a1 = s1 + 0x500\n 12393: a0 = u64 [a1 + 0xd8]\n 12397: t0 = u64 [s1 + 0x5c0]\n 12401: a2 = u64 [a1 + 0xd0]\n 12405: a3 = u64 [a1 + 0xc8]\n 12409: a5 = u64 [s1 + 0xd0]\n 12413: a4 = a5 ^ a0\n 12416: a1 = a0 <u a5\n 12419: a0 = u64 [s1 + 0xc8]\n 12423: a5 = a2 <u a0\n 12426: a5 = a1 if a4 != 0\n 12429: a1 = u64 [s1 + 0xc0]\n 12433: t1 = a1 ^ a3\n 12436: a3 = a3 <u a1\n 12439: a1 = u64 [s1 + 0xb8]\n 12443: a1 = t0 <u a1\n 12446: a1 = a3 if t1 != 0\n 12449: a0 = a0 ^ a2\n 12452: a0 = a0 | a4\n 12455: a1 = a5 if a0 != 0\n 12458: jump @483 if a1 == 0\n      : @417 (gas: 3)\n 12462: a0 = s1 + 0x280\n 12466: a1 = 0x40\n 12469: ra = 398, jump @2\n      : @418 [@dyn 199] (gas: 6)\n 12475: a1 = s1 + 0x200\n 12479: a4 = u64 [a1 + 0x98]\n 12483: a5 = u64 [a1 + 0x90]\n 12487: a3 = u64 [a1 + 0x88]\n 12491: a0 = u64 [a1 + 0x80]\n 12495: t0 = 400, jump @939\n      : @419 [@dyn 200] (gas: 1)\n 12501: jump @385 if a1 != 0\n      : @420 (gas: 11)\n 12505: u64 [s1 + 624] = 0\n 12509: u64 [s1 + 616] = 0\n 12513: u64 [s1 + 608] = 0\n 12517: a2 = 0x8c379a000000000\n 12527: a1 = s1 + 0x260\n 12531: u64 [s1 + 0x278] = a2\n 12535: u64 [s1 + 0xd8] = a0\n 12539: u64 [s1 + 0xd0] = a3\n 12543: u64 [s1 + 0xc8] = a4\n 12547: u64 [s1 + 0xc0] = a5\n 12551: ra = 402, jump @4\n      : @421 [@dyn 201] (gas: 5)\n 12557: a1 = u64 [s1 + 0xd8]\n 12561: a0 = u64 [s1 + 0xc8]\n 12565: a3 = u64 [s1 + 0xc0]\n 12569: a3 = a3 | a0\n 12572: t0 = 404, jump @925\n      : @422 [@dyn 202] (gas: 1)\n 12578: jump @385 if a0 == 0\n      : @423 (gas: 9)\n 12582: i32 a0 = a1 + 0x4\n 12585: u64 [s1 + 600] = 0\n 12589: u64 [s1 + 592] = 0\n 12593: u64 [s1 + 576] = 0x20\n 12598: a1 = s1 + 0x240\n 12602: u64 [s1 + 584] = 0\n 12606: u64 [s1 + 0xc8] = a3\n 12610: u64 [s1 + 0xc0] = a4\n 12614: ra = 406, jump @4\n      : @424 [@dyn 203] (gas: 1)\n 12620: t0 = 408, jump @931\n      : @425 [@dyn 204] (gas: 1)\n 12626: jump @385 if a0 == 0\n      : @426 (gas: 7)\n 12630: i32 a0 = a1 + 0x24\n 12633: u64 [s1 + 568] = 0\n 12637: u64 [s1 + 560] = 0\n 12641: u64 [s1 + 544] = 0x18\n 12646: a1 = s1 + 0x220\n 12650: u64 [s1 + 552] = 0\n 12654: ra = 410, jump @4\n      : @427 [@dyn 205] (gas: 4)\n 12660: a2 = u64 [s1 + 0xd8]\n 12664: a0 = 0xffffffbc\n 12674: a0 = a2 <u a0\n 12677: t0 = 412, jump @935\n      : @428 [@dyn 206] (gas: 1)\n 12683: jump @385 if a0 == 0\n      : @429 (gas: 12)\n 12687: i32 a0 = a2 + 0x44\n 12690: a1 = u64 [0x20160]\n 12695: a2 = u64 [0x20168]\n 12700: a3 = u64 [0x20170]\n 12705: a4 = s1 + 0x200\n 12709: u64 [a4 + 0x18] = a1\n 12712: u64 [a4 + 0x10] = a2\n 12715: u64 [a4 + 0x8] = a3\n 12718: a1 = s1 + 0x200\n 12722: u64 [s1 + 512] = 0\n 12726: ra = 0x236\n 12730: jump @4\n      : @430 (gas: 4)\n 12733: a0 = s1 + 0x7ff\n 12737: a0 = a0 + 0x6c1\n 12741: a1 = 0x40\n 12744: ra = 414, jump @2\n      : @431 [@dyn 207] (gas: 8)\n 12750: a0 = s1 + 0x7ff\n 12754: a0 = a0 + 0x61\n 12757: a1 = a0 + 0x600\n 12761: a4 = u64 [a1 + 0x78]\n 12764: a5 = u64 [a1 + 0x70]\n 12767: a3 = u64 [a1 + 0x68]\n 12770: a0 = u64 [a1 + 0x60]\n 12773: t0 = 416, jump @939\n      : @432 [@dyn 208] (gas: 3)\n 12779: a2 = s1 + 0x7ff\n 12783: a2 = a2 + 0x61\n 12786: jump @385 if a1 != 0\n      : @433 (gas: 12)\n 12790: u64 [a2 + 1616] = 0\n 12794: u64 [a2 + 1608] = 0\n 12798: u64 [a2 + 1600] = 0\n 12802: u64 [s1 + 0xd0] = a3\n 12806: a3 = 0x8c379a000000000\n 12816: a1 = s1 + 0x7ff\n 12820: a1 = a1 + 0x6a1\n 12824: u64 [a2 + 0x658] = a3\n 12828: u64 [s1 + 0xd8] = a0\n 12832: u64 [s1 + 0xc8] = a4\n 12836: u64 [s1 + 0xc0] = a5\n 12840: ra = 418, jump @4\n      : @434 [@dyn 209] (gas: 5)\n 12846: a1 = u64 [s1 + 0xd8]\n 12850: a0 = u64 [s1 + 0xc8]\n 12854: a3 = u64 [s1 + 0xc0]\n 12858: a3 = a3 | a0\n 12861: t0 = 420, jump @925\n      : @435 [@dyn 210] (gas: 1)\n 12867: jump @385 if a0 == 0\n      : @436 (gas: 12)\n 12871: i32 a0 = a1 + 0x4\n 12874: a2 = s1 + 0x7ff\n 12878: a2 = a2 + 0x61\n 12881: u64 [a2 + 1592] = 0\n 12885: u64 [a2 + 1584] = 0\n 12889: u64 [a2 + 1568] = 0x20\n 12894: a1 = s1 + 0x7ff\n 12898: a1 = a1 + 0x681\n 12902: u64 [a2 + 1576] = 0\n 12906: u64 [s1 + 0xc8] = a3\n 12910: u64 [s1 + 0xc0] = a4\n 12914: ra = 422, jump @4\n      : @437 [@dyn 211] (gas: 4)\n 12920: a1 = u64 [s1 + 0xd8]\n 12924: a0 = u64 [s1 + 0xc0]\n 12928: a0 = a0 + 0xffffffffffffffdc\n 12931: t0 = 424, jump @943\n      : @438 [@dyn 212] (gas: 1)\n 12937: jump @385 if a0 == 0\n      : @439 (gas: 10)\n 12941: i32 a0 = a1 + 0x24\n 12944: a2 = s1 + 0x7ff\n 12948: a2 = a2 + 0x61\n 12951: u64 [a2 + 1560] = 0\n 12955: u64 [a2 + 1552] = 0\n 12959: u64 [a2 + 1536] = 0x22\n 12964: a1 = s1 + 0x7ff\n 12968: a1 = a1 + 0x661\n 12972: u64 [a2 + 1544] = 0\n 12976: ra = 426, jump @4\n      : @440 [@dyn 213] (gas: 9)\n 12982: a2 = u64 [s1 + 0xc8]\n 12986: a3 = u64 [s1 + 0xd0]\n 12990: a1 = u64 [s1 + 0xd8]\n 12994: a4 = 0x100000000\n 13004: a0 = 0xffffffbc\n 13014: a0 = a1 <u a0\n 13017: a0 = 0 if a3 != 0\n 13019: a0 = 0 if a2 != 0\n 13021: jump @385 if a0 == 0\n      : @441 (gas: 16)\n 13025: i32 a0 = a1 + 0x44\n 13028: a1 = u64 [0x200e8]\n 13033: u64 [s1 + 0xc0] = a4\n 13037: a4 = s1 + 0x7ff\n 13041: a4 = a4 + 0x61\n 13044: a5 = a4 + 0x500\n 13048: u64 [a5 + 0xf8] = a1\n 13052: a1 = u64 [0x200f0]\n 13057: a2 = u64 [0x200f8]\n 13062: a3 = u64 [0x20100]\n 13067: u64 [a5 + 0xf0] = a1\n 13071: u64 [a5 + 0xe8] = a2\n 13075: a1 = s1 + 0x7ff\n 13079: a1 = a1 + 0x641\n 13083: u64 [a5 + 0xe0] = a3\n 13087: ra = 428, jump @4\n      : @442 [@dyn 214] (gas: 5)\n 13093: a2 = u64 [s1 + 0xd8]\n 13097: a0 = u64 [s1 + 0xc0]\n 13101: a0 = a0 + 0xffffffffffffff9c\n 13104: a0 = a2 <u a0\n 13107: t0 = 430, jump @935\n      : @443 [@dyn 215] (gas: 1)\n 13113: jump @385 if a0 == 0\n      : @444 (gas: 11)\n 13117: i32 a0 = a2 + 0x64\n 13120: a3 = s1 + 0x7ff\n 13124: a3 = a3 + 0x61\n 13127: u64 [a3 + 1488] = 0\n 13131: u64 [a3 + 1480] = 0\n 13135: a1 = 0x7374000000000000\n 13145: u64 [a3 + 0x5d8] = a1\n 13149: a1 = s1 + 0x7ff\n 13153: a1 = a1 + 0x621\n 13157: u64 [a3 + 1472] = 0\n 13161: ra = 432, jump @4\n      : @445 [@dyn 216] (gas: 3)\n 13167: a1 = 0x84\n 13171: a0 = u64 [s1 + 0xd8]\n 13175: ra = 434, jump @13\n      : @446 [@dyn 217] (gas: 5)\n 13181: i32 a1 = a0 + 0\n 13183: a0 = 0x1\n 13186: a2 = 0x84\n 13190: ecalli 12 // 'seal_return'\n 13192: fallthrough\n      : @447 (gas: 8)\n 13193: a1 = s1 + 0x2078\n 13197: u64 [a1 + 320] = 0\n 13201: u64 [a1 + 312] = 0\n 13205: u64 [a1 + 304] = 0\n 13209: u64 [a1 + 296] = 0x2\n 13214: a0 = s1 + 0x1420\n 13218: a1 = s1 + 0x21a0\n 13222: ra = 436, jump @6\n      : @448 [@dyn 218] (gas: 11)\n 13228: a1 = s1 + 0x1078\n 13232: a2 = a1 + 0x300\n 13236: a0 = u64 [a2 + 0xb8]\n 13240: u64 [s1 + 0x68] = a0\n 13243: a0 = u64 [a2 + 0xb0]\n 13247: u64 [s1 + 0x60] = a0\n 13250: a0 = u64 [a2 + 0xa8]\n 13254: u64 [s1 + 0x70] = a0\n 13257: a0 = s1 + 0x1400\n 13261: a1 = 0x40\n 13264: ra = 438, jump @2\n      : @449 [@dyn 219] (gas: 14)\n 13270: t0 = s1 + 0x1078\n 13274: a1 = t0 + 0x300\n 13278: a5 = u64 [a1 + 0xa0]\n 13282: a4 = u64 [a1 + 0x98]\n 13286: a3 = u64 [a1 + 0x90]\n 13290: a0 = u64 [a1 + 0x88]\n 13294: a2 = a3 | a5\n 13297: a1 = a0 | a4\n 13300: a1 = a1 | a2\n 13303: a1 = a1 >> 0x20\n 13306: a2 = a2 | a4\n 13309: a2 = a2 << 0x20\n 13312: a1 = a1 | a2\n 13315: jump @385 if a1 != 0\n      : @450 (gas: 11)\n 13319: u64 [t0 + 888] = 0\n 13323: u64 [t0 + 880] = 0\n 13327: u64 [t0 + 872] = 0\n 13331: u64 [s1 + 0x88] = a3\n 13335: a3 = 0x23b872dd00000000\n 13345: a1 = s1 + 0x13e0\n 13349: u64 [t0 + 0x380] = a3\n 13353: u64 [s1 + 0x90] = a0\n 13357: u64 [s1 + 0x80] = a4\n 13361: u64 [s1 + 0x78] = a5\n 13364: ra = 440, jump @4\n      : @451 [@dyn 220] (gas: 6)\n 13370: a0 = u64 [s1 + 0xa0]\n 13374: ra = 0x1ba\n 13378: ecalli 0 // 'address'\n 13379: a2 = u64 [s1 + 0xd0]\n 13383: t0 = 0x1bc\n 13387: jump @933\n      : @452 [@dyn 221] (gas: 2)\n 13390: a2 = u64 [s1 + 0xd0]\n 13394: t0 = 444, jump @933\n      : @453 [@dyn 222] (gas: 14)\n 13400: u64 [s1 + 0x58] = a1\n 13403: a0 = a0 >> 0x20\n 13406: a1 = reverse a2\n 13408: a2 = a1 << 0x20\n 13411: a0 = a0 | a2\n 13414: u64 [s1 + 0x50] = a0\n 13417: a1 = a1 >> 0x20\n 13420: u64 [s1 + 0x48] = a1\n 13423: a0 = u64 [s1 + 0xa0]\n 13427: ra = 0x1be\n 13431: ecalli 5 // 'caller'\n 13433: a2 = u64 [s1 + 0xd0]\n 13437: t0 = 0x1c0\n 13441: jump @926\n      : @454 [@dyn 223] (gas: 2)\n 13444: a2 = u64 [s1 + 0xd0]\n 13448: t0 = 448, jump @926\n      : @455 [@dyn 224] (gas: 51)\n 13454: t0 = a1 | a0\n 13457: a3 = a3 >> 0x20\n 13460: a2 = reverse a2\n 13462: a1 = a2 << 0x20\n 13465: t1 = a1 | a3\n 13468: t2 = a2 >> 0x20\n 13471: a0 = u64 [s1 + 0x90]\n 13475: a3 = a0 + 0x4\n 13478: a5 = a3 <u a0\n 13481: a0 = u64 [s1 + 0x88]\n 13485: a1 = a0 + a5\n 13488: a0 = a1 <u a0\n 13491: a0 = a5 if a5 == 0\n 13494: a4 = u64 [s1 + 0x80]\n 13498: a0 = a0 + a4\n 13501: a5 = a0 <u a4\n 13504: a4 = u64 [s1 + 0x78]\n 13507: a5 = a5 + a4\n 13510: a4 = s1 + 0x1078\n 13514: a2 = u64 [s1 + 0x48]\n 13517: u64 [a4 + 0x2f8] = a2\n 13521: a2 = u64 [s1 + 0x50]\n 13524: u64 [a4 + 0x2f0] = a2\n 13528: a2 = u64 [s1 + 0x58]\n 13531: u64 [a4 + 0x2e8] = a2\n 13535: a2 = a4 + 0x300\n 13539: u64 [a2 + 0x40] = a5\n 13542: u64 [a2 + 0x38] = a0\n 13545: a0 = u64 [s1 + 0xc0]\n 13549: a5 = a4 + 0x200\n 13553: u64 [a5 + 0xe0] = a0\n 13557: a0 = u64 [s1 + 0xb8]\n 13561: u64 [a5 + 0xd8] = a0\n 13565: a0 = u64 [s1 + 0xb0]\n 13569: u64 [a5 + 0xd0] = a0\n 13573: a0 = u64 [s1 + 0xa8]\n 13577: u64 [a5 + 0xc8] = a0\n 13581: u64 [a4 + 768] = 0\n 13585: u64 [a2 + 0x30] = a1\n 13588: u64 [a2 + 0x28] = a3\n 13591: u64 [a4 + 0x318] = t2\n 13595: u64 [a4 + 0x310] = t1\n 13599: u64 [a4 + 0x308] = t0\n 13603: a5 = a4\n 13605: a0 = s1 + 0x13c0\n 13609: a1 = s1 + 0x13a0\n 13613: a2 = s1 + 0x1380\n 13617: a3 = s1 + 0x1360\n 13621: a4 = s1 + 0x1340\n 13625: u64 [a5 + 800] = 0\n 13629: ra = 450, jump @854\n      : @456 [@dyn 225] (gas: 30)\n 13635: a1 = s1 + 0x1078\n 13639: a0 = u64 [a1 + 0x350]\n 13643: t0 = u64 [a1 + 0x360]\n 13647: t1 = u64 [a1 + 0x348]\n 13651: a3 = u64 [a1 + 0x358]\n 13655: a1 = u64 [s1 + 0x88]\n 13659: a4 = a0 ^ a1\n 13662: a5 = a0 <u a1\n 13665: ra = u64 [s1 + 0x90]\n 13669: t2 = t1 <u ra\n 13672: a5 = t2 if a4 == 0\n 13675: a2 = u64 [s1 + 0x80]\n 13679: a4 = a3 - a2\n 13682: a3 = a3 <u a2\n 13685: a2 = u64 [s1 + 0x78]\n 13688: a2 = t0 - a2\n 13691: a2 = a2 - a3\n 13694: a3 = a4 <u a5\n 13697: a2 = a2 - a3\n 13700: u64 [s1 + 0x50] = a2\n 13703: a4 = a4 - a5\n 13706: u64 [s1 + 0x48] = a4\n 13709: a0 = a0 - a1\n 13712: a0 = a0 - t2\n 13715: u64 [s1 + 0x40] = a0\n 13718: a0 = t1 - ra\n 13721: u64 [s1 + 0x58] = a0\n 13724: ra = 0x1c4\n 13728: ecalli 9 // 'ref_time_left'\n 13730: fallthrough\n      : @457 [@dyn 226] (gas: 14)\n 13731: a0 = u64 [s1 + 0x60]\n 13734: a0 = reverse a0\n 13736: a1 = a0 << 0x20\n 13739: a2 = u64 [s1 + 0x68]\n 13742: a2 = reverse a2\n 13744: a2 = a2 >> 0x20\n 13747: a1 = a1 | a2\n 13750: a2 = u64 [s1 + 0x70]\n 13753: a2 = reverse a2\n 13755: a3 = a2 << 0x20\n 13758: a0 = a0 >> 0x20\n 13761: a0 = a0 | a3\n 13764: a3 = u64 [s1 + 0xd0]\n 13768: t0 = 454, jump @938\n      : @458 [@dyn 227] (gas: 17)\n 13774: u64 [a2 + 352] = 0\n 13778: u64 [a2 + 344] = 0\n 13782: u64 [a2 + 336] = 0\n 13786: a0 = u64 [s1 + 0x58]\n 13789: t0 = a0\n 13791: a5 = u64 [s1 + 0x48]\n 13794: a0 = a0 | a5\n 13797: a1 = u64 [s1 + 0x50]\n 13800: a4 = u64 [s1 + 0x40]\n 13803: a1 = a1 | a4\n 13806: a0 = a0 | a1\n 13809: a0 = a0 >> 0x20\n 13812: a1 = a1 | a5\n 13815: a1 = a1 << 0x20\n 13818: a0 = a0 | a1\n 13821: u64 [a2 + 328] = 0\n 13825: jump @385 if a0 != 0\n      : @459 (gas: 3)\n 13829: a0 = u64 [s1 + 0x90]\n 13833: a1 = t0\n 13835: ra = 456, jump @13\n      : @460 [@dyn 228] (gas: 4)\n 13841: u64 [s1 + 0x70] = a0\n 13844: a1 = 0x20\n 13847: a0 = u64 [s1 + 0x90]\n 13851: ra = 458, jump @13\n      : @461 [@dyn 229] (gas: 34)\n 13857: a2 = s1 + 0x2078\n 13861: a3 = a2 + 0x100\n 13865: u32 [a3 + 104] = 0x20\n 13869: u64 [a3 + 160] = 0xffffffffffffffff\n 13874: u64 [a3 + 152] = 0xffffffffffffffff\n 13879: u64 [a3 + 144] = 0xffffffffffffffff\n 13884: u64 [a3 + 136] = 0xffffffffffffffff\n 13889: a1 = u64 [s1 + 0xd0]\n 13893: a1 = a1 << 0x20\n 13896: a1 = a1 >> 0x20\n 13899: a2 = 0x800000000\n 13909: t0 = a1 | a2\n 13912: a1 = s1 + 0x21c0\n 13916: a1 = a1 << 0x20\n 13919: a1 = a1 >> 0x20\n 13922: a2 = s1 + 0x2200\n 13926: a2 = a2 << 0x20\n 13929: a3 = a2 | a1\n 13932: a1 = u64 [s1 + 0x70]\n 13935: a1 = a1 << 0x20\n 13938: a1 = a1 >> 0x20\n 13941: a4 = u64 [s1 + 0x58]\n 13944: a4 = a4 << 0x20\n 13947: a4 = a4 | a1\n 13950: a0 = a0 << 0x20\n 13953: a0 = a0 >> 0x20\n 13956: a1 = s1 + 0x21e0\n 13960: a1 = a1 << 0x20\n 13963: a5 = a1 | a0\n 13966: a1 = 0xffffffffffffffff\n 13969: a2 = 0xffffffffffffffff\n 13972: a0 = t0\n 13974: ecalli 1 // 'call'\n 13976: fallthrough\n      : @462 (gas: 1)\n 13977: jump @464 if a0 == 0\n      : @463 (gas: 1)\n 13980: jump @632\n      : @464 (gas: 2)\n 13983: ecalli 11 // 'return_data_size'\n 13985: fallthrough\n      : @465 (gas: 2)\n 13986: a1 = 0x20\n 13989: jump @467 if a0 >=u a1\n      : @466 (gas: 3)\n 13992: ecalli 11 // 'return_data_size'\n 13994: a1 = a0\n 13996: fallthrough\n      : @467 (gas: 18)\n 13997: a2 = s1 + 0x1078\n 14001: a3 = u64 [s1 + 0x90]\n 14005: a4 = u64 [s1 + 0x80]\n 14009: a5 = u64 [s1 + 0x78]\n 14012: u64 [s1 + 0x68] = a1\n 14015: u64 [s1 + 112] = 0\n 14018: u64 [a2 + 0x268] = a1\n 14022: u64 [a2 + 0x288] = a3\n 14026: u64 [a2 + 624] = 0\n 14030: a3 = u64 [s1 + 0x88]\n 14034: u64 [a2 + 0x290] = a3\n 14038: u64 [a2 + 632] = 0\n 14042: u64 [a2 + 0x298] = a4\n 14046: u64 [a2 + 640] = 0\n 14050: a0 = s1 + 0x1300\n 14054: a1 = s1 + 0x12e0\n 14058: u64 [a2 + 0x2a0] = a5\n 14062: ra = 460, jump @810\n      : @468 [@dyn 230] (gas: 35)\n 14068: t1 = u64 [s1 + 0x90]\n 14072: a0 = u64 [s1 + 0x68]\n 14075: ra = a0 + t1\n 14078: a1 = ra <u a0\n 14081: t0 = u64 [s1 + 0x88]\n 14085: a5 = u64 [s1 + 0x70]\n 14088: a2 = a5 + t0\n 14091: a2 = a2 + a1\n 14094: a3 = a2 ^ a5\n 14097: a4 = a2 <u a5\n 14100: a4 = a1 if a3 == 0\n 14103: a3 = u64 [s1 + 0x80]\n 14107: a1 = a5 + a3\n 14110: a4 = a4 + a1\n 14113: t2 = a4 <u a1\n 14116: a1 = a1 <u a5\n 14119: a0 = u64 [s1 + 0x78]\n 14122: a5 = a5 + a0\n 14125: a1 = a1 + a5\n 14128: t2 = t2 + a1\n 14131: a1 = s1 + 0x1078\n 14135: a5 = a1 + 0x200\n 14139: u64 [a5 + 0x18] = a4\n 14142: u64 [a5 + 0x10] = a2\n 14145: u64 [a1 + 0x208] = ra\n 14149: u64 [a5 + 0x40] = a0\n 14152: u64 [a5 + 0x38] = a3\n 14155: u64 [a1 + 0x230] = t0\n 14159: u64 [a1 + 0x228] = t1\n 14163: a3 = a1\n 14165: a0 = s1 + 0x12c0\n 14169: a1 = s1 + 0x12a0\n 14173: a2 = s1 + 0x1280\n 14177: u64 [a3 + 0x220] = t2\n 14181: ra = 462, jump @820\n      : @469 [@dyn 231] (gas: 7)\n 14187: a0 = sp + 0xffffffffffffffe0\n 14190: a0 = a0 & 0xffffffffffffffe0\n 14193: u64 [s1 + 0x90] = a0\n 14197: sp = a0\n 14199: a0 = s1 + 0x1260\n 14203: a1 = u64 [s1 + 0xd8]\n 14207: ra = 464, jump @6\n      : @470 [@dyn 232] (gas: 22)\n 14213: a5 = s1 + 0x1078\n 14217: a3 = u64 [a5 + 0x1e8]\n 14221: a0 = u64 [a5 + 0x1f0]\n 14225: a1 = u64 [a5 + 0x1f8]\n 14229: a2 = u64 [a5 + 0x200]\n 14233: a4 = u64 [s1 + 0xc0]\n 14237: u64 [a5 + 0x1a0] = a4\n 14241: a4 = u64 [s1 + 0xb8]\n 14245: u64 [a5 + 0x198] = a4\n 14249: a4 = u64 [s1 + 0xb0]\n 14253: u64 [a5 + 0x190] = a4\n 14257: a4 = u64 [s1 + 0xa8]\n 14261: u64 [a5 + 0x188] = a4\n 14265: a4 = a5 + 0x100\n 14269: u64 [a4 + 0xc0] = a2\n 14273: u64 [a4 + 0xb8] = a1\n 14277: u64 [a4 + 0xb0] = a0\n 14281: a0 = s1 + 0x1240\n 14285: a1 = s1 + 0x1220\n 14289: a2 = s1 + 0x1200\n 14293: u64 [a4 + 0xa8] = a3\n 14297: ra = 466, jump @793\n      : @471 [@dyn 233] (gas: 17)\n 14303: a0 = s1 + 0x1078\n 14307: a1 = a0 + 0x100\n 14311: a2 = u64 [a1 + 0xd8]\n 14315: u64 [s1 + 0x88] = a2\n 14319: a4 = u64 [a1 + 0xe0]\n 14323: u64 [s1 + 0x78] = a4\n 14326: a3 = u64 [a1 + 0xc8]\n 14330: u64 [s1 + 0x80] = a3\n 14334: a0 = u64 [a1 + 0xd0]\n 14338: u64 [s1 + 0x70] = a0\n 14341: a1 = u64 [s1 + 0x90]\n 14345: u64 [a1 + 0x10] = a2\n 14348: u64 [a1 + 0x18] = a4\n 14351: u64 [a1] = a3\n 14353: u64 [a1 + 0x8] = a0\n 14356: a0 = u64 [s1 + 0xd8]\n 14360: ra = 468, jump @7\n      : @472 [@dyn 234] (gas: 8)\n 14366: a0 = u64 [s1 + 0x78]\n 14369: a1 = u64 [s1 + 0x70]\n 14372: a0 = a0 | a1\n 14375: a1 = u64 [s1 + 0x88]\n 14379: a2 = u64 [s1 + 0x80]\n 14383: a1 = a1 | a2\n 14386: a0 = a0 | a1\n 14389: jump @475 if a0 != 0\n      : @473 (gas: 3)\n 14392: a0 = s1 + 0x11e0\n 14396: a1 = u64 [s1 + 0xc8]\n 14400: ra = 470, jump @6\n      : @474 [@dyn 235] (gas: 16)\n 14406: a3 = s1 + 0x1078\n 14410: a4 = a3 + 0x100\n 14414: a0 = u64 [a4 + 0x68]\n 14417: a1 = u64 [a4 + 0x80]\n 14421: a2 = u64 [a4 + 0x78]\n 14424: a3 = u64 [a4 + 0x70]\n 14427: a0 = a0 & 0xffffffffffffff00\n 14431: a4 = s1 + 0x2078\n 14435: a5 = a4 + 0x100\n 14439: u64 [a5 + 0xe0] = a1\n 14443: u64 [a5 + 0xd8] = a2\n 14447: u64 [a5 + 0xd0] = a3\n 14451: u64 [a5 + 0xc8] = a0\n 14455: a1 = s1 + 0x2240\n 14459: a0 = u64 [s1 + 0xc8]\n 14463: ra = 472, jump @7\n      : @475 [@dyn 236] (gas: 3)\n 14469: a0 = s1 + 0x11c0\n 14473: a1 = 0x40\n 14476: ra = 474, jump @2\n      : @476 [@dyn 237] (gas: 7)\n 14482: a3 = s1 + 0x1078\n 14486: a5 = a3 + 0x100\n 14490: a0 = u64 [a5 + 0x60]\n 14493: a1 = u64 [a5 + 0x58]\n 14496: a2 = u64 [a5 + 0x50]\n 14499: a4 = u64 [a5 + 0x48]\n 14502: t0 = 476, jump @936\n      : @477 [@dyn 238] (gas: 1)\n 14508: jump @385 if a0 != 0\n      : @478 (gas: 13)\n 14512: a0 = u64 [s1 + 0xa8]\n 14516: a2 = a3 + 0x100\n 14520: u64 [a2 + 0x28] = a0\n 14523: a0 = u64 [s1 + 0xb0]\n 14527: u64 [a2 + 0x30] = a0\n 14530: a0 = u64 [s1 + 0xb8]\n 14534: u64 [a2 + 0x38] = a0\n 14537: a1 = s1 + 0x11a0\n 14541: a0 = u64 [s1 + 0xc0]\n 14545: u64 [a2 + 0x40] = a0\n 14548: a0 = a4\n 14550: u64 [s1 + 0xd8] = a4\n 14554: ra = 478, jump @4\n      : @479 [@dyn 239] (gas: 6)\n 14560: a0 = u64 [s1 + 0xa0]\n 14564: ra = 0x1e0\n 14568: ecalli 5 // 'caller'\n 14570: a2 = u64 [s1 + 0xd0]\n 14574: t0 = 0x1e2\n 14578: jump @926\n      : @480 [@dyn 240] (gas: 2)\n 14581: a2 = u64 [s1 + 0xd0]\n 14585: t0 = 482, jump @926\n      : @481 [@dyn 241] (gas: 24)\n 14591: t0 = a1 | a0\n 14594: a3 = a3 >> 0x20\n 14597: a2 = reverse a2\n 14599: a1 = a2 << 0x20\n 14602: a1 = a1 | a3\n 14605: a2 = a2 >> 0x20\n 14608: a3 = u64 [0x200a0]\n 14613: a0 = s1 + 0x1078\n 14617: u64 [a0 + 0x120] = a3\n 14621: a3 = u64 [0x200a8]\n 14626: a4 = u64 [0x200b0]\n 14631: a5 = u64 [0x200b8]\n 14636: u64 [a0 + 0x118] = a3\n 14640: u64 [a0 + 0x110] = a4\n 14644: u64 [a0 + 256] = 0\n 14648: u64 [a0 + 0x108] = a5\n 14652: u64 [a0 + 0xf8] = a2\n 14656: u64 [a0 + 0xf0] = a1\n 14660: a1 = 0x20\n 14663: a2 = s1 + 0x1180\n 14667: a3 = s1 + 0x1160\n 14671: u64 [a0 + 0xe8] = t0\n 14675: a0 = u64 [s1 + 0xd8]\n 14679: ra = 484, jump @8\n      : @482 [@dyn 242] (gas: 5)\n 14685: a0 = 0\n 14687: a1 = u64 [s1 + 0x98]\n 14691: a2 = 0\n 14693: ecalli 12 // 'seal_return'\n 14695: jump @720\n      : @483 (gas: 6)\n 14698: a0 = u64 [s1 + 0xb0]\n 14702: ra = 0x1e6\n 14706: ecalli 5 // 'caller'\n 14708: a2 = u64 [s1 + 0xd8]\n 14712: t0 = 0x1e8\n 14716: jump @923\n      : @484 [@dyn 243] (gas: 2)\n 14719: a2 = u64 [s1 + 0xd8]\n 14723: t0 = 488, jump @923\n      : @485 [@dyn 244] (gas: 7)\n 14729: u64 [s1 + 1400] = 0\n 14733: u64 [s1 + 0x570] = a1\n 14737: u64 [s1 + 0x568] = a0\n 14741: a1 = s1 + 0x560\n 14745: u64 [s1 + 0x560] = a3\n 14749: a0 = 0\n 14751: ra = 490, jump @4\n      : @486 [@dyn 245] (gas: 7)\n 14757: u64 [s1 + 1368] = 0\n 14761: u64 [s1 + 1360] = 0\n 14765: u64 [s1 + 1344] = 0x4\n 14770: a0 = 0x20\n 14773: a1 = s1 + 0x540\n 14777: u64 [s1 + 1352] = 0\n 14781: ra = 492, jump @4\n      : @487 [@dyn 246] (gas: 7)\n 14787: a0 = sp + 0xffffffffffffffe0\n 14790: a0 = a0 & 0xffffffffffffffe0\n 14793: u64 [s1 + 0xa8] = a0\n 14797: sp = a0\n 14799: a2 = u64 [s1 + 0x98]\n 14803: a0 = i32 [a2]\n 14805: jump @489 if a0 >u 63\n      : @488 (gas: 2)\n 14809: u32 [a2 + 0] = 0x40\n 14812: fallthrough\n      : @489 (gas: 12)\n 14813: a0 = sp + 0xffffffffffffffe0\n 14816: a0 = a0 & 0xffffffffffffffe0\n 14819: u64 [s1 + 0x98] = a0\n 14823: sp = a0\n 14825: i32 a2 = a0 + 0\n 14827: a1 = 0x40\n 14830: a0 = u64 [s1 + 0xa0]\n 14834: ra = 0x1ee\n 14838: ecalli 8 // 'hash_keccak_256'\n 14840: a3 = u64 [s1 + 0x98]\n 14844: t0 = 0x1f0\n 14848: jump @946\n      : @490 [@dyn 247] (gas: 2)\n 14851: a3 = u64 [s1 + 0x98]\n 14855: t0 = 496, jump @946\n      : @491 [@dyn 248] (gas: 7)\n 14861: a1 = u64 [s1 + 0xa8]\n 14865: u64 [a1 + 0x18] = a3\n 14868: u64 [a1 + 0x10] = a2\n 14871: u64 [a1 + 0x8] = a4\n 14874: u64 [a1] = a0\n 14876: a0 = s1 + 0x520\n 14880: ra = 498, jump @6\n      : @492 [@dyn 249] (gas: 20)\n 14886: a3 = u64 [s1 + 0x520]\n 14890: a0 = u64 [s1 + 0x528]\n 14894: a1 = u64 [s1 + 0x530]\n 14898: a2 = u64 [s1 + 0x538]\n 14902: a4 = u64 [s1 + 0xd0]\n 14906: u64 [s1 + 0x4d8] = a4\n 14910: a4 = u64 [s1 + 0xc8]\n 14914: u64 [s1 + 0x4d0] = a4\n 14918: a4 = u64 [s1 + 0xc0]\n 14922: u64 [s1 + 0x4c8] = a4\n 14926: a4 = u64 [s1 + 0xb8]\n 14930: u64 [s1 + 0x4c0] = a4\n 14934: u64 [s1 + 0x4f8] = a2\n 14938: u64 [s1 + 0x4f0] = a1\n 14942: u64 [s1 + 0x4e8] = a0\n 14946: a0 = s1 + 0x500\n 14950: a1 = s1 + 0x4e0\n 14954: a2 = s1 + 0x4c0\n 14958: u64 [s1 + 0x4e0] = a3\n 14962: ra = 500, jump @793\n      : @493 [@dyn 250] (gas: 14)\n 14968: a4 = s1 + 0x500\n 14972: a0 = u64 [a4 + 0x18]\n 14975: a1 = u64 [a4 + 0x10]\n 14978: a2 = u64 [a4 + 0x8]\n 14981: a3 = u64 [a4]\n 14983: a4 = s1 + 0x1878\n 14987: a5 = a4 + 0x400\n 14991: u64 [a5 + 0xe0] = a0\n 14995: u64 [a5 + 0xd8] = a1\n 14999: u64 [a5 + 0xd0] = a2\n 15003: u64 [a5 + 0xc8] = a3\n 15007: a1 = s1 + 0x1d40\n 15011: a0 = u64 [s1 + 0xa8]\n 15015: ra = 502, jump @7\n      : @494 [@dyn 251] (gas: 9)\n 15021: a0 = s1 + 0x1878\n 15025: u64 [a0 + 1280] = 0\n 15029: u64 [a0 + 1272] = 0\n 15033: u64 [a0 + 1264] = 0\n 15037: a1 = a0\n 15039: u64 [a1 + 1256] = 0x1\n 15044: a0 = s1 + 0x4a0\n 15048: a1 = s1 + 0x1d60\n 15052: ra = 504, jump @6\n      : @495 [@dyn 252] (gas: 9)\n 15058: a0 = u64 [s1 + 0x4b0]\n 15062: u64 [s1 + 0x78] = a0\n 15065: a0 = u64 [s1 + 0x4a8]\n 15069: u64 [s1 + 0x70] = a0\n 15072: a0 = u64 [s1 + 0x4a0]\n 15076: u64 [s1 + 0x80] = a0\n 15080: a0 = s1 + 0x480\n 15084: a1 = 0x40\n 15087: ra = 506, jump @2\n      : @496 [@dyn 253] (gas: 13)\n 15093: a1 = s1 + 0x400\n 15097: a5 = u64 [a1 + 0x98]\n 15101: a4 = u64 [a1 + 0x90]\n 15105: a3 = u64 [a1 + 0x88]\n 15109: a0 = u64 [a1 + 0x80]\n 15113: a2 = a3 | a5\n 15116: a1 = a0 | a4\n 15119: a1 = a1 | a2\n 15122: a1 = a1 >> 0x20\n 15125: a2 = a2 | a4\n 15128: a2 = a2 << 0x20\n 15131: a1 = a1 | a2\n 15134: jump @385 if a1 != 0\n      : @497 (gas: 11)\n 15138: u64 [s1 + 1136] = 0\n 15142: u64 [s1 + 1128] = 0\n 15146: u64 [s1 + 1120] = 0\n 15150: a2 = 0xa9059cbb00000000\n 15160: a1 = s1 + 0x460\n 15164: u64 [s1 + 0x478] = a2\n 15168: u64 [s1 + 0xa8] = a0\n 15172: u64 [s1 + 0x98] = a3\n 15176: u64 [s1 + 0x90] = a4\n 15180: u64 [s1 + 0x88] = a5\n 15184: ra = 508, jump @4\n      : @498 [@dyn 254] (gas: 49)\n 15190: a0 = u64 [s1 + 0xb0]\n 15194: ecalli 5 // 'caller'\n 15196: a2 = u64 [s1 + 0xd8]\n 15200: a0 = u64 [a2 + 0x8]\n 15203: a1 = i32 [a2 + 0x10]\n 15206: a2 = u64 [a2]\n 15208: a0 = reverse a0\n 15210: a3 = a0 << 0x20\n 15213: a1 = reverse a1\n 15215: a1 = a1 >> 0x20\n 15218: t0 = a1 | a3\n 15221: a0 = a0 >> 0x20\n 15224: a1 = reverse a2\n 15226: a2 = a1 << 0x20\n 15229: t1 = a2 | a0\n 15232: a1 = a1 >> 0x20\n 15235: a0 = u64 [s1 + 0xa8]\n 15239: a2 = a0 + 0x4\n 15242: a3 = a2 <u a0\n 15245: a0 = u64 [s1 + 0x98]\n 15249: a5 = a0 + a3\n 15252: a4 = a5 <u a0\n 15255: a4 = a3 if a3 == 0\n 15258: a0 = u64 [s1 + 0x90]\n 15262: a4 = a4 + a0\n 15265: a3 = a4 <u a0\n 15268: a0 = u64 [s1 + 0x88]\n 15272: a3 = a3 + a0\n 15275: a0 = u64 [s1 + 0xd0]\n 15279: u64 [s1 + 0x3f8] = a0\n 15283: a0 = u64 [s1 + 0xc8]\n 15287: u64 [s1 + 0x3f0] = a0\n 15291: a0 = u64 [s1 + 0xc0]\n 15295: u64 [s1 + 0x3e8] = a0\n 15299: a0 = u64 [s1 + 0xb8]\n 15303: u64 [s1 + 0x3e0] = a0\n 15307: u64 [s1 + 1048] = 0\n 15311: u64 [s1 + 0x438] = a3\n 15315: u64 [s1 + 0x430] = a4\n 15319: u64 [s1 + 0x428] = a5\n 15323: u64 [s1 + 0x420] = a2\n 15327: u64 [s1 + 0x410] = a1\n 15331: u64 [s1 + 0x408] = t1\n 15335: a0 = s1 + 0x440\n 15339: a1 = s1 + 0x420\n 15343: a2 = s1 + 0x400\n 15347: a3 = s1 + 0x3e0\n 15351: u64 [s1 + 0x400] = t0\n 15355: ra = 510, jump @829\n      : @499 [@dyn 255] (gas: 16)\n 15361: a0 = u64 [s1 + 0x448]\n 15365: t0 = u64 [s1 + 0x458]\n 15369: t1 = u64 [s1 + 0x440]\n 15373: a3 = u64 [s1 + 0x450]\n 15377: a1 = u64 [s1 + 0x98]\n 15381: a4 = a0 ^ a1\n 15384: a5 = a0 <u a1\n 15387: ra = u64 [s1 + 0xa8]\n 15391: t2 = t1 <u ra\n 15394: a5 = t2 if a4 == 0\n 15397: a2 = u64 [s1 + 0x90]\n 15401: a4 = a3 - a2\n 15404: a3 = a3 <u a2\n 15407: a2 = u64 [s1 + 0x88]\n 15411: a2 = t0 - a2\n 15414: t0 = 512, jump @942\n      : @500 [@dyn 256] (gas: 3)\n 15420: u64 [s1 + 0x68] = a0\n 15423: ecalli 9 // 'ref_time_left'\n 15425: fallthrough\n      : @501 (gas: 35)\n 15426: a0 = u64 [s1 + 0x70]\n 15429: a0 = reverse a0\n 15431: a1 = a0 << 0x20\n 15434: a2 = u64 [s1 + 0x78]\n 15437: a2 = reverse a2\n 15439: a2 = a2 >> 0x20\n 15442: a1 = a1 | a2\n 15445: a2 = u64 [s1 + 0x80]\n 15449: a2 = reverse a2\n 15451: a3 = a2 << 0x20\n 15454: a0 = a0 >> 0x20\n 15457: a0 = a0 | a3\n 15460: a3 = u64 [s1 + 0xd8]\n 15464: a2 = a2 >> 0x20\n 15467: u64 [a3 + 0x8] = a0\n 15470: u64 [a3] = a1\n 15472: u32 [a3 + 0x10] = a2\n 15475: a2 = s1 + 0x1878\n 15479: u64 [a2 + 1312] = 0\n 15483: u64 [a2 + 1304] = 0\n 15487: u64 [a2 + 1296] = 0\n 15491: a0 = u64 [s1 + 0x68]\n 15494: t0 = a0\n 15496: a5 = u64 [s1 + 0x58]\n 15499: a0 = a0 | a5\n 15502: a1 = u64 [s1 + 0x60]\n 15505: a4 = u64 [s1 + 0x50]\n 15508: a1 = a1 | a4\n 15511: a0 = a0 | a1\n 15514: a0 = a0 >> 0x20\n 15517: a1 = a1 | a5\n 15520: a1 = a1 << 0x20\n 15523: a0 = a0 | a1\n 15526: u64 [a2 + 1288] = 0\n 15530: jump @503 if a0 == 0\n      : @502 (gas: 1)\n 15533: jump @385\n      : @503 (gas: 3)\n 15536: a0 = u64 [s1 + 0xa8]\n 15540: a1 = t0\n 15542: ra = 514, jump @13\n      : @504 [@dyn 257] (gas: 4)\n 15548: u64 [s1 + 0x80] = a0\n 15552: a1 = 0x20\n 15555: a0 = u64 [s1 + 0xa8]\n 15559: ra = 516, jump @13\n      : @505 [@dyn 258] (gas: 34)\n 15565: a2 = s1 + 0x1878\n 15569: a3 = a2 + 0x500\n 15573: u32 [a3 + 40] = 0x20\n 15577: u64 [a3 + 96] = 0xffffffffffffffff\n 15581: u64 [a3 + 88] = 0xffffffffffffffff\n 15585: u64 [a3 + 80] = 0xffffffffffffffff\n 15589: u64 [a3 + 72] = 0xffffffffffffffff\n 15593: a1 = u64 [s1 + 0xd8]\n 15597: a1 = a1 << 0x20\n 15600: a1 = a1 >> 0x20\n 15603: a2 = 0x800000000\n 15613: t0 = a1 | a2\n 15616: a1 = s1 + 0x1d80\n 15620: a1 = a1 << 0x20\n 15623: a1 = a1 >> 0x20\n 15626: a2 = s1 + 0x1dc0\n 15630: a2 = a2 << 0x20\n 15633: a3 = a2 | a1\n 15636: a1 = u64 [s1 + 0x80]\n 15640: a1 = a1 << 0x20\n 15643: a1 = a1 >> 0x20\n 15646: a4 = u64 [s1 + 0x68]\n 15649: a4 = a4 << 0x20\n 15652: a4 = a4 | a1\n 15655: a0 = a0 << 0x20\n 15658: a0 = a0 >> 0x20\n 15661: a1 = s1 + 0x1da0\n 15665: a1 = a1 << 0x20\n 15668: a5 = a1 | a0\n 15671: a1 = 0xffffffffffffffff\n 15674: a2 = 0xffffffffffffffff\n 15677: a0 = t0\n 15679: ecalli 1 // 'call'\n 15681: fallthrough\n      : @506 (gas: 1)\n 15682: jump @508 if a0 == 0\n      : @507 (gas: 1)\n 15685: jump @642\n      : @508 (gas: 2)\n 15688: ecalli 11 // 'return_data_size'\n 15690: fallthrough\n      : @509 (gas: 2)\n 15691: a1 = 0x20\n 15694: jump @511 if a0 >=u a1\n      : @510 (gas: 3)\n 15697: ecalli 11 // 'return_data_size'\n 15699: a1 = a0\n 15701: fallthrough\n      : @511 (gas: 17)\n 15702: a2 = u64 [s1 + 0xa8]\n 15706: a3 = u64 [s1 + 0x98]\n 15710: a4 = u64 [s1 + 0x90]\n 15714: a5 = u64 [s1 + 0x88]\n 15718: u64 [s1 + 0x78] = a1\n 15721: u64 [s1 + 128] = 0\n 15725: u64 [s1 + 0x380] = a1\n 15729: u64 [s1 + 0x3a0] = a2\n 15733: u64 [s1 + 904] = 0\n 15737: u64 [s1 + 0x3a8] = a3\n 15741: u64 [s1 + 912] = 0\n 15745: u64 [s1 + 0x3b0] = a4\n 15749: u64 [s1 + 920] = 0\n 15753: a0 = s1 + 0x3a0\n 15757: a1 = s1 + 0x380\n 15761: u64 [s1 + 0x3b8] = a5\n 15765: ra = 518, jump @810\n      : @512 [@dyn 259] (gas: 32)\n 15771: t0 = u64 [s1 + 0xa8]\n 15775: a0 = u64 [s1 + 0x78]\n 15778: ra = a0 + t0\n 15781: a1 = ra <u a0\n 15784: t1 = u64 [s1 + 0x98]\n 15788: a5 = u64 [s1 + 0x80]\n 15792: a2 = a5 + t1\n 15795: a2 = a2 + a1\n 15798: a3 = a2 ^ a5\n 15801: a4 = a2 <u a5\n 15804: a4 = a1 if a3 == 0\n 15807: a3 = u64 [s1 + 0x90]\n 15811: a1 = a5 + a3\n 15814: a4 = a4 + a1\n 15817: t2 = a4 <u a1\n 15820: a1 = a1 <u a5\n 15823: a0 = u64 [s1 + 0x88]\n 15827: a5 = a5 + a0\n 15830: a1 = a1 + a5\n 15833: t2 = t2 + a1\n 15836: u64 [s1 + 0x330] = a4\n 15840: u64 [s1 + 0x328] = a2\n 15844: u64 [s1 + 0x320] = ra\n 15848: u64 [s1 + 0x358] = a0\n 15852: u64 [s1 + 0x350] = a3\n 15856: u64 [s1 + 0x348] = t1\n 15860: u64 [s1 + 0x340] = t0\n 15864: a0 = s1 + 0x360\n 15868: a1 = s1 + 0x340\n 15872: a2 = s1 + 0x320\n 15876: u64 [s1 + 0x338] = t2\n 15880: ra = 520, jump @820\n      : @513 [@dyn 260] (gas: 3)\n 15886: a0 = s1 + 0x300\n 15890: a1 = 0x40\n 15893: ra = 522, jump @2\n      : @514 [@dyn 261] (gas: 13)\n 15899: a4 = s1 + 0x300\n 15903: a0 = u64 [a4 + 0x18]\n 15906: a1 = u64 [a4 + 0x10]\n 15909: a2 = u64 [a4 + 0x8]\n 15912: a3 = u64 [a4]\n 15914: a0 = a0 | a2\n 15917: a2 = a3 | a1\n 15920: a2 = a2 | a0\n 15923: a2 = a2 >> 0x20\n 15926: a0 = a0 | a1\n 15929: a0 = a0 << 0x20\n 15932: a0 = a0 | a2\n 15935: jump @516 if a0 == 0\n      : @515 (gas: 1)\n 15938: jump @385\n      : @516 (gas: 12)\n 15941: a0 = u64 [s1 + 0xb8]\n 15945: u64 [s1 + 0x2e0] = a0\n 15949: a0 = u64 [s1 + 0xc0]\n 15953: u64 [s1 + 0x2e8] = a0\n 15957: a0 = u64 [s1 + 0xc8]\n 15961: u64 [s1 + 0x2f0] = a0\n 15965: a1 = s1 + 0x2e0\n 15969: a0 = u64 [s1 + 0xd0]\n 15973: u64 [s1 + 0x2f8] = a0\n 15977: a0 = a3\n 15979: u64 [s1 + 0xd0] = a3\n 15983: ra = 524, jump @4\n      : @517 [@dyn 262] (gas: 6)\n 15989: a0 = u64 [s1 + 0xb0]\n 15993: ra = 0x20e\n 15997: ecalli 5 // 'caller'\n 15999: a2 = u64 [s1 + 0xd8]\n 16003: t0 = 0x210\n 16007: jump @926\n      : @518 [@dyn 263] (gas: 2)\n 16010: a2 = u64 [s1 + 0xd8]\n 16014: t0 = 528, jump @926\n      : @519 [@dyn 264] (gas: 24)\n 16020: t0 = a1 | a0\n 16023: a3 = a3 >> 0x20\n 16026: a2 = reverse a2\n 16028: a1 = a2 << 0x20\n 16031: a1 = a1 | a3\n 16034: a2 = a2 >> 0x20\n 16037: u64 [s1 + 696] = 0\n 16041: a3 = u64 [0x20140]\n 16046: a4 = u64 [0x20148]\n 16051: a5 = u64 [0x20150]\n 16056: a0 = u64 [0x20158]\n 16061: u64 [s1 + 0x2d8] = a3\n 16065: a3 = s1 + 0x200\n 16069: u64 [a3 + 0xd0] = a4\n 16073: u64 [a3 + 0xc8] = a5\n 16077: u64 [a3 + 0xc0] = a0\n 16081: u64 [a3 + 0xb0] = a2\n 16085: u64 [a3 + 0xa8] = a1\n 16089: a1 = 0x20\n 16092: a2 = s1 + 0x2c0\n 16096: a3 = s1 + 0x2a0\n 16100: u64 [s1 + 0x2a0] = t0\n 16104: a0 = u64 [s1 + 0xd0]\n 16108: ra = 530, jump @8\n      : @520 [@dyn 265] (gas: 5)\n 16114: a0 = 0\n 16116: a1 = u64 [s1 + 0xa0]\n 16120: a2 = 0\n 16122: ecalli 12 // 'seal_return'\n 16124: jump @720\n      : @521 (gas: 3)\n 16127: a0 = s1 + 0x1760\n 16131: a1 = 0x40\n 16134: ra = 532, jump @2\n      : @522 [@dyn 266] (gas: 14)\n 16140: a0 = s1 + 0x1078\n 16144: a1 = u64 [a0 + 0x700]\n 16148: u64 [s1 + 0xd0] = a1\n 16152: a2 = a0 + 0x600\n 16156: a1 = u64 [a2 + 0xf8]\n 16160: u64 [s1 + 0xc8] = a1\n 16164: a1 = u64 [a2 + 0xf0]\n 16168: u64 [s1 + 0xc0] = a1\n 16172: a0 = u64 [a2 + 0xe8]\n 16176: u64 [s1 + 0xd8] = a0\n 16180: ra = 0x216\n 16184: ecalli 11 // 'return_data_size'\n 16186: t0 = 0x218\n 16190: jump @928\n      : @523 [@dyn 267] (gas: 1)\n 16193: t0 = 536, jump @928\n      : @524 [@dyn 268] (gas: 1)\n 16199: jump @526 if a1 == 0\n      : @525 (gas: 1)\n 16202: jump @385\n      : @526 (gas: 3)\n 16205: a2 = a0\n 16207: a0 = a0 >> 0x20\n 16210: jump @528 if a0 == 0\n      : @527 (gas: 1)\n 16213: jump @385\n      : @528 (gas: 1)\n 16216: t0 = 538, jump @951\n      : @529 [@dyn 269] (gas: 1)\n 16222: ra = 540, jump @13\n      : @530 [@dyn 270] (gas: 11)\n 16228: a1 = s1 + 0x2078\n 16232: a2 = u64 [s1 + 0xc8]\n 16236: u32 [a1 + 0x348] = a2\n 16240: i32 a0 = a0 + 0\n 16242: a1 = s1 + 0x2000\n 16246: i32 a1 = a1 + 0x3c0\n 16250: a2 = 0\n 16252: ecalli 10 // 'return_data_copy'\n 16254: a0 = s1 + 0x2078\n 16258: a0 = i32 [a0 + 0x348]\n 16262: fallthrough\n      : @531 (gas: 2)\n 16263: a1 = u64 [s1 + 0xd0]\n 16267: jump @533 if a0 >=u a1\n      : @532 (gas: 1)\n 16270: jump @385\n      : @533 (gas: 2)\n 16273: ecalli 11 // 'return_data_size'\n 16275: fallthrough\n      : @534 (gas: 3)\n 16276: a1 = a0\n 16278: a0 = a0 >> 0x20\n 16281: jump @536 if a0 == 0\n      : @535 (gas: 1)\n 16284: jump @385\n      : @536 (gas: 3)\n 16287: a0 = u64 [s1 + 0xd8]\n 16291: u64 [s1 + 0xd0] = a1\n 16295: ra = 542, jump @13\n      : @537 [@dyn 271] (gas: 5)\n 16301: i32 a1 = a0 + 0\n 16303: a2 = i32 [s1 + 0xd0]\n 16307: a0 = 0x1\n 16310: ecalli 12 // 'seal_return'\n 16312: fallthrough\n      : @538 (gas: 5)\n 16313: a0 = u64 [s1 + 0xd8]\n 16317: a2 = a0 + 0xffffffffffffff80\n 16320: a0 = u64 [s1 + 0x80]\n 16324: a1 = u64 [s1 + 0x90]\n 16328: ra = 544, jump @956\n      : @539 [@dyn 272] (gas: 6)\n 16334: u64 [s1 + 0x78] = a0\n 16337: u64 [s1 + 0x68] = a1\n 16340: a0 = u64 [s1 + 0x88]\n 16344: a1 = u64 [s1 + 0x98]\n 16348: a2 = u64 [s1 + 0xd8]\n 16352: ra = 546, jump @956\n      : @540 [@dyn 273] (gas: 7)\n 16358: u64 [s1 + 0x20] = a0\n 16361: u64 [s1 + 0x70] = a1\n 16364: a1 = u64 [s1 + 0xd8]\n 16368: a2 = 0x80 - a1\n 16372: a0 = u64 [s1 + 0x80]\n 16376: a1 = u64 [s1 + 0x90]\n 16380: ra = 548, jump @961\n      : @541 [@dyn 274] (gas: 21)\n 16386: a2 = u64 [s1 + 0x70]\n 16389: a1 = a1 | a2\n 16392: a3 = u64 [s1 + 0xd8]\n 16396: a4 = a3 <u 0x80\n 16400: u64 [s1 + 0x70] = a4\n 16403: a2 = u64 [s1 + 0x68]\n 16406: a1 = a2 if a4 == 0\n 16409: a2 = u64 [s1 + 0x98]\n 16413: a2 = a1 if a3 != 0\n 16416: u64 [s1 + 0x98] = a2\n 16420: a1 = u64 [s1 + 0x20]\n 16423: a0 = a0 | a1\n 16426: a1 = u64 [s1 + 0x78]\n 16429: a0 = a1 if a4 == 0\n 16432: a1 = u64 [s1 + 0x88]\n 16436: a1 = a0 if a3 != 0\n 16439: a2 = a3\n 16441: u64 [s1 + 0x88] = a1\n 16445: a0 = u64 [s1 + 0x80]\n 16449: a1 = u64 [s1 + 0x90]\n 16453: ra = 550, jump @956\n      : @542 [@dyn 275] (gas: 9)\n 16459: a5 = 0\n 16461: a2 = u64 [s1 + 0x70]\n 16464: a1 = 0 if a2 == 0\n 16466: a0 = 0 if a2 == 0\n 16468: u64 [s1 + 112] = 0x63\n 16472: u64 [s1 + 104] = 0\n 16475: t2 = u64 [s1 + 0x98]\n 16479: t0 = u64 [s1 + 0x88]\n 16483: fallthrough\n      : @543 (gas: 90)\n 16484: u64 [s1 + 0x88] = a1\n 16488: u64 [s1 + 0x90] = a5\n 16492: u64 [s1 + 120] = 0\n 16495: a2 = t0 >> 0x3f\n 16498: a3 = t2 << 0x1\n 16501: a3 = a3 | a2\n 16504: a2 = t0 << 0x1\n 16507: ra = u64 [s1 + 0xc0]\n 16511: a4 = ra >> 0x3f\n 16514: a4 = a4 | a2\n 16517: u64 [s1 + 0x98] = a4\n 16521: a2 = u64 [s1 + 0x68]\n 16524: a1 = a2 ^ a3\n 16527: u64 [s1 + 0x80] = a1\n 16531: a1 = a2 <u a3\n 16534: a5 = u64 [s1 + 0x70]\n 16537: t0 = a5 <u a4\n 16540: a4 = u64 [s1 + 0x80]\n 16544: t0 = a1 if a4 != 0\n 16547: a1 = u64 [s1 + 0x88]\n 16551: a1 = a1 << 0x1\n 16554: a4 = a0 >> 0x3f\n 16557: a1 = a1 | a4\n 16560: u64 [s1 + 0x88] = a1\n 16564: a4 = t2 >> 0x3f\n 16567: a0 = a0 << 0x1\n 16570: a4 = a4 | a0\n 16573: a0 = ra << 0x1\n 16576: a1 = u64 [s1 + 0xc8]\n 16580: a5 = a1 >> 0x3f\n 16583: a0 = a0 | a5\n 16586: u64 [s1 + 0xc0] = a0\n 16590: a5 = a1 << 0x1\n 16593: a0 = u64 [s1 + 0xb8]\n 16597: a1 = a0 >> 0x3f\n 16600: t2 = a5 | a1\n 16603: a5 = a0 << 0x1\n 16606: a0 = u64 [s1 + 0xd0]\n 16610: ra = a0 >> 0x3f\n 16613: a5 = a5 | ra\n 16616: a0 = a0 << 0x1\n 16619: a1 = u64 [s1 + 0x90]\n 16623: a0 = a0 | a1\n 16626: u64 [s1 + 0xd0] = a0\n 16630: a0 = a5 | 0\n 16632: u64 [s1 + 0xb8] = a0\n 16636: a0 = t2 | 0\n 16638: u64 [s1 + 0xc8] = a0\n 16642: a0 = u64 [s1 + 0xc0]\n 16646: a0 = a0 | 0\n 16648: u64 [s1 + 0xc0] = a0\n 16652: a0 = a2 - a4\n 16655: a0 = a0 <u t0\n 16658: a1 = a2 <u a4\n 16661: t1 = u64 [s1 + 0x88]\n 16665: a5 = a2 - t1\n 16668: a5 = a5 - a1\n 16671: a5 = a5 - a0\n 16674: ra = a5 >>a 0x3f\n 16677: a0 = ra & 0x64\n 16680: a1 = u64 [s1 + 0x98]\n 16684: t0 = a1 - a0\n 16687: a1 = a1 <u a0\n 16690: t2 = a3 - a1\n 16693: a1 = 0 if a3 != 0\n 16695: a0 = a4 - a1\n 16698: a1 = a4 <u a1\n 16701: a1 = t1 - a1\n 16704: a3 = u64 [s1 + 0xd8]\n 16708: a5 = u64 [s1 + 0xb0]\n 16712: a2 = a3 | a5\n 16715: a2 = a2 <u 0x1\n 16718: a4 = u64 [s1 + 0xa0]\n 16722: t1 = a4 <u a2\n 16725: a4 = a4 - a2\n 16728: a2 = a3 <u 0x1\n 16731: a5 = a5 - a2\n 16734: a2 = u64 [s1 + 0xa8]\n 16738: a2 = a2 - t1\n 16741: a3 = a3 + 0xffffffffffffffff\n 16744: u64 [s1 + 0xb0] = a5\n 16748: u64 [s1 + 0xa8] = a2\n 16752: a2 = a2 | a5\n 16755: u64 [s1 + 0xd8] = a3\n 16759: a3 = a3 | a4\n 16762: a2 = a2 | a3\n 16765: a5 = ra & 0x1\n 16768: u64 [s1 + 0xa0] = a4\n 16772: t1 = 0\n 16774: jump @543 if a2 != 0\n      : @544 (gas: 20)\n 16778: a2 = u64 [s1 + 0xc8]\n 16782: a0 = a2 >> 0x3f\n 16785: a1 = u64 [s1 + 0xc0]\n 16789: a1 = a1 << 0x1\n 16792: t0 = a1 | a0\n 16795: a0 = u64 [s1 + 0xb8]\n 16799: a1 = a0 >> 0x3f\n 16802: a2 = a2 << 0x1\n 16805: a2 = a2 | a1\n 16808: a1 = u64 [s1 + 0xd0]\n 16812: a3 = a1 >> 0x3f\n 16815: a0 = a0 << 0x1\n 16818: a1 = a1 << 0x1\n 16821: a4 = a5 | a1\n 16824: a1 = u64 [s1 + 0x78]\n 16827: a5 = a1 | a3\n 16830: a5 = a5 | a0\n 16833: a3 = a1 | a2\n 16836: a2 = a1 | t0\n 16839: fallthrough\n      : @545 (gas: 16)\n 16840: a0 = u64 [s1 + 0x28]\n 16843: a0 = a4 <u a0\n 16846: a4 = u64 [s1 + 0x30]\n 16849: a1 = a4 ^ a5\n 16852: a4 = a5 <u a4\n 16855: a4 = a0 if a1 == 0\n 16858: a0 = u64 [s1 + 0x38]\n 16861: t0 = a3 <u a0\n 16864: a5 = u64 [s1 + 0x40]\n 16867: a1 = a5 ^ a2\n 16870: a2 = a2 <u a5\n 16873: a2 = t0 if a1 == 0\n 16876: a0 = a0 ^ a3\n 16879: a0 = a0 | a1\n 16882: a2 = a4 if a0 == 0\n 16885: jump @564 if a2 == 0\n      : @546 (gas: 4)\n 16889: a0 = s1 + 0x7ff\n 16893: a0 = a0 + 0x161\n 16897: a1 = 0x40\n 16900: ra = 552, jump @2\n      : @547 [@dyn 276] (gas: 15)\n 16906: a2 = s1 + 0x7ff\n 16910: a2 = a2 + 0x61\n 16913: t0 = u64 [a2 + 0x118]\n 16917: a1 = a2 + 0x100\n 16921: a5 = u64 [a1 + 0x10]\n 16924: a4 = u64 [a1 + 0x8]\n 16927: a0 = u64 [a1]\n 16929: a3 = a4 | t0\n 16932: a1 = a0 | a5\n 16935: a1 = a1 | a3\n 16938: a1 = a1 >> 0x20\n 16941: a3 = a3 | a5\n 16944: a3 = a3 << 0x20\n 16947: a1 = a1 | a3\n 16950: jump @549 if a1 == 0\n      : @548 (gas: 1)\n 16953: jump @385\n      : @549 (gas: 12)\n 16956: u64 [a2 + 240] = 0\n 16960: u64 [a2 + 232] = 0\n 16964: u64 [a2 + 224] = 0\n 16968: a3 = 0x8c379a000000000\n 16978: a1 = s1 + 0x7ff\n 16982: a1 = a1 + 0x141\n 16986: u64 [a2 + 0xf8] = a3\n 16990: u64 [s1 + 0xd8] = a0\n 16994: u64 [s1 + 0xd0] = a4\n 16998: u64 [s1 + 0xc0] = t0\n 17002: u64 [s1 + 0xc8] = a5\n 17006: ra = 554, jump @4\n      : @550 [@dyn 277] (gas: 5)\n 17012: a1 = u64 [s1 + 0xd8]\n 17016: a0 = u64 [s1 + 0xc8]\n 17020: a3 = u64 [s1 + 0xc0]\n 17024: a3 = a3 | a0\n 17027: t0 = 556, jump @925\n      : @551 [@dyn 278] (gas: 1)\n 17033: jump @553 if a0 != 0\n      : @552 (gas: 1)\n 17036: jump @385\n      : @553 (gas: 13)\n 17039: i32 a0 = a1 + 0x4\n 17042: a2 = s1 + 0x7ff\n 17046: a2 = a2 + 0x61\n 17049: a5 = 0\n 17051: u64 [a2 + 216] = 0\n 17055: u64 [a2 + 208] = 0\n 17059: u64 [a2 + 192] = 0x20\n 17064: a1 = s1 + 0x7ff\n 17068: a1 = a1 + 0x121\n 17072: u64 [a2 + 200] = 0\n 17076: u64 [s1 + 0xc8] = a3\n 17080: u64 [s1 + 0xc0] = a4\n 17084: ra = 558, jump @4\n      : @554 [@dyn 279] (gas: 1)\n 17090: t0 = 560, jump @944\n      : @555 [@dyn 280] (gas: 1)\n 17096: jump @557 if a0 != 0\n      : @556 (gas: 1)\n 17099: jump @385\n      : @557 (gas: 10)\n 17102: i32 a0 = a1 + 0x24\n 17105: a2 = s1 + 0x7ff\n 17109: a2 = a2 + 0x61\n 17112: u64 [a2 + 184] = 0\n 17116: u64 [a2 + 176] = 0\n 17120: u64 [a2 + 160] = 0x1d\n 17125: a1 = s1 + 0x7ff\n 17129: a1 = a1 + 0x101\n 17133: u64 [a2 + 168] = 0\n 17137: ra = 562, jump @4\n      : @558 [@dyn 281] (gas: 1)\n 17143: t0 = 564, jump @929\n      : @559 [@dyn 282] (gas: 1)\n 17149: jump @561 if a0 != 0\n      : @560 (gas: 1)\n 17152: jump @385\n      : @561 (gas: 14)\n 17155: i32 a0 = a3 + 0x44\n 17158: a1 = u64 [0x20128]\n 17163: a2 = u64 [0x20130]\n 17168: a3 = u64 [0x20138]\n 17173: a4 = s1 + 0x7ff\n 17177: a4 = a4 + 0x61\n 17180: u64 [a4 + 0x98] = a1\n 17184: u64 [a4 + 0x90] = a2\n 17188: u64 [a4 + 0x88] = a3\n 17192: a2 = 0x6c696d6974000000\n 17202: a1 = s1 + 0x7ff\n 17206: a1 = a1 + 0xe1\n 17210: u64 [a4 + 0x80] = a2\n 17214: ra = 566, jump @4\n      : @562 [@dyn 283] (gas: 3)\n 17220: a1 = 0x64\n 17223: a0 = u64 [s1 + 0xd8]\n 17227: ra = 568, jump @13\n      : @563 [@dyn 284] (gas: 5)\n 17233: i32 a1 = a0 + 0\n 17235: a0 = 0x1\n 17238: a2 = 0x64\n 17241: ecalli 12 // 'seal_return'\n 17243: fallthrough\n      : @564 (gas: 5)\n 17244: a0 = u64 [s1 + 0x58]\n 17247: ra = 0x23a\n 17251: ecalli 5 // 'caller'\n 17253: t0 = 0x23c\n 17257: jump @924\n      : @565 [@dyn 285] (gas: 1)\n 17260: t0 = 572, jump @924\n      : @566 [@dyn 286] (gas: 9)\n 17266: u64 [a2 + 1272] = 0\n 17270: a4 = a2 + 0x400\n 17274: u64 [a4 + 0xf0] = a1\n 17278: u64 [a4 + 0xe8] = a0\n 17282: a1 = s1 + 0x7ff\n 17286: a1 = a1 + 0x541\n 17290: u64 [a4 + 0xe0] = a3\n 17294: a0 = 0\n 17296: ra = 574, jump @4\n      : @567 [@dyn 287] (gas: 6)\n 17302: a1 = s1 + 0x7ff\n 17306: a1 = a1 + 0x61\n 17309: u64 [a1 + 1240] = 0\n 17313: u64 [a1 + 1232] = 0\n 17317: u64 [a1 + 1216] = 0x4\n 17322: t0 = 576, jump @930\n      : @568 [@dyn 288] (gas: 3)\n 17328: a1 = a1 + 0x521\n 17332: u64 [a2 + 1224] = 0\n 17336: ra = 578, jump @4\n      : @569 [@dyn 289] (gas: 3)\n 17342: a2 = u64 [s1 + 0x48]\n 17345: a0 = i32 [a2]\n 17347: jump @571 if a0 >u 63\n      : @570 (gas: 3)\n 17351: u32 [a2 + 0] = 0x40\n 17354: t0 = 0x244\n 17358: jump @952\n      : @571 (gas: 1)\n 17361: t0 = 580, jump @952\n      : @572 [@dyn 290] (gas: 4)\n 17367: ra = 0x246\n 17371: ecalli 8 // 'hash_keccak_256'\n 17373: t0 = 0x248\n 17377: jump @934\n      : @573 [@dyn 291] (gas: 1)\n 17380: t0 = 584, jump @934\n      : @574 [@dyn 292] (gas: 9)\n 17386: a5 = a4 + 0x700\n 17390: u64 [a5 + 0x40] = a3\n 17393: u64 [a5 + 0x38] = a2\n 17396: u64 [a5 + 0x30] = a1\n 17399: u64 [a5 + 0x28] = a0\n 17402: a0 = s1 + 0x7ff\n 17406: a0 = a0 + 0x501\n 17410: a1 = s1 + 0x1fa0\n 17414: ra = 586, jump @6\n      : @575 [@dyn 293] (gas: 15)\n 17420: a1 = s1 + 0x7ff\n 17424: a1 = a1 + 0x61\n 17427: a2 = a1 + 0x400\n 17431: a0 = u64 [a2 + 0xb8]\n 17435: u64 [s1 + 0xb8] = a0\n 17439: a0 = u64 [a2 + 0xb0]\n 17443: u64 [s1 + 0xb0] = a0\n 17447: a0 = u64 [a2 + 0xa8]\n 17451: u64 [s1 + 0xa8] = a0\n 17455: a0 = u64 [a2 + 0xa0]\n 17459: u64 [s1 + 0xa0] = a0\n 17463: a0 = s1 + 0x7ff\n 17467: a0 = a0 + 0x4e1\n 17471: a1 = 0x40\n 17474: ra = 588, jump @2\n      : @576 [@dyn 294] (gas: 20)\n 17480: a0 = s1 + 0x7ff\n 17484: a0 = a0 + 0x61\n 17487: a5 = a0 + 0x400\n 17491: a1 = u64 [a5 + 0x98]\n 17495: u64 [s1 + 0xc8] = a1\n 17499: a2 = u64 [a5 + 0x90]\n 17503: u64 [s1 + 0xc0] = a2\n 17507: a4 = u64 [a5 + 0x88]\n 17511: u64 [s1 + 0xd0] = a4\n 17515: a3 = u64 [a5 + 0x80]\n 17519: u64 [s1 + 0xd8] = a3\n 17523: u64 [a5 + 0x78] = a1\n 17526: u64 [a5 + 0x70] = a2\n 17529: u64 [a5 + 0x68] = a4\n 17532: a1 = s1 + 0x7ff\n 17536: a1 = a1 + 0x61\n 17539: a0 = s1 + 0x7ff\n 17543: a0 = a0 + 0x4c1\n 17547: u64 [a1 + 0x460] = a3\n 17551: ra = 590, jump @801\n      : @577 [@dyn 295] (gas: 13)\n 17557: a0 = u64 [s1 + 0xc8]\n 17561: a1 = u64 [s1 + 0xd0]\n 17565: a0 = a0 | a1\n 17568: a1 = u64 [s1 + 0xd8]\n 17572: a3 = a1\n 17574: a2 = u64 [s1 + 0xc0]\n 17578: a1 = a1 | a2\n 17581: a1 = a1 | a0\n 17584: a1 = a1 >> 0x20\n 17587: a0 = a0 | a2\n 17590: a0 = a0 << 0x20\n 17593: a0 = a0 | a1\n 17596: jump @579 if a0 == 0\n      : @578 (gas: 1)\n 17599: jump @385\n      : @579 (gas: 15)\n 17602: a0 = u64 [s1 + 0x28]\n 17605: a2 = s1 + 0x7ff\n 17609: a2 = a2 + 0x61\n 17612: a4 = a2 + 0x400\n 17616: u64 [a4 + 0x40] = a0\n 17619: a0 = u64 [s1 + 0x30]\n 17622: u64 [a4 + 0x48] = a0\n 17625: a0 = u64 [s1 + 0x38]\n 17628: u64 [a4 + 0x50] = a0\n 17631: a1 = s1 + 0x7ff\n 17635: a1 = a1 + 0x4a1\n 17639: a0 = u64 [s1 + 0x40]\n 17642: u64 [a4 + 0x58] = a0\n 17645: a0 = a3\n 17647: ra = 592, jump @4\n      : @580 [@dyn 296] (gas: 11)\n 17653: a0 = u64 [s1 + 0xc8]\n 17657: a1 = u64 [s1 + 0xc0]\n 17661: a2 = a1 | a0\n 17664: a3 = 0x100000000\n 17674: a0 = 0xffffffe0\n 17684: a4 = u64 [s1 + 0xd8]\n 17688: a0 = a4 <u a0\n 17691: a1 = u64 [s1 + 0xd0]\n 17695: a0 = 0 if a1 != 0\n 17697: a0 = 0 if a2 != 0\n 17699: jump @582 if a0 != 0\n      : @581 (gas: 1)\n 17702: jump @385\n      : @582 (gas: 18)\n 17705: i32 a0 = a4 + 0x20\n 17708: u64 [s1 + 0xc8] = a2\n 17712: a2 = s1 + 0x7ff\n 17716: a2 = a2 + 0x61\n 17719: u64 [s1 + 0xc0] = a3\n 17723: a3 = u64 [s1 + 0xa0]\n 17727: a4 = a2 + 0x400\n 17731: u64 [a4 + 0x20] = a3\n 17734: a3 = u64 [s1 + 0xa8]\n 17738: u64 [a4 + 0x28] = a3\n 17741: a3 = u64 [s1 + 0xb0]\n 17745: u64 [a4 + 0x30] = a3\n 17748: a1 = s1 + 0x7ff\n 17752: a1 = a1 + 0x481\n 17756: a3 = u64 [s1 + 0xb8]\n 17760: u64 [a4 + 0x38] = a3\n 17763: u64 [s1 + 0xb8] = a0\n 17767: ra = 594, jump @4\n      : @583 [@dyn 297] (gas: 4)\n 17773: a1 = u64 [s1 + 0xd8]\n 17777: a0 = u64 [s1 + 0xc0]\n 17781: a0 = a0 + 0xffffffffffffffc0\n 17784: t0 = 596, jump @943\n      : @584 [@dyn 298] (gas: 1)\n 17790: jump @586 if a0 != 0\n      : @585 (gas: 1)\n 17793: jump @385\n      : @586 (gas: 11)\n 17796: i32 a0 = a1 + 0x40\n 17799: a3 = s1 + 0x7ff\n 17803: a3 = a3 + 0x61\n 17806: u64 [a3 + 1048] = 0\n 17810: u64 [a3 + 1040] = 0\n 17814: u64 [a3 + 1032] = 0\n 17818: a1 = s1 + 0x7ff\n 17822: a1 = a1 + 0x461\n 17826: u64 [a3 + 1024] = 0x1\n 17831: u64 [s1 + 0xa0] = a0\n 17835: ra = 598, jump @4\n      : @587 [@dyn 299] (gas: 5)\n 17841: a0 = u64 [s1 + 0x58]\n 17844: ra = 0x258\n 17848: ecalli 5 // 'caller'\n 17850: t0 = 0x25a\n 17854: jump @924\n      : @588 [@dyn 300] (gas: 1)\n 17857: t0 = 602, jump @924\n      : @589 [@dyn 301] (gas: 9)\n 17863: u64 [a2 + 1016] = 0\n 17867: a4 = a2 + 0x300\n 17871: u64 [a4 + 0xf0] = a1\n 17875: u64 [a4 + 0xe8] = a0\n 17879: a1 = s1 + 0x7ff\n 17883: a1 = a1 + 0x441\n 17887: u64 [a4 + 0xe0] = a3\n 17891: a0 = 0\n 17893: ra = 604, jump @4\n      : @590 [@dyn 302] (gas: 6)\n 17899: a1 = s1 + 0x7ff\n 17903: a1 = a1 + 0x61\n 17906: u64 [a1 + 984] = 0\n 17910: u64 [a1 + 976] = 0\n 17914: u64 [a1 + 960] = 0x5\n 17919: t0 = 606, jump @930\n      : @591 [@dyn 303] (gas: 3)\n 17925: a1 = a1 + 0x421\n 17929: u64 [a2 + 968] = 0\n 17933: ra = 608, jump @4\n      : @592 [@dyn 304] (gas: 7)\n 17939: a0 = sp + 0xffffffffffffffe0\n 17942: a0 = a0 & 0xffffffffffffffe0\n 17945: u64 [s1 + 0xb0] = a0\n 17949: sp = a0\n 17951: a2 = u64 [s1 + 0x48]\n 17954: a0 = i32 [a2]\n 17956: jump @594 if a0 >u 63\n      : @593 (gas: 2)\n 17960: u32 [a2 + 0] = 0x40\n 17963: fallthrough\n      : @594 (gas: 30)\n 17964: a0 = sp + 0xffffffffffffffe0\n 17967: a0 = a0 & 0xffffffffffffffe0\n 17970: u64 [s1 + 0xd0] = a0\n 17974: sp = a0\n 17976: i32 a2 = a0 + 0\n 17978: a1 = 0x40\n 17981: a0 = u64 [s1 + 0x50]\n 17984: ecalli 8 // 'hash_keccak_256'\n 17986: a3 = u64 [s1 + 0xd0]\n 17990: a0 = u64 [a3 + 0x18]\n 17993: a1 = u64 [a3 + 0x10]\n 17996: a2 = u64 [a3 + 0x8]\n 17999: a3 = u64 [a3]\n 18001: a4 = reverse a0\n 18003: u64 [s1 + 0xc0] = a4\n 18007: a1 = reverse a1\n 18009: u64 [s1 + 0xc8] = a1\n 18013: a2 = reverse a2\n 18015: u64 [s1 + 0xa8] = a2\n 18019: a0 = reverse a3\n 18021: u64 [s1 + 0xd0] = a0\n 18025: a3 = u64 [s1 + 0xb0]\n 18029: u64 [a3 + 0x18] = a0\n 18032: u64 [a3 + 0x10] = a2\n 18035: u64 [a3 + 0x8] = a1\n 18038: u64 [a3] = a4\n 18040: a0 = s1 + 0x7ff\n 18044: a0 = a0 + 0x401\n 18048: a1 = u64 [s1 + 0xd8]\n 18052: ra = 610, jump @2\n      : @595 [@dyn 305] (gas: 16)\n 18058: a3 = s1 + 0x7ff\n 18062: a3 = a3 + 0x61\n 18065: a4 = a3 + 0x300\n 18069: a0 = u64 [a4 + 0xb8]\n 18073: a1 = u64 [a4 + 0xb0]\n 18077: a2 = u64 [a4 + 0xa8]\n 18081: a3 = u64 [a4 + 0xa0]\n 18085: a4 = s1 + 0x1878\n 18089: a5 = a4 + 0x700\n 18093: u64 [a5 + 0x60] = a0\n 18096: u64 [a5 + 0x58] = a1\n 18099: u64 [a5 + 0x50] = a2\n 18102: u64 [a5 + 0x48] = a3\n 18105: a1 = s1 + 0x1fc0\n 18109: a0 = u64 [s1 + 0xb0]\n 18113: ra = 612, jump @7\n      : @596 [@dyn 306] (gas: 4)\n 18119: a0 = s1 + 0x7ff\n 18123: a0 = a0 + 0x3e1\n 18127: a1 = u64 [s1 + 0xb8]\n 18131: ra = 614, jump @2\n      : @597 [@dyn 307] (gas: 31)\n 18137: a0 = s1 + 0x7ff\n 18141: a0 = a0 + 0x61\n 18144: t0 = u64 [a0 + 0x380]\n 18148: t1 = u64 [a0 + 0x388]\n 18152: t2 = u64 [a0 + 0x390]\n 18156: a3 = u64 [a0 + 0x398]\n 18160: a0 = u64 [s1 + 0xc0]\n 18164: a0 = a0 + 0x1\n 18167: a5 = a0 <u 0x1\n 18170: a1 = u64 [s1 + 0xc8]\n 18174: a5 = a5 + a1\n 18177: a4 = a0 | a5\n 18180: a4 = a4 <u 0x1\n 18183: a1 = u64 [s1 + 0xa8]\n 18187: a4 = a4 + a1\n 18190: a1 = a4 <u a1\n 18193: a2 = u64 [s1 + 0xd0]\n 18197: a1 = a1 + a2\n 18200: a2 = s1 + 0x1878\n 18204: u64 [a2 + 0x780] = a1\n 18208: a1 = a2 + 0x700\n 18212: u64 [a1 + 0x78] = a4\n 18215: u64 [a1 + 0x70] = a5\n 18218: u64 [a1 + 0x68] = a0\n 18221: u64 [a1 + 0xa0] = a3\n 18225: u64 [a2 + 0x798] = t2\n 18229: u64 [a2 + 0x790] = t1\n 18233: u64 [a2 + 0x788] = t0\n 18237: a0 = s1 + 0x1fe0\n 18241: a1 = s1 + 0x2000\n 18245: ra = 616, jump @7\n      : @598 [@dyn 308] (gas: 8)\n 18251: a0 = sp + 0xffffffffffffffe0\n 18254: a5 = a0 & 0xffffffffffffffe0\n 18257: sp = a5\n 18259: a1 = u64 [s1 + 0xc0]\n 18263: a0 = a1 + 0x2\n 18266: a1 = a0 <u a1\n 18269: a3 = u64 [s1 + 0xc8]\n 18273: t0 = 618, jump @955\n      : @599 [@dyn 309] (gas: 14)\n 18279: a1 = u64 [s1 + 0xa8]\n 18283: a3 = a3 + a1\n 18286: a1 = a3 <u a1\n 18289: a4 = u64 [s1 + 0xd0]\n 18293: a1 = a1 + a4\n 18296: u64 [s1 + 0xd8] = a5\n 18300: u64 [a5 + 0x18] = a1\n 18303: u64 [a5 + 0x10] = a3\n 18306: u64 [a5 + 0x8] = a2\n 18309: u64 [a5] = a0\n 18311: a0 = s1 + 0x7ff\n 18315: a0 = a0 + 0x3c1\n 18319: a1 = u64 [s1 + 0xa0]\n 18323: ra = 620, jump @2\n      : @600 [@dyn 310] (gas: 16)\n 18329: a3 = s1 + 0x7ff\n 18333: a3 = a3 + 0x61\n 18336: a4 = a3 + 0x300\n 18340: a0 = u64 [a4 + 0x70]\n 18343: a1 = u64 [a4 + 0x78]\n 18346: a2 = u64 [a4 + 0x68]\n 18349: a3 = u64 [a4 + 0x60]\n 18352: a1 = a1 | a2\n 18355: a0 = a0 | a3\n 18358: a0 = a0 | a1\n 18361: a0 = a0 >u 0\n 18363: u64 [s1 + 0xd0] = a0\n 18367: a0 = s1 + 0x7ff\n 18371: a0 = a0 + 0x3a1\n 18375: a1 = u64 [s1 + 0xd8]\n 18379: ra = 622, jump @6\n      : @601 [@dyn 311] (gas: 19)\n 18385: a3 = s1 + 0x7ff\n 18389: a3 = a3 + 0x61\n 18392: a4 = a3 + 0x300\n 18396: a0 = u64 [a4 + 0x40]\n 18399: a1 = u64 [a4 + 0x48]\n 18402: a2 = u64 [a4 + 0x58]\n 18405: a3 = u64 [a4 + 0x50]\n 18408: a0 = a0 & 0xffffffffffffff00\n 18412: a4 = u64 [s1 + 0xd0]\n 18416: a0 = a0 | a4\n 18419: a4 = s1 + 0x1878\n 18423: a5 = a4 + 0x700\n 18427: u64 [a5 + 0xc0] = a2\n 18431: u64 [a5 + 0xb8] = a3\n 18435: u64 [a5 + 0xb0] = a1\n 18439: u64 [a5 + 0xa8] = a0\n 18443: a1 = s1 + 0x2020\n 18447: a0 = u64 [s1 + 0xd8]\n 18451: ra = 624, jump @7\n      : @602 [@dyn 312] (gas: 10)\n 18457: a0 = s1 + 0x1878\n 18461: u64 [a0 + 2016] = 0\n 18465: u64 [a0 + 2008] = 0\n 18469: u64 [a0 + 2000] = 0\n 18473: a1 = a0\n 18475: u64 [a1 + 1992] = 0x2\n 18480: a0 = s1 + 0x7ff\n 18484: a0 = a0 + 0x381\n 18488: a1 = s1 + 0x2040\n 18492: ra = 626, jump @6\n      : @603 [@dyn 313] (gas: 13)\n 18498: a1 = s1 + 0x7ff\n 18502: a1 = a1 + 0x61\n 18505: a2 = a1 + 0x300\n 18509: a0 = u64 [a2 + 0x30]\n 18512: u64 [s1 + 0xb0] = a0\n 18516: a0 = u64 [a2 + 0x28]\n 18519: u64 [s1 + 0xa8] = a0\n 18523: a0 = u64 [a2 + 0x20]\n 18526: u64 [s1 + 0xb8] = a0\n 18530: a0 = s1 + 0x7ff\n 18534: a0 = a0 + 0x361\n 18538: a1 = 0x40\n 18541: ra = 628, jump @2\n      : @604 [@dyn 314] (gas: 15)\n 18547: a2 = s1 + 0x7ff\n 18551: a2 = a2 + 0x61\n 18554: t0 = u64 [a2 + 0x318]\n 18558: a1 = a2 + 0x300\n 18562: a5 = u64 [a1 + 0x10]\n 18565: a4 = u64 [a1 + 0x8]\n 18568: a0 = u64 [a1]\n 18570: a3 = a4 | t0\n 18573: a1 = a0 | a5\n 18576: a1 = a1 | a3\n 18579: a1 = a1 >> 0x20\n 18582: a3 = a3 | a5\n 18585: a3 = a3 << 0x20\n 18588: a1 = a1 | a3\n 18591: jump @606 if a1 == 0\n      : @605 (gas: 1)\n 18594: jump @385\n      : @606 (gas: 12)\n 18597: u64 [a2 + 752] = 0\n 18601: u64 [a2 + 744] = 0\n 18605: u64 [a2 + 736] = 0\n 18609: a3 = 0xa9059cbb00000000\n 18619: a1 = s1 + 0x7ff\n 18623: a1 = a1 + 0x341\n 18627: u64 [a2 + 0x2f8] = a3\n 18631: u64 [s1 + 0xd8] = a0\n 18635: u64 [s1 + 0xd0] = a4\n 18639: u64 [s1 + 0xc8] = a5\n 18643: u64 [s1 + 0xc0] = t0\n 18647: ra = 630, jump @4\n      : @607 [@dyn 315] (gas: 6)\n 18653: a0 = u64 [s1 + 0x58]\n 18656: ra = 0x278\n 18660: ecalli 5 // 'caller'\n 18662: a2 = u64 [s1 + 0x60]\n 18665: t0 = 0x27a\n 18669: jump @926\n      : @608 [@dyn 316] (gas: 2)\n 18672: a2 = u64 [s1 + 0x60]\n 18675: t0 = 634, jump @926\n      : @609 [@dyn 317] (gas: 48)\n 18681: t0 = a1 | a0\n 18684: a3 = a3 >> 0x20\n 18687: a2 = reverse a2\n 18689: a1 = a2 << 0x20\n 18692: t1 = a1 | a3\n 18695: a2 = a2 >> 0x20\n 18698: a0 = u64 [s1 + 0xd8]\n 18702: a3 = a0 + 0x4\n 18705: a4 = a3 <u a0\n 18708: a0 = u64 [s1 + 0xd0]\n 18712: a5 = a0 + a4\n 18715: a0 = a5 <u a0\n 18718: a0 = a4 if a4 == 0\n 18721: a1 = u64 [s1 + 0xc8]\n 18725: a0 = a0 + a1\n 18728: a4 = a0 <u a1\n 18731: a1 = u64 [s1 + 0xc0]\n 18735: a4 = a4 + a1\n 18738: a1 = s1 + 0x7ff\n 18742: a1 = a1 + 0x61\n 18745: u64 [a1 + 0x2b8] = a4\n 18749: a4 = a1 + 0x200\n 18753: u64 [a4 + 0xb0] = a0\n 18757: u64 [a4 + 0xa8] = a5\n 18761: a0 = u64 [s1 + 0x40]\n 18764: u64 [a4 + 0x78] = a0\n 18767: a0 = u64 [s1 + 0x38]\n 18770: u64 [a4 + 0x70] = a0\n 18773: a0 = u64 [s1 + 0x30]\n 18776: u64 [a4 + 0x68] = a0\n 18779: a0 = u64 [s1 + 0x28]\n 18782: u64 [a4 + 0x60] = a0\n 18785: u64 [a4 + 0xa0] = a3\n 18789: u64 [a4 + 0x90] = a2\n 18793: u64 [a1 + 0x288] = t1\n 18797: u64 [a1 + 0x280] = t0\n 18801: a4 = s1 + 0x7ff\n 18805: a4 = a4 + 0x61\n 18808: a0 = s1 + 0x7ff\n 18812: a0 = a0 + 0x321\n 18816: a1 = s1 + 0x7ff\n 18820: a1 = a1 + 0x301\n 18824: a2 = s1 + 0x7ff\n 18828: a2 = a2 + 0x2e1\n 18832: a3 = s1 + 0x7ff\n 18836: a3 = a3 + 0x2c1\n 18840: u64 [a4 + 664] = 0\n 18844: ra = 636, jump @829\n      : @610 [@dyn 318] (gas: 31)\n 18850: a1 = s1 + 0x7ff\n 18854: a1 = a1 + 0x61\n 18857: a0 = u64 [a1 + 0x2c8]\n 18861: t0 = u64 [a1 + 0x2d8]\n 18865: t1 = u64 [a1 + 0x2c0]\n 18869: a3 = u64 [a1 + 0x2d0]\n 18873: a1 = u64 [s1 + 0xd0]\n 18877: a4 = a0 ^ a1\n 18880: a5 = a0 <u a1\n 18883: ra = u64 [s1 + 0xd8]\n 18887: t2 = t1 <u ra\n 18890: a5 = t2 if a4 == 0\n 18893: a2 = u64 [s1 + 0xc8]\n 18897: a4 = a3 - a2\n 18900: a3 = a3 <u a2\n 18903: a2 = u64 [s1 + 0xc0]\n 18907: a2 = t0 - a2\n 18910: a2 = a2 - a3\n 18913: a3 = a4 <u a5\n 18916: a2 = a2 - a3\n 18919: u64 [s1 + 0x98] = a2\n 18923: a4 = a4 - a5\n 18926: u64 [s1 + 0x90] = a4\n 18930: a0 = a0 - a1\n 18933: a0 = a0 - t2\n 18936: u64 [s1 + 0x88] = a0\n 18940: a0 = t1 - ra\n 18943: u64 [s1 + 0xa0] = a0\n 18947: ra = 0x27e\n 18951: ecalli 9 // 'ref_time_left'\n 18953: fallthrough\n      : @611 [@dyn 319] (gas: 14)\n 18954: a0 = u64 [s1 + 0xa8]\n 18958: a0 = reverse a0\n 18960: a1 = a0 << 0x20\n 18963: a2 = u64 [s1 + 0xb0]\n 18967: a2 = reverse a2\n 18969: a2 = a2 >> 0x20\n 18972: a1 = a1 | a2\n 18975: a2 = u64 [s1 + 0xb8]\n 18979: a2 = reverse a2\n 18981: a3 = a2 << 0x20\n 18984: a0 = a0 >> 0x20\n 18987: a0 = a0 | a3\n 18990: a3 = u64 [s1 + 0x60]\n 18993: t0 = 640, jump @938\n      : @612 [@dyn 320] (gas: 17)\n 18999: u64 [a2 + 0] = 0\n 19001: u64 [a2 + 4294967288] = 0\n 19004: u64 [a2 + 4294967280] = 0\n 19007: a0 = u64 [s1 + 0xa0]\n 19011: t0 = a0\n 19013: a5 = u64 [s1 + 0x90]\n 19017: a0 = a0 | a5\n 19020: a1 = u64 [s1 + 0x98]\n 19024: a4 = u64 [s1 + 0x88]\n 19028: a1 = a1 | a4\n 19031: a0 = a0 | a1\n 19034: a0 = a0 >> 0x20\n 19037: a1 = a1 | a5\n 19040: a1 = a1 << 0x20\n 19043: a0 = a0 | a1\n 19046: u64 [a2 + 4294967272] = 0\n 19049: jump @614 if a0 == 0\n      : @613 (gas: 1)\n 19052: jump @385\n      : @614 (gas: 3)\n 19055: a0 = u64 [s1 + 0xd8]\n 19059: a1 = t0\n 19061: ra = 642, jump @13\n      : @615 [@dyn 321] (gas: 4)\n 19067: u64 [s1 + 0xb8] = a0\n 19071: a1 = 0x20\n 19074: a0 = u64 [s1 + 0xd8]\n 19078: ra = 644, jump @13\n      : @616 [@dyn 322] (gas: 33)\n 19084: a2 = s1 + 0x2078\n 19088: u32 [a2 + 8] = 0x20\n 19092: u64 [a2 + 64] = 0xffffffffffffffff\n 19096: u64 [a2 + 56] = 0xffffffffffffffff\n 19100: u64 [a2 + 48] = 0xffffffffffffffff\n 19104: u64 [a2 + 40] = 0xffffffffffffffff\n 19108: a1 = u64 [s1 + 0x60]\n 19111: a1 = a1 << 0x20\n 19114: a1 = a1 >> 0x20\n 19117: a2 = 0x800000000\n 19127: t0 = a1 | a2\n 19130: a1 = s1 + 0x2060\n 19134: a1 = a1 << 0x20\n 19137: a1 = a1 >> 0x20\n 19140: a2 = s1 + 0x20a0\n 19144: a2 = a2 << 0x20\n 19147: a3 = a2 | a1\n 19150: a1 = u64 [s1 + 0xb8]\n 19154: a1 = a1 << 0x20\n 19157: a1 = a1 >> 0x20\n 19160: a4 = u64 [s1 + 0xa0]\n 19164: a4 = a4 << 0x20\n 19167: a4 = a4 | a1\n 19170: a0 = a0 << 0x20\n 19173: a0 = a0 >> 0x20\n 19176: a1 = s1 + 0x2080\n 19180: a1 = a1 << 0x20\n 19183: a5 = a1 | a0\n 19186: a1 = 0xffffffffffffffff\n 19189: a2 = 0xffffffffffffffff\n 19192: a0 = t0\n 19194: ecalli 1 // 'call'\n 19196: fallthrough\n      : @617 (gas: 1)\n 19197: jump @652 if a0 != 0\n      : @618 (gas: 2)\n 19201: ecalli 11 // 'return_data_size'\n 19203: fallthrough\n      : @619 (gas: 2)\n 19204: a1 = 0x20\n 19207: jump @621 if a0 >=u a1\n      : @620 (gas: 3)\n 19210: ecalli 11 // 'return_data_size'\n 19212: a1 = a0\n 19214: fallthrough\n      : @621 (gas: 21)\n 19215: a2 = s1 + 0x7ff\n 19219: a2 = a2 + 0x61\n 19222: t0 = u64 [s1 + 0xd8]\n 19226: a4 = u64 [s1 + 0xd0]\n 19230: a5 = u64 [s1 + 0xc8]\n 19234: a3 = u64 [s1 + 0xc0]\n 19238: u64 [s1 + 0xb0] = a1\n 19242: u64 [s1 + 184] = 0\n 19246: u64 [a2 + 0x200] = a1\n 19250: u64 [a2 + 0x220] = t0\n 19254: u64 [a2 + 520] = 0\n 19258: u64 [a2 + 0x228] = a4\n 19262: u64 [a2 + 528] = 0\n 19266: u64 [a2 + 0x230] = a5\n 19270: u64 [a2 + 536] = 0\n 19274: a0 = s1 + 0x7ff\n 19278: a0 = a0 + 0x281\n 19282: a1 = s1 + 0x7ff\n 19286: a1 = a1 + 0x261\n 19290: u64 [a2 + 0x238] = a3\n 19294: ra = 646, jump @810\n      : @622 [@dyn 323] (gas: 51)\n 19300: t0 = u64 [s1 + 0xd8]\n 19304: a1 = u64 [s1 + 0xb0]\n 19308: a0 = a1 + t0\n 19311: a1 = a0 <u a1\n 19314: t1 = u64 [s1 + 0xd0]\n 19318: a5 = u64 [s1 + 0xb8]\n 19322: a2 = a5 + t1\n 19325: a2 = a2 + a1\n 19328: a3 = a2 ^ a5\n 19331: a4 = a2 <u a5\n 19334: a4 = a1 if a3 == 0\n 19337: ra = u64 [s1 + 0xc8]\n 19341: a1 = a5 + ra\n 19344: a4 = a4 + a1\n 19347: t2 = a4 <u a1\n 19350: a1 = a1 <u a5\n 19353: a3 = u64 [s1 + 0xc0]\n 19357: a5 = a5 + a3\n 19360: a1 = a1 + a5\n 19363: t2 = t2 + a1\n 19366: a1 = s1 + 0x7ff\n 19370: a1 = a1 + 0x61\n 19373: u64 [a1 + 0x1b0] = a4\n 19377: a1 = s1 + 0x7ff\n 19381: a1 = a1 + 0x61\n 19384: u64 [a1 + 0x1a8] = a2\n 19388: a1 = s1 + 0x7ff\n 19392: a1 = a1 + 0x61\n 19395: u64 [a1 + 0x1a0] = a0\n 19399: a0 = s1 + 0x7ff\n 19403: a0 = a0 + 0x61\n 19406: u64 [a0 + 0x1d8] = a3\n 19410: a0 = s1 + 0x7ff\n 19414: a0 = a0 + 0x61\n 19417: u64 [a0 + 0x1d0] = ra\n 19421: a0 = s1 + 0x7ff\n 19425: a0 = a0 + 0x61\n 19428: u64 [a0 + 0x1c8] = t1\n 19432: a0 = s1 + 0x7ff\n 19436: a0 = a0 + 0x61\n 19439: u64 [a0 + 0x1c0] = t0\n 19443: a0 = s1 + 0x7ff\n 19447: a0 = a0 + 0x241\n 19451: a1 = s1 + 0x7ff\n 19455: a1 = a1 + 0x221\n 19459: a2 = s1 + 0x7ff\n 19463: a2 = a2 + 0x201\n 19467: a4 = s1 + 0x7ff\n 19471: a4 = a4 + 0x61\n 19474: u64 [a4 + 0x1b8] = t2\n 19478: ra = 648, jump @820\n      : @623 [@dyn 324] (gas: 4)\n 19484: a0 = s1 + 0x7ff\n 19488: a0 = a0 + 0x1e1\n 19492: a1 = 0x40\n 19495: ra = 650, jump @2\n      : @624 [@dyn 325] (gas: 8)\n 19501: a3 = s1 + 0x7ff\n 19505: a3 = a3 + 0x61\n 19508: a5 = a3 + 0x100\n 19512: a0 = u64 [a5 + 0x98]\n 19516: a1 = u64 [a5 + 0x90]\n 19520: a2 = u64 [a5 + 0x88]\n 19524: a4 = u64 [a5 + 0x80]\n 19528: t0 = 652, jump @936\n      : @625 [@dyn 326] (gas: 1)\n 19534: jump @627 if a0 == 0\n      : @626 (gas: 1)\n 19537: jump @385\n      : @627 (gas: 14)\n 19540: a0 = u64 [s1 + 0x28]\n 19543: a2 = a3 + 0x100\n 19547: u64 [a2 + 0x60] = a0\n 19550: a0 = u64 [s1 + 0x30]\n 19553: u64 [a2 + 0x68] = a0\n 19556: a0 = u64 [s1 + 0x38]\n 19559: u64 [a2 + 0x70] = a0\n 19562: a1 = s1 + 0x7ff\n 19566: a1 = a1 + 0x1c1\n 19570: a0 = u64 [s1 + 0x40]\n 19573: u64 [a2 + 0x78] = a0\n 19576: a0 = a4\n 19578: u64 [s1 + 0xd8] = a4\n 19582: ra = 654, jump @4\n      : @628 [@dyn 327] (gas: 6)\n 19588: a0 = u64 [s1 + 0x58]\n 19591: ra = 0x290\n 19595: ecalli 5 // 'caller'\n 19597: a2 = u64 [s1 + 0x60]\n 19600: t0 = 0x292\n 19604: jump @926\n      : @629 [@dyn 328] (gas: 2)\n 19607: a2 = u64 [s1 + 0x60]\n 19610: t0 = 658, jump @926\n      : @630 [@dyn 329] (gas: 30)\n 19616: t0 = a1 | a0\n 19619: a3 = a3 >> 0x20\n 19622: a2 = reverse a2\n 19624: a1 = a2 << 0x20\n 19627: a1 = a1 | a3\n 19630: a2 = a2 >> 0x20\n 19633: a3 = u64 [0x20108]\n 19638: a0 = s1 + 0x7ff\n 19642: a0 = a0 + 0x61\n 19645: u64 [a0 + 0x158] = a3\n 19649: a3 = u64 [0x20110]\n 19654: a4 = u64 [0x20118]\n 19659: a5 = u64 [0x20120]\n 19664: u64 [a0 + 0x150] = a3\n 19668: a3 = a0 + 0x100\n 19672: u64 [a3 + 0x48] = a4\n 19675: u64 [a0 + 312] = 0\n 19679: u64 [a3 + 0x40] = a5\n 19682: u64 [a3 + 0x30] = a2\n 19685: u64 [a3 + 0x28] = a1\n 19688: a0 = s1 + 0x7ff\n 19692: a0 = a0 + 0x61\n 19695: a1 = 0x20\n 19698: a2 = s1 + 0x7ff\n 19702: a2 = a2 + 0x1a1\n 19706: a3 = s1 + 0x7ff\n 19710: a3 = a3 + 0x181\n 19714: u64 [a0 + 0x120] = t0\n 19718: a0 = u64 [s1 + 0xd8]\n 19722: ra = 660, jump @8\n      : @631 [@dyn 330] (gas: 5)\n 19728: a0 = 0\n 19730: a1 = u64 [s1 + 0x50]\n 19733: a2 = 0\n 19735: ecalli 12 // 'seal_return'\n 19737: jump @720\n      : @632 (gas: 3)\n 19740: a0 = s1 + 0x1320\n 19744: a1 = 0x40\n 19747: ra = 662, jump @2\n      : @633 [@dyn 331] (gas: 14)\n 19753: a0 = s1 + 0x1078\n 19757: a2 = a0 + 0x200\n 19761: a1 = u64 [a2 + 0xc0]\n 19765: u64 [s1 + 0xd0] = a1\n 19769: a1 = u64 [a2 + 0xb8]\n 19773: u64 [s1 + 0xc8] = a1\n 19777: a1 = u64 [a2 + 0xb0]\n 19781: u64 [s1 + 0xc0] = a1\n 19785: a0 = u64 [a2 + 0xa8]\n 19789: u64 [s1 + 0xd8] = a0\n 19793: ra = 0x298\n 19797: ecalli 11 // 'return_data_size'\n 19799: t0 = 0x29a\n 19803: jump @928\n      : @634 [@dyn 332] (gas: 1)\n 19806: t0 = 666, jump @928\n      : @635 [@dyn 333] (gas: 1)\n 19812: jump @637 if a1 == 0\n      : @636 (gas: 1)\n 19815: jump @385\n      : @637 (gas: 3)\n 19818: a2 = a0\n 19820: a0 = a0 >> 0x20\n 19823: jump @639 if a0 == 0\n      : @638 (gas: 1)\n 19826: jump @385\n      : @639 (gas: 1)\n 19829: t0 = 668, jump @951\n      : @640 [@dyn 334] (gas: 1)\n 19835: ra = 670, jump @13\n      : @641 [@dyn 335] (gas: 11)\n 19841: a1 = s1 + 0x2078\n 19845: a2 = u64 [s1 + 0xc8]\n 19849: u32 [a1 + 0x1a8] = a2\n 19853: i32 a0 = a0 + 0\n 19855: a1 = s1 + 0x2000\n 19859: i32 a1 = a1 + 0x220\n 19863: a2 = 0\n 19865: ecalli 10 // 'return_data_copy'\n 19867: a0 = s1 + 0x2078\n 19871: a0 = i32 [a0 + 0x1a8]\n 19875: jump @531\n      : @642 (gas: 3)\n 19878: a0 = s1 + 0x3c0\n 19882: a1 = 0x40\n 19885: ra = 672, jump @2\n      : @643 [@dyn 336] (gas: 13)\n 19891: a1 = s1 + 0x300\n 19895: a0 = u64 [a1 + 0xd8]\n 19899: u64 [s1 + 0xd0] = a0\n 19903: a0 = u64 [a1 + 0xd0]\n 19907: u64 [s1 + 0xc8] = a0\n 19911: a0 = u64 [a1 + 0xc8]\n 19915: u64 [s1 + 0xc0] = a0\n 19919: a0 = u64 [a1 + 0xc0]\n 19923: u64 [s1 + 0xd8] = a0\n 19927: ra = 0x2a2\n 19931: ecalli 11 // 'return_data_size'\n 19933: t0 = 0x2a4\n 19937: jump @928\n      : @644 [@dyn 337] (gas: 1)\n 19940: t0 = 676, jump @928\n      : @645 [@dyn 338] (gas: 1)\n 19946: jump @647 if a1 == 0\n      : @646 (gas: 1)\n 19949: jump @385\n      : @647 (gas: 3)\n 19952: a2 = a0\n 19954: a0 = a0 >> 0x20\n 19957: jump @649 if a0 == 0\n      : @648 (gas: 1)\n 19960: jump @385\n      : @649 (gas: 1)\n 19963: t0 = 678, jump @951\n      : @650 [@dyn 339] (gas: 1)\n 19969: ra = 680, jump @13\n      : @651 [@dyn 340] (gas: 11)\n 19975: a1 = s1 + 0x1878\n 19979: a2 = u64 [s1 + 0xc8]\n 19983: u32 [a1 + 0x568] = a2\n 19987: i32 a0 = a0 + 0\n 19989: a1 = s1 + 0x2000\n 19993: i32 a1 = a1 + 0xfffffffffffffde0\n 19997: a2 = 0\n 19999: ecalli 10 // 'return_data_copy'\n 20001: a0 = s1 + 0x1878\n 20005: a0 = i32 [a0 + 0x568]\n 20009: jump @531\n      : @652 (gas: 4)\n 20012: a0 = s1 + 0x7ff\n 20016: a0 = a0 + 0x2a1\n 20020: a1 = 0x40\n 20023: ra = 682, jump @2\n      : @653 [@dyn 341] (gas: 15)\n 20029: a0 = s1 + 0x7ff\n 20033: a0 = a0 + 0x61\n 20036: a2 = a0 + 0x200\n 20040: a1 = u64 [a2 + 0x58]\n 20043: u64 [s1 + 0xd0] = a1\n 20047: a1 = u64 [a2 + 0x50]\n 20050: u64 [s1 + 0xc8] = a1\n 20054: a1 = u64 [a2 + 0x48]\n 20057: u64 [s1 + 0xc0] = a1\n 20061: a0 = u64 [a2 + 0x40]\n 20064: u64 [s1 + 0xd8] = a0\n 20068: ra = 0x2ac\n 20072: ecalli 11 // 'return_data_size'\n 20074: t0 = 0x2ae\n 20078: jump @928\n      : @654 [@dyn 342] (gas: 1)\n 20081: t0 = 686, jump @928\n      : @655 [@dyn 343] (gas: 1)\n 20087: jump @657 if a1 == 0\n      : @656 (gas: 1)\n 20090: jump @385\n      : @657 (gas: 3)\n 20093: a2 = a0\n 20095: a0 = a0 >> 0x20\n 20098: jump @659 if a0 == 0\n      : @658 (gas: 1)\n 20101: jump @385\n      : @659 (gas: 1)\n 20104: t0 = 688, jump @951\n      : @660 [@dyn 344] (gas: 1)\n 20110: ra = 690, jump @13\n      : @661 [@dyn 345] (gas: 11)\n 20116: a1 = s1 + 0x2078\n 20120: a2 = u64 [s1 + 0xc8]\n 20124: u32 [a1 + 0x48] = a2\n 20127: i32 a0 = a0 + 0\n 20129: a1 = s1 + 0x2000\n 20133: i32 a1 = a1 + 0xc0\n 20137: a2 = 0\n 20139: ecalli 10 // 'return_data_copy'\n 20141: a0 = s1 + 0x2078\n 20145: a0 = i32 [a0 + 0x48]\n 20148: jump @531\n      : @662 (gas: 6)\n 20151: a1 = 0x201d0\n 20156: i32 a1 = a1 + 0\n 20158: a0 = 0x1\n 20161: a2 = 0\n 20163: ecalli 12 // 'seal_return'\n 20165: jump @720\n      : @663 (gas: 6)\n 20168: a1 = 0x201d0\n 20173: i32 a1 = a1 + 0\n 20175: a0 = 0x1\n 20178: a2 = 0\n 20180: ecalli 12 // 'seal_return'\n 20182: jump @720\n      : @664 (gas: 6)\n 20185: a1 = 0x201d0\n 20190: i32 a1 = a1 + 0\n 20192: a0 = 0x1\n 20195: a2 = 0\n 20197: ecalli 12 // 'seal_return'\n 20199: jump @720\n      : @665 (gas: 6)\n 20202: a1 = 0x201d0\n 20207: i32 a1 = a1 + 0\n 20209: a0 = 0x1\n 20212: a2 = 0\n 20214: ecalli 12 // 'seal_return'\n 20216: jump @720\n      : @666 (gas: 8)\n 20219: a0 = s1 + 0x1078\n 20223: u64 [a0 + 1464] = 0\n 20227: u64 [a0 + 1456] = 0\n 20231: u64 [a0 + 1448] = 0\n 20235: a2 = a0\n 20237: t0 = 0x2b4\n 20241: a0 = 0x4e487b7100000000\n 20251: fallthrough\n      : @667 [@dyn 346] (gas: 4)\n 20252: a1 = s1 + 0x1620\n 20256: u64 [a2 + 0x5c0] = a0\n 20260: a0 = 0\n 20262: ra = 694, jump @4\n      : @668 [@dyn 347] (gas: 9)\n 20268: a1 = s1 + 0x1078\n 20272: u64 [a1 + 1440] = 0\n 20276: u64 [a1 + 1432] = 0\n 20280: u64 [a1 + 1416] = 0x11\n 20285: a2 = a1\n 20287: a0 = 0x4\n 20290: a1 = s1 + 0x1600\n 20294: u64 [a2 + 1424] = 0\n 20298: ra = 696, jump @4\n      : @669 [@dyn 348] (gas: 3)\n 20304: a0 = u64 [s1 + 0x98]\n 20308: a0 = i32 [a0]\n 20310: jump @671 if a0 >u 63\n      : @670 (gas: 3)\n 20314: a1 = u64 [s1 + 0x98]\n 20318: u32 [a1 + 0] = 0x40\n 20321: fallthrough\n      : @671 (gas: 5)\n 20322: a0 = 0x1\n 20325: a2 = 0x24\n 20328: a1 = u64 [s1 + 0x68]\n 20331: ecalli 12 // 'seal_return'\n 20333: fallthrough\n      : @672 (gas: 6)\n 20334: a1 = 0x201d0\n 20339: i32 a1 = a1 + 0\n 20341: a0 = 0x1\n 20344: a2 = 0\n 20346: ecalli 12 // 'seal_return'\n 20348: jump @720\n      : @673 (gas: 6)\n 20351: a1 = 0x201d0\n 20356: i32 a1 = a1 + 0\n 20358: a0 = 0x1\n 20361: a2 = 0\n 20363: ecalli 12 // 'seal_return'\n 20365: jump @720\n      : @674 (gas: 6)\n 20368: a1 = 0x201d0\n 20373: i32 a1 = a1 + 0\n 20375: a0 = 0x1\n 20378: a2 = 0\n 20380: ecalli 12 // 'seal_return'\n 20382: jump @720\n      : @675 (gas: 6)\n 20385: a1 = 0x201d0\n 20390: i32 a1 = a1 + 0\n 20392: a0 = 0x1\n 20395: a2 = 0\n 20397: ecalli 12 // 'seal_return'\n 20399: jump @720\n      : @676 (gas: 6)\n 20402: a1 = 0x201d0\n 20407: i32 a1 = a1 + 0\n 20409: a0 = 0x1\n 20412: a2 = 0\n 20414: ecalli 12 // 'seal_return'\n 20416: jump @720\n      : @677 (gas: 6)\n 20419: a1 = 0x201d0\n 20424: i32 a1 = a1 + 0\n 20426: a0 = 0x1\n 20429: a2 = 0\n 20431: ecalli 12 // 'seal_return'\n 20433: jump @720\n      : @678 (gas: 6)\n 20436: a1 = 0x201d0\n 20441: i32 a1 = a1 + 0\n 20443: a0 = 0x1\n 20446: a2 = 0\n 20448: ecalli 12 // 'seal_return'\n 20450: jump @720\n      : @679 (gas: 6)\n 20453: a1 = 0x201d0\n 20458: i32 a1 = a1 + 0\n 20460: a0 = 0x1\n 20463: a2 = 0\n 20465: ecalli 12 // 'seal_return'\n 20467: jump @720\n      : @680 (gas: 6)\n 20470: a1 = 0x201d0\n 20475: i32 a1 = a1 + 0\n 20477: a0 = 0x1\n 20480: a2 = 0\n 20482: ecalli 12 // 'seal_return'\n 20484: jump @720\n      : @681 (gas: 1)\n 20487: jump @703 if a0 != 4076725131\n      : @682 (gas: 9)\n 20495: a0 = s1 + 0x2078\n 20499: u64 [a0 + 1088] = 0\n 20503: u64 [a0 + 1080] = 0\n 20507: u64 [a0 + 1072] = 0\n 20511: u64 [a0 + 1064] = 0\n 20515: a0 = s1 + 0x2000\n 20519: i32 a0 = a0 + 0x4a0\n 20523: ecalli 15 // 'value_transferred'\n 20525: fallthrough\n      : @683 (gas: 10)\n 20526: a3 = s1 + 0x2078\n 20530: a4 = a3 + 0x400\n 20534: a0 = u64 [a4 + 0x38]\n 20537: a1 = u64 [a4 + 0x40]\n 20540: a2 = u64 [a4 + 0x30]\n 20543: a3 = u64 [a4 + 0x28]\n 20546: a1 = a1 | a2\n 20549: a0 = a0 | a3\n 20552: a0 = a0 | a1\n 20555: jump @720 if a0 == 0\n      : @684 (gas: 6)\n 20559: a1 = 0x201d0\n 20564: i32 a1 = a1 + 0\n 20566: a0 = 0x1\n 20569: a2 = 0\n 20571: ecalli 12 // 'seal_return'\n 20573: jump @720\n      : @685 (gas: 6)\n 20576: a1 = 0x201d0\n 20581: i32 a1 = a1 + 0\n 20583: a0 = 0x1\n 20586: a2 = 0\n 20588: ecalli 12 // 'seal_return'\n 20590: jump @720\n      : @686 (gas: 6)\n 20593: a1 = 0x201d0\n 20598: i32 a1 = a1 + 0\n 20600: a0 = 0x1\n 20603: a2 = 0\n 20605: ecalli 12 // 'seal_return'\n 20607: jump @720\n      : @687 (gas: 6)\n 20610: a1 = 0x201d0\n 20615: i32 a1 = a1 + 0\n 20617: a0 = 0x1\n 20620: a2 = 0\n 20622: ecalli 12 // 'seal_return'\n 20624: jump @720\n      : @688 (gas: 6)\n 20627: a1 = 0x201d0\n 20632: i32 a1 = a1 + 0\n 20634: a0 = 0x1\n 20637: a2 = 0\n 20639: ecalli 12 // 'seal_return'\n 20641: jump @720\n      : @689 (gas: 6)\n 20644: a1 = 0x201d0\n 20649: i32 a1 = a1 + 0\n 20651: a0 = 0x1\n 20654: a2 = 0\n 20656: ecalli 12 // 'seal_return'\n 20658: jump @720\n      : @690 (gas: 8)\n 20661: a1 = s1 + 0x2078\n 20665: u64 [a1 + 640] = 0\n 20669: u64 [a1 + 632] = 0\n 20673: u64 [a1 + 624] = 0\n 20677: u64 [a1 + 616] = 0x3\n 20682: a0 = s1 + 0x22e0\n 20686: a1 = u64 [s1 + 0xd8]\n 20690: ra = 698, jump @7\n      : @691 [@dyn 349] (gas: 6)\n 20696: a1 = 0x201d0\n 20701: i32 a1 = a1 + 0\n 20703: a0 = 0\n 20705: a2 = 0\n 20707: ecalli 12 // 'seal_return'\n 20709: jump @720\n      : @692 (gas: 5)\n 20712: i32 a1 = a1 + 0\n 20714: a0 = 0\n 20716: a2 = 0\n 20718: ecalli 12 // 'seal_return'\n 20720: jump @720\n      : @693 (gas: 6)\n 20723: a1 = 0x201d0\n 20728: i32 a1 = a1 + 0\n 20730: a0 = 0x1\n 20733: a2 = 0\n 20735: ecalli 12 // 'seal_return'\n 20737: jump @720\n      : @694 (gas: 6)\n 20740: a1 = 0x201d0\n 20745: i32 a1 = a1 + 0\n 20747: a0 = 0x1\n 20750: a2 = 0\n 20752: ecalli 12 // 'seal_return'\n 20754: jump @720\n      : @695 (gas: 6)\n 20757: a1 = 0x201d0\n 20762: i32 a1 = a1 + 0\n 20764: a0 = 0x1\n 20767: a2 = 0\n 20769: ecalli 12 // 'seal_return'\n 20771: jump @720\n      : @696 (gas: 6)\n 20774: a1 = 0x201d0\n 20779: i32 a1 = a1 + 0\n 20781: a0 = 0x1\n 20784: a2 = 0\n 20786: ecalli 12 // 'seal_return'\n 20788: jump @720\n      : @697 (gas: 6)\n 20791: a1 = 0x201d0\n 20796: i32 a1 = a1 + 0\n 20798: a0 = 0x1\n 20801: a2 = 0\n 20803: ecalli 12 // 'seal_return'\n 20805: jump @720\n      : @698 (gas: 6)\n 20808: a1 = 0x201d0\n 20813: i32 a1 = a1 + 0\n 20815: a0 = 0x1\n 20818: a2 = 0\n 20820: ecalli 12 // 'seal_return'\n 20822: jump @720\n      : @699 (gas: 14)\n 20825: a1 = u64 [s1 + 0xc8]\n 20829: a1 = a1 << 0x20\n 20832: a2 = a1 >> 0x20\n 20835: u64 [a3 + 1912] = 0\n 20839: a1 = u64 [s1 + 0xd0]\n 20843: a4 = a3 + 0x700\n 20847: u64 [a4 + 0x60] = a1\n 20850: a1 = u64 [s1 + 0xd8]\n 20854: u64 [a4 + 0x68] = a1\n 20857: a1 = s1 + 0x7ff\n 20861: a1 = a1 + 0x7c1\n 20865: u64 [a4 + 0x70] = a2\n 20868: u64 [s1 + 0xd8] = a0\n 20872: ra = 700, jump @4\n      : @700 [@dyn 350] (gas: 3)\n 20878: a1 = 0x20\n 20881: a0 = u64 [s1 + 0xd8]\n 20885: ra = 702, jump @13\n      : @701 [@dyn 351] (gas: 5)\n 20891: i32 a1 = a0 + 0\n 20893: a2 = 0x20\n 20896: a0 = 0\n 20898: ecalli 12 // 'seal_return'\n 20900: jump @703\n      : @702 (gas: 4)\n 20902: a2 = 0x20\n 20905: a0 = 0\n 20907: ecalli 12 // 'seal_return'\n 20909: fallthrough\n      : @703 (gas: 1)\n 20910: jump @713 if a0 != 700225181\n      : @704 (gas: 9)\n 20918: a0 = s1 + 0x1878\n 20922: u64 [a0 + 1024] = 0\n 20926: u64 [a0 + 1016] = 0\n 20930: u64 [a0 + 1008] = 0\n 20934: u64 [a0 + 1000] = 0\n 20938: a0 = s1 + 0x2000\n 20942: i32 a0 = a0 + 0xfffffffffffffc60\n 20946: ecalli 15 // 'value_transferred'\n 20948: fallthrough\n      : @705 (gas: 10)\n 20949: a3 = s1 + 0x1878\n 20953: a4 = a3 + 0x300\n 20957: a0 = u64 [a4 + 0xf8]\n 20961: a1 = u64 [a3 + 0x400]\n 20965: a2 = u64 [a4 + 0xf0]\n 20969: a3 = u64 [a4 + 0xe8]\n 20973: a1 = a1 | a2\n 20976: a0 = a0 | a3\n 20979: a0 = a0 | a1\n 20982: jump @722 if a0 == 0\n      : @706 (gas: 6)\n 20986: a1 = 0x201d0\n 20991: i32 a1 = a1 + 0\n 20993: a0 = 0x1\n 20996: a2 = 0\n 20998: ecalli 12 // 'seal_return'\n 21000: jump @720\n      : @707 (gas: 10)\n 21003: a0 = s1 + 0x7ff\n 21007: a0 = a0 + 0x61\n 21010: u64 [a0 + 1328] = 0\n 21014: u64 [a0 + 1320] = 0\n 21018: u64 [a0 + 1312] = 0\n 21022: a2 = s1 + 0x7ff\n 21026: a2 = a2 + 0x61\n 21029: t0 = 0x2c0\n 21033: a0 = 0x4e487b7100000000\n 21043: fallthrough\n      : @708 [@dyn 352] (gas: 5)\n 21044: a1 = s1 + 0x7ff\n 21048: a1 = a1 + 0x581\n 21052: u64 [a2 + 0x538] = a0\n 21056: a0 = 0\n 21058: ra = 706, jump @4\n      : @709 [@dyn 353] (gas: 12)\n 21064: a1 = s1 + 0x7ff\n 21068: a1 = a1 + 0x61\n 21071: u64 [a1 + 1304] = 0\n 21075: u64 [a1 + 1296] = 0\n 21079: u64 [a1 + 1280] = 0x11\n 21084: a2 = s1 + 0x7ff\n 21088: a2 = a2 + 0x61\n 21091: a0 = 0x4\n 21094: a1 = s1 + 0x7ff\n 21098: a1 = a1 + 0x561\n 21102: u64 [a2 + 1288] = 0\n 21106: ra = 708, jump @4\n      : @710 [@dyn 354] (gas: 3)\n 21112: a0 = u64 [s1 + 0x48]\n 21115: a0 = i32 [a0]\n 21117: jump @712 if a0 >u 63\n      : @711 (gas: 3)\n 21121: a1 = u64 [s1 + 0x48]\n 21124: u32 [a1 + 0] = 0x40\n 21127: fallthrough\n      : @712 (gas: 5)\n 21128: a0 = 0x1\n 21131: a2 = 0x24\n 21134: a1 = u64 [s1 + 0x50]\n 21137: ecalli 12 // 'seal_return'\n 21139: fallthrough\n      : @713 (gas: 2)\n 21140: a2 = s1 + 0x1878\n 21144: jump @718 if a0 != 1901074598\n      : @714 (gas: 9)\n 21151: u64 [a2 + 1440] = 0\n 21155: u64 [a2 + 1432] = 0\n 21159: u64 [a2 + 1424] = 0\n 21163: u64 [a2 + 1416] = 0\n 21167: a0 = s1 + 0x2000\n 21171: i32 a0 = a0 + 0xfffffffffffffe00\n 21175: ra = 0x2c6\n 21179: ecalli 15 // 'value_transferred'\n 21181: fallthrough\n      : @715 [@dyn 355] (gas: 3)\n 21182: a3 = s1 + 0x1878\n 21186: a4 = a3 + 0x500\n 21190: t0 = 712, jump @953\n      : @716 [@dyn 356] (gas: 1)\n 21196: jump @727 if a0 == 0\n      : @717 (gas: 6)\n 21200: a1 = 0x201d0\n 21205: i32 a1 = a1 + 0\n 21207: a0 = 0x1\n 21210: a2 = 0\n 21212: ecalli 12 // 'seal_return'\n 21214: jump @720\n      : @718 (gas: 6)\n 21216: a1 = 0x201d0\n 21221: i32 a1 = a1 + 0\n 21223: a0 = 0x1\n 21226: a2 = 0\n 21228: ecalli 12 // 'seal_return'\n 21230: jump @720\n      : @719 (gas: 5)\n 21232: i32 a1 = a1 + 0\n 21234: a0 = 0x1\n 21237: a2 = 0\n 21239: ecalli 12 // 'seal_return'\n 21241: fallthrough\n      : @720 (gas: 3)\n 21242: a0 = u64 [s1 + 0xd8]\n 21246: a0 = i32 [a0]\n 21248: jump @724 if a0 >u 35\n      : @721 (gas: 2)\n 21252: a1 = 0x201d0\n 21257: jump @719\n      : @722 (gas: 3)\n 21259: a0 = u64 [s1 + 0xd8]\n 21263: a0 = i32 [a0]\n 21265: jump @729 if a0 >u 35\n      : @723 (gas: 2)\n 21269: a1 = 0x201d0\n 21274: jump @719\n      : @724 (gas: 5)\n 21276: a0 = s1 + 0x2000\n 21280: i32 a0 = a0 + 0x4c0\n 21284: a1 = 0x4\n 21287: ecalli 3 // 'call_data_load'\n 21289: fallthrough\n      : @725 (gas: 13)\n 21290: a0 = s1 + 0x2078\n 21294: a1 = u64 [a0 + 0x458]\n 21298: a2 = u64 [a0 + 0x460]\n 21302: a0 = 0x100000000\n 21312: a0 = a0 ^ a1\n 21315: a0 = a0 | a2\n 21318: u64 [s1 + 0xd8] = a1\n 21322: a1 = a1 >> 0x20\n 21325: a1 = a1 <u 0x1\n 21328: u64 [s1 + 0xb8] = a2\n 21332: a1 = 0 if a2 != 0\n 21334: a1 = 0 if a0 == 0\n 21336: jump @733 if a1 != 0\n      : @726 (gas: 2)\n 21339: a1 = 0x201d0\n 21344: jump @719\n      : @727 (gas: 3)\n 21346: a0 = u64 [s1 + 0xd8]\n 21350: a0 = i32 [a0]\n 21352: jump @739 if a0 >u 3\n      : @728 (gas: 2)\n 21357: a1 = 0x201d0\n 21362: jump @719\n      : @729 (gas: 6)\n 21365: a0 = s1 + 0x2000\n 21369: i32 a0 = a0 + 0xfffffffffffffc80\n 21373: a1 = 0x4\n 21376: ra = 0x2ca\n 21380: ecalli 3 // 'call_data_load'\n 21382: fallthrough\n      : @730 [@dyn 357] (gas: 4)\n 21383: a0 = s1 + 0x1878\n 21387: a1 = u64 [a0 + 0x418]\n 21391: a0 = u64 [a0 + 0x420]\n 21395: t0 = 716, jump @932\n      : @731 [@dyn 358] (gas: 1)\n 21401: jump @744 if a3 != 0\n      : @732 (gas: 2)\n 21405: a1 = 0x201d0\n 21410: jump @719\n      : @733 (gas: 10)\n 21413: a0 = s1 + 0x2078\n 21417: a1 = u64 [a0 + 0x450]\n 21421: u64 [s1 + 0xc8] = a1\n 21425: a0 = u64 [a0 + 0x448]\n 21429: u64 [s1 + 0xd0] = a0\n 21433: a0 = u64 [s1 + 0xd8]\n 21437: a0 = a0 << 0x20\n 21440: a0 = a0 >> 0x20\n 21443: u64 [s1 + 0xc0] = a0\n 21447: ra = 718, jump @912\n      : @734 [@dyn 359] (gas: 6)\n 21453: a0 = u64 [s1 + 0xc8]\n 21457: a1 = u64 [s1 + 0xd0]\n 21461: a0 = a0 | a1\n 21464: a1 = u64 [s1 + 0xc0]\n 21468: a0 = a0 | a1\n 21471: jump @755 if a0 == 0\n      : @735 (gas: 10)\n 21475: a0 = 0xffffffff\n 21485: u64 [s1 + 0xb0] = a0\n 21489: a0 = s1 + 0x2078\n 21493: u64 [a0 + 1152] = 0\n 21497: u64 [a0 + 1144] = 0\n 21501: u64 [a0 + 1136] = 0\n 21505: u64 [a0 + 1128] = 0\n 21509: a0 = s1 + 0x1c00\n 21513: a1 = s1 + 0x24e0\n 21517: ra = 720, jump @6\n      : @736 [@dyn 360] (gas: 30)\n 21523: a3 = s1 + 0x1878\n 21527: a4 = a3 + 0x300\n 21531: a1 = u64 [a4 + 0x98]\n 21535: u64 [s1 + 0xa8] = a1\n 21539: a0 = u64 [a4 + 0xa0]\n 21543: a1 = a1 >> 0x20\n 21546: a1 = a1 << 0x20\n 21549: a2 = u64 [s1 + 0xd8]\n 21553: a1 = a1 | a2\n 21556: a2 = u64 [a4 + 0x90]\n 21560: u64 [s1 + 0xd8] = a2\n 21564: a2 = u64 [s1 + 0xb8]\n 21568: a0 = a0 | a2\n 21571: a2 = u64 [a4 + 0x88]\n 21575: u64 [s1 + 0xb8] = a2\n 21579: a2 = s1 + 0x2078\n 21583: a3 = a2 + 0x400\n 21587: u64 [a3 + 0xc0] = a0\n 21591: u64 [a3 + 0xb8] = a1\n 21595: u64 [a2 + 1184] = 0\n 21599: u64 [a2 + 1176] = 0\n 21603: u64 [a2 + 1168] = 0\n 21607: u64 [a2 + 1160] = 0\n 21611: a0 = u64 [s1 + 0xc8]\n 21615: u64 [a3 + 0xb0] = a0\n 21619: a0 = u64 [s1 + 0xd0]\n 21623: u64 [a3 + 0xa8] = a0\n 21627: a0 = s1 + 0x2500\n 21631: a1 = s1 + 0x2520\n 21635: ra = 722, jump @7\n      : @737 [@dyn 361] (gas: 35)\n 21641: a0 = u64 [s1 + 0xb8]\n 21645: a0 = a0 & 0xffffffffffffffff\n 21648: a2 = u64 [s1 + 0xd8]\n 21652: a1 = a2 & 0xffffffffffffffff\n 21655: a2 = u64 [s1 + 0xb0]\n 21659: a3 = u64 [s1 + 0xa8]\n 21663: a2 = a2 & a3\n 21666: a4 = s1 + 0x1878\n 21670: u64 [a4 + 832] = 0\n 21674: a3 = u64 [s1 + 0xc0]\n 21678: a5 = a4 + 0x300\n 21682: u64 [a5 + 0x38] = a3\n 21685: a3 = u64 [s1 + 0xc8]\n 21689: u64 [a5 + 0x30] = a3\n 21692: a3 = u64 [s1 + 0xd0]\n 21696: u64 [a5 + 0x28] = a3\n 21699: u64 [a4 + 864] = 0\n 21703: u64 [a5 + 0x58] = a2\n 21706: u64 [a5 + 0x50] = a1\n 21709: a1 = u64 [0x20040]\n 21714: a2 = u64 [0x20048]\n 21719: a3 = u64 [0x20050]\n 21724: u64 [a5 + 0x48] = a0\n 21727: u64 [a5 + 0x80] = a1\n 21731: u64 [a5 + 0x78] = a2\n 21734: u64 [a5 + 0x70] = a3\n 21737: a1 = a4\n 21739: a0 = u64 [0x20058]\n 21744: a2 = s1 + 0x1be0\n 21748: a3 = s1 + 0x1bc0\n 21752: a4 = s1 + 0x1ba0\n 21756: u64 [a1 + 0x368] = a0\n 21760: a0 = 0\n 21762: a1 = 0\n 21764: ra = 724, jump @10\n      : @738 [@dyn 362] (gas: 2)\n 21770: a1 = 0x201d0\n 21775: jump @692\n      : @739 (gas: 1)\n 21778: ra = 726, jump @912\n      : @740 [@dyn 363] (gas: 8)\n 21784: a0 = s1 + 0x1878\n 21788: u64 [a0 + 1472] = 0\n 21792: u64 [a0 + 1464] = 0\n 21796: u64 [a0 + 1456] = 0\n 21800: u64 [a0 + 1448] = 0\n 21804: a0 = s1 + 0x760\n 21808: a1 = s1 + 0x1e20\n 21812: ra = 728, jump @6\n      : @741 [@dyn 364] (gas: 21)\n 21818: a1 = u64 [s1 + 0x770]\n 21822: u64 [s1 + 0xc8] = a1\n 21826: a0 = u64 [s1 + 0x760]\n 21830: u64 [s1 + 0xd8] = a0\n 21834: a0 = u64 [s1 + 0x768]\n 21838: u64 [s1 + 0xd0] = a0\n 21842: a0 = u64 [s1 + 0x778]\n 21846: a1 = a1 >> 0x20\n 21849: a1 = a1 << 0x20\n 21852: a2 = s1 + 0x1878\n 21856: u64 [a2 + 1504] = 0\n 21860: u64 [a2 + 1496] = 0\n 21864: u64 [a2 + 1488] = 0\n 21868: u64 [a2 + 1480] = 0\n 21872: u64 [a2 + 1520] = 0\n 21876: u64 [a2 + 1512] = 0\n 21880: u64 [a2 + 0x600] = a0\n 21884: u64 [a2 + 0x5f8] = a1\n 21888: a0 = s1 + 0x1e40\n 21892: a1 = s1 + 0x1e60\n 21896: ra = 730, jump @7\n      : @742 [@dyn 365] (gas: 28)\n 21902: a0 = u64 [s1 + 0xc8]\n 21906: a0 = a0 << 0x20\n 21909: a0 = a0 >> 0x20\n 21912: u64 [s1 + 1816] = 0\n 21916: u64 [s1 + 1808] = 0\n 21920: u64 [s1 + 1800] = 0\n 21924: u64 [s1 + 1792] = 0\n 21928: u64 [s1 + 1848] = 0\n 21932: a5 = s1 + 0x700\n 21936: u64 [a5 + 0x30] = a0\n 21939: a0 = u64 [s1 + 0xd0]\n 21943: u64 [a5 + 0x28] = a0\n 21946: a0 = u64 [0x20040]\n 21951: a1 = u64 [0x20048]\n 21956: a2 = u64 [0x20050]\n 21961: a3 = u64 [s1 + 0xd8]\n 21965: u64 [a5 + 0x20] = a3\n 21968: u64 [a5 + 0x58] = a0\n 21971: u64 [a5 + 0x50] = a1\n 21974: u64 [a5 + 0x48] = a2\n 21977: a0 = u64 [0x20058]\n 21982: a2 = s1 + 0x740\n 21986: a3 = s1 + 0x720\n 21990: a4 = s1 + 0x700\n 21994: u64 [a5 + 0x40] = a0\n 21997: a0 = 0\n 21999: a1 = 0\n 22001: ra = 732, jump @10\n      : @743 [@dyn 366] (gas: 2)\n 22007: a1 = 0x201d0\n 22012: jump @692\n      : @744 (gas: 10)\n 22015: a3 = s1 + 0x1878\n 22019: a2 = u64 [a3 + 0x410]\n 22023: a3 = u64 [a3 + 0x408]\n 22027: u64 [s1 + 0x140] = a3\n 22031: u64 [s1 + 0x148] = a2\n 22035: u64 [s1 + 0x150] = a1\n 22039: a1 = s1 + 0x140\n 22043: u64 [s1 + 0x158] = a0\n 22047: a0 = 0\n 22049: ra = 734, jump @4\n      : @745 [@dyn 367] (gas: 7)\n 22055: u64 [s1 + 312] = 0\n 22059: u64 [s1 + 304] = 0\n 22063: u64 [s1 + 288] = 0x4\n 22068: a0 = 0x20\n 22071: a1 = s1 + 0x120\n 22075: u64 [s1 + 296] = 0\n 22079: ra = 736, jump @4\n      : @746 [@dyn 368] (gas: 4)\n 22085: a0 = 0x201c4\n 22090: u64 [s1 + 0xd8] = a0\n 22094: a0 = i32 [0x201c4]\n 22099: jump @748 if a0 >u 63\n      : @747 (gas: 3)\n 22103: a1 = u64 [s1 + 0xd8]\n 22107: u32 [a1 + 0] = 0x40\n 22110: fallthrough\n      : @748 (gas: 14)\n 22111: a0 = sp + 0xffffffffffffffe0\n 22114: a2 = a0 & 0xffffffffffffffe0\n 22117: u64 [s1 + 0xc8] = a2\n 22121: sp = a2\n 22123: a0 = 0x201d0\n 22128: u64 [s1 + 0xd0] = a0\n 22132: i32 a0 = a0 + 0\n 22134: i32 a2 = a2 + 0\n 22136: a1 = 0x40\n 22139: ra = 0x2e2\n 22143: ecalli 8 // 'hash_keccak_256'\n 22145: a3 = u64 [s1 + 0xc8]\n 22149: t0 = 0x2e4\n 22153: jump @927\n      : @749 [@dyn 369] (gas: 2)\n 22156: a3 = u64 [s1 + 0xc8]\n 22160: t0 = 740, jump @927\n      : @750 [@dyn 370] (gas: 7)\n 22166: u64 [a5 + 0x40] = a3\n 22169: u64 [a5 + 0x38] = a2\n 22172: u64 [a5 + 0x30] = a1\n 22175: u64 [a5 + 0x28] = a0\n 22178: a0 = s1 + 0x100\n 22182: a1 = s1 + 0x1ca0\n 22186: ra = 742, jump @6\n      : @751 [@dyn 371] (gas: 12)\n 22192: a4 = s1 + 0x100\n 22196: a2 = u64 [a4]\n 22198: a0 = u64 [a4 + 0x8]\n 22201: a1 = u64 [a4 + 0x10]\n 22204: a3 = u64 [a4 + 0x18]\n 22207: u64 [s1 + 0xf8] = a3\n 22211: u64 [s1 + 0xf0] = a1\n 22215: u64 [s1 + 0xe8] = a0\n 22219: a0 = 0x80\n 22223: a1 = s1 + 0xe0\n 22227: u64 [s1 + 0xe0] = a2\n 22231: ra = 744, jump @4\n      : @752 [@dyn 372] (gas: 3)\n 22237: a0 = u64 [s1 + 0xd8]\n 22241: a0 = i32 [a0]\n 22243: jump @754 if a0 >u 159\n      : @753 (gas: 5)\n 22248: a1 = u64 [s1 + 0xd8]\n 22252: u32 [a1 + 0] = 0xa0\n 22256: a0 = u64 [s1 + 0xd0]\n 22260: i32 a1 = a0 + 0x80\n 22264: jump @702\n      : @754 (gas: 3)\n 22267: a0 = u64 [s1 + 0xd0]\n 22271: i32 a1 = a0 + 0x80\n 22275: jump @702\n      : @755 (gas: 10)\n 22278: a0 = s1 + 0x1878\n 22282: u64 [a0 + 792] = 0\n 22286: u64 [a0 + 784] = 0\n 22290: u64 [a0 + 776] = 0\n 22294: a2 = a0\n 22296: a0 = 0x1e4fbdf700000000\n 22306: a1 = s1 + 0x1b80\n 22310: u64 [a2 + 0x320] = a0\n 22314: a0 = 0\n 22316: ra = 746, jump @4\n      : @756 [@dyn 373] (gas: 9)\n 22322: a0 = s1 + 0x1878\n 22326: u64 [a0 + 768] = 0\n 22330: u64 [a0 + 760] = 0\n 22334: u64 [a0 + 752] = 0\n 22338: a2 = a0\n 22340: a0 = 0x4\n 22343: a1 = s1 + 0x1b60\n 22347: u64 [a2 + 744] = 0\n 22351: ra = 748, jump @4\n      : @757 [@dyn 374] (gas: 2)\n 22357: a1 = i32 [0x201c4]\n 22362: jump @759 if a1 >u 63\n      : @758 (gas: 2)\n 22366: u32 [0x201c4] = 0x40\n 22372: fallthrough\n      : @759 (gas: 7)\n 22373: a1 = 0x201d0\n 22378: i32 a1 = a1 + 0\n 22380: a0 = 0x1\n 22383: a2 = 0x24\n 22386: ra = 0x2ee\n 22390: ecalli 12 // 'seal_return'\n 22392: fallthrough\n      : @760 [@dyn 375] (gas: 18)\n 22393: sp = sp + 0xffffffffffffffc0\n 22396: u64 [sp + 0x38] = ra\n 22399: u64 [sp + 0x30] = s0\n 22402: u64 [sp + 0x28] = s1\n 22405: s0 = sp + 0x40\n 22408: sp = sp & 0xfffffffffffffff0\n 22411: a2 = u64 [a1 + 0x10]\n 22414: a3 = u64 [a1 + 0x18]\n 22417: a4 = u64 [a1 + 0x8]\n 22420: a1 = u64 [a1]\n 22422: a3 = a3 | a4\n 22425: a4 = a1 | a2\n 22428: a4 = a4 | a3\n 22431: a4 = a4 >> 0x20\n 22434: a2 = a2 | a3\n 22437: a2 = a2 << 0x20\n 22440: a2 = a2 | a4\n 22443: jump @764 if a2 != 0\n      : @761 (gas: 3)\n 22446: s1 = a0\n 22448: a0 = sp\n 22450: ra = 752, jump @2\n      : @762 [@dyn 376] (gas: 10)\n 22456: a0 = u64 [sp + 0x10]\n 22459: a1 = u64 [sp + 0x18]\n 22462: a2 = 0x100000000\n 22472: a2 = a2 ^ a0\n 22475: a2 = a2 | a1\n 22478: a3 = a0 >> 0x20\n 22481: a3 = a3 <u 0x1\n 22484: a3 = 0 if a1 != 0\n 22486: a3 = 0 if a2 == 0\n 22488: jump @765 if a3 == 0\n      : @763 (gas: 12)\n 22491: a2 = u64 [sp]\n 22493: a3 = u64 [sp + 0x8]\n 22496: u64 [s1] = a2\n 22498: u64 [s1 + 0x8] = a3\n 22501: u64 [s1 + 0x10] = a0\n 22504: u64 [s1 + 0x18] = a1\n 22507: sp = s0 + 0xffffffffffffffc0\n 22510: ra = u64 [sp + 0x38]\n 22513: s0 = u64 [sp + 0x30]\n 22516: s1 = u64 [sp + 0x28]\n 22519: sp = sp + 0x40\n 22522: ret\n      : @764 (gas: 1)\n 22524: trap\n      : @765 (gas: 7)\n 22525: a1 = 0x201d0\n 22530: i32 a1 = a1 + 0\n 22532: a0 = 0x1\n 22535: a2 = 0\n 22537: ra = 0x2f2\n 22541: ecalli 12 // 'seal_return'\n 22543: fallthrough\n      : @766 [@dyn 377] (gas: 23)\n 22544: sp = sp + 0xffffffffffffff10\n 22548: u64 [sp + 0xe8] = ra\n 22552: u64 [sp + 0xe0] = s0\n 22556: u64 [sp + 0xd8] = s1\n 22560: s0 = sp + 0xf0\n 22564: sp = sp & 0xfffffffffffffff0\n 22567: s1 = u64 [a1 + 0x10]\n 22570: t0 = u64 [a1 + 0x18]\n 22573: a5 = u64 [a1 + 0x8]\n 22576: a1 = u64 [a1]\n 22578: u64 [sp + 0x68] = a5\n 22581: u64 [sp + 0x58] = t0\n 22584: t1 = a5 | t0\n 22587: t0 = a1\n 22589: a5 = a1 | s1\n 22592: a5 = a5 | t1\n 22595: a5 = a5 >> 0x20\n 22598: u64 [sp + 0x60] = s1\n 22601: a1 = t1 | s1\n 22604: a1 = a1 << 0x20\n 22607: a1 = a1 | a5\n 22610: u64 [sp + 0x50] = a0\n 22613: jump @773 if a1 != 0\n      : @767 (gas: 28)\n 22617: a0 = u64 [a4 + 0x18]\n 22620: u64 [sp + 0x18] = a0\n 22623: a0 = u64 [a4 + 0x10]\n 22626: u64 [sp + 0x8] = a0\n 22629: a0 = u64 [a4 + 0x8]\n 22632: u64 [sp + 0x10] = a0\n 22635: a0 = u64 [a4]\n 22637: u64 [sp] = a0\n 22639: a0 = u64 [a3 + 0x18]\n 22642: u64 [sp + 0x48] = a0\n 22645: a0 = u64 [a3 + 0x10]\n 22648: u64 [sp + 0x40] = a0\n 22651: a0 = u64 [a3 + 0x8]\n 22654: u64 [sp + 0x38] = a0\n 22657: a0 = u64 [a3]\n 22659: u64 [sp + 0x30] = a0\n 22662: a0 = u64 [a2 + 0x18]\n 22665: a1 = u64 [a2 + 0x10]\n 22668: a3 = u64 [a2 + 0x8]\n 22671: a2 = u64 [a2]\n 22673: u64 [sp + 0xb0] = a2\n 22677: u64 [sp + 0xb8] = a3\n 22681: u64 [sp + 0xc0] = a1\n 22685: a1 = sp + 0xb0\n 22689: u64 [sp + 0xc8] = a0\n 22693: s1 = t0\n 22695: a0 = t0\n 22697: ra = 756, jump @4\n      : @768 [@dyn 378] (gas: 12)\n 22703: a0 = u64 [sp + 0x60]\n 22706: a1 = u64 [sp + 0x58]\n 22709: a2 = a0 | a1\n 22712: a0 = 0x100000000\n 22722: u64 [sp + 0x20] = a0\n 22725: a0 = 0xffffffe0\n 22735: a0 = s1 <u a0\n 22738: a1 = u64 [sp + 0x68]\n 22741: a0 = 0 if a1 != 0\n 22743: u64 [sp + 0x28] = a2\n 22746: a0 = 0 if a2 != 0\n 22748: jump @773 if a0 == 0\n      : @769 (gas: 11)\n 22752: i32 a0 = s1 + 0x20\n 22755: a1 = u64 [sp + 0x30]\n 22758: u64 [sp + 0x90] = a1\n 22762: a1 = u64 [sp + 0x38]\n 22765: u64 [sp + 0x98] = a1\n 22769: a1 = u64 [sp + 0x40]\n 22772: u64 [sp + 0xa0] = a1\n 22776: a1 = sp + 0x90\n 22780: a2 = u64 [sp + 0x48]\n 22783: u64 [sp + 0xa8] = a2\n 22787: ra = 758, jump @4\n      : @770 [@dyn 379] (gas: 8)\n 22793: a0 = u64 [sp + 0x20]\n 22796: a0 = a0 + 0xffffffffffffffc0\n 22799: a0 = s1 <u a0\n 22802: a1 = u64 [sp + 0x68]\n 22805: a0 = 0 if a1 != 0\n 22807: a1 = u64 [sp + 0x28]\n 22810: a0 = 0 if a1 != 0\n 22812: jump @773 if a0 == 0\n      : @771 (gas: 30)\n 22816: a0 = u64 [sp + 0x8]\n 22819: a1 = u64 [sp]\n 22821: a0 = a0 | a1\n 22824: a1 = u64 [sp + 0x18]\n 22827: a2 = u64 [sp + 0x10]\n 22830: a1 = a1 | a2\n 22833: a0 = a0 | a1\n 22836: a1 = a0 >u 0\n 22838: a0 = s1 + 0x60\n 22841: u64 [sp + 0x48] = a0\n 22844: a0 = a0 <u s1\n 22847: a2 = u64 [sp + 0x68]\n 22850: a3 = a2 + a0\n 22853: u64 [sp + 0x40] = a3\n 22856: a2 = a3 <u a2\n 22859: a2 = a0 if a0 == 0\n 22862: a0 = u64 [sp + 0x60]\n 22865: a2 = a2 + a0\n 22868: u64 [sp + 0x68] = a2\n 22871: a0 = a2 <u a0\n 22874: a2 = u64 [sp + 0x58]\n 22877: a0 = a0 + a2\n 22880: u64 [sp + 0x60] = a0\n 22883: i32 a0 = s1 + 0x40\n 22886: u64 [sp + 136] = 0\n 22890: u64 [sp + 128] = 0\n 22894: u64 [sp + 0x70] = a1\n 22897: a1 = sp + 0x70\n 22900: u64 [sp + 120] = 0\n 22903: ra = 760, jump @4\n      : @772 [@dyn 380] (gas: 15)\n 22909: a0 = u64 [sp + 0x50]\n 22912: a1 = u64 [sp + 0x60]\n 22915: u64 [a0 + 0x18] = a1\n 22918: a1 = u64 [sp + 0x68]\n 22921: u64 [a0 + 0x10] = a1\n 22924: a1 = u64 [sp + 0x40]\n 22927: u64 [a0 + 0x8] = a1\n 22930: a1 = u64 [sp + 0x48]\n 22933: u64 [a0] = a1\n 22935: sp = s0 + 0xffffffffffffff10\n 22939: ra = u64 [sp + 0xe8]\n 22943: s0 = u64 [sp + 0xe0]\n 22947: s1 = u64 [sp + 0xd8]\n 22951: sp = sp + 0xf0\n 22955: ret\n      : @773 (gas: 1)\n 22957: trap\n      : @774 [@dyn 381] (gas: 1)\n 22958: jump @776 if a0 == 0\n      : @775 (gas: 6)\n 22961: sp = s0 + 0xffffffffffffff20\n 22965: ra = u64 [sp + 0xd8]\n 22969: s0 = u64 [sp + 0xd0]\n 22973: s1 = u64 [sp + 0xc8]\n 22977: sp = sp + 0xe0\n 22981: ret\n      : @776 (gas: 3)\n 22983: a0 = sp + 0xa0\n 22987: a1 = 0x40\n 22990: ra = 764, jump @2\n      : @777 [@dyn 382] (gas: 1)\n 22996: t0 = 766, jump @940\n      : @778 [@dyn 383] (gas: 1)\n 23002: jump @789 if a0 != 0\n      : @779 (gas: 1)\n 23005: t0 = 768, jump @950\n      : @780 [@dyn 384] (gas: 1)\n 23011: ra = 770, jump @4\n      : @781 [@dyn 385] (gas: 1)\n 23017: t0 = 772, jump @937\n      : @782 [@dyn 386] (gas: 1)\n 23023: jump @789 if a0 == 0\n      : @783 (gas: 8)\n 23026: a0 = u64 [sp + 0x18]\n 23029: i32 a0 = a0 + 0x4\n 23032: u64 [sp + 120] = 0\n 23035: u64 [sp + 112] = 0\n 23038: u64 [sp + 96] = 0x20\n 23042: a1 = sp + 0x60\n 23045: u64 [sp + 104] = 0\n 23048: ra = 774, jump @4\n      : @784 [@dyn 387] (gas: 1)\n 23054: t0 = 776, jump @949\n      : @785 [@dyn 388] (gas: 1)\n 23060: jump @789 if a0 == 0\n      : @786 (gas: 8)\n 23063: s1 = u64 [sp + 0x18]\n 23066: i32 a0 = s1 + 0x24\n 23069: u64 [sp + 88] = 0\n 23072: u64 [sp + 80] = 0\n 23075: u64 [sp + 64] = 0x12\n 23079: a1 = sp + 0x40\n 23082: u64 [sp + 72] = 0\n 23085: ra = 778, jump @4\n      : @787 [@dyn 389] (gas: 1)\n 23091: t0 = 780, jump @945\n      : @788 [@dyn 390] (gas: 1)\n 23097: jump @790 if a0 != 0\n      : @789 (gas: 1)\n 23100: trap\n      : @790 (gas: 11)\n 23101: s1 = u64 [sp + 0x18]\n 23104: i32 a0 = s1 + 0x44\n 23107: a1 = u64 [0x20190]\n 23112: a2 = u64 [0x20198]\n 23117: u64 [sp + 0x38] = a1\n 23120: u64 [sp + 0x30] = a2\n 23123: a1 = 0x2030000000000000\n 23133: u64 [sp + 0x28] = a1\n 23136: a1 = sp + 0x20\n 23139: u64 [sp + 32] = 0\n 23142: ra = 782, jump @4\n      : @791 [@dyn 391] (gas: 3)\n 23148: a1 = 0x64\n 23151: a0 = s1\n 23153: ra = 784, jump @13\n      : @792 [@dyn 392] (gas: 6)\n 23159: i32 a1 = a0 + 0\n 23161: a0 = 0x1\n 23164: a2 = 0x64\n 23167: ra = 0x312\n 23171: ecalli 12 // 'seal_return'\n 23173: fallthrough\n      : @793 [@dyn 393] (gas: 30)\n 23174: sp = sp + 0xffffffffffffff80\n 23177: u64 [sp + 0x78] = ra\n 23180: u64 [sp + 0x70] = s0\n 23183: u64 [sp + 0x68] = s1\n 23186: s0 = sp + 0x80\n 23190: sp = sp & 0xfffffffffffffff0\n 23193: a4 = u64 [a2]\n 23195: a3 = u64 [a1]\n 23197: s1 = u64 [a2 + 0x8]\n 23200: t1 = u64 [a1 + 0x8]\n 23203: t2 = u64 [a2 + 0x10]\n 23206: a5 = u64 [a1 + 0x10]\n 23209: a2 = u64 [a2 + 0x18]\n 23212: a1 = u64 [a1 + 0x18]\n 23215: t0 = t1 ^ s1\n 23218: u64 [sp + 0x8] = s1\n 23221: s1 = t1 <u s1\n 23224: u64 [sp + 0x18] = a4\n 23227: u64 [sp + 0x10] = a3\n 23230: a3 = a3 <u a4\n 23233: u64 [sp] = a3\n 23235: s1 = a3 if t0 == 0\n 23238: a3 = a1 ^ a2\n 23241: ra = a1 <u a2\n 23244: t0 = a5 <u t2\n 23247: ra = t0 if a3 == 0\n 23250: a4 = a5 ^ t2\n 23253: a3 = a3 | a4\n 23256: ra = s1 if a3 == 0\n 23259: jump @795 if ra != 0\n      : @794 (gas: 23)\n 23262: a3 = a5 - t2\n 23265: a1 = a1 - a2\n 23268: a1 = a1 - t0\n 23271: a2 = a3 <u s1\n 23274: a1 = a1 - a2\n 23277: a3 = a3 - s1\n 23280: a2 = u64 [sp + 0x8]\n 23283: a2 = t1 - a2\n 23286: a4 = u64 [sp]\n 23288: a2 = a2 - a4\n 23291: a4 = u64 [sp + 0x18]\n 23294: a5 = u64 [sp + 0x10]\n 23297: a4 = a5 - a4\n 23300: u64 [a0] = a4\n 23302: u64 [a0 + 0x8] = a2\n 23305: u64 [a0 + 0x10] = a3\n 23308: u64 [a0 + 0x18] = a1\n 23311: sp = s0 + 0xffffffffffffff80\n 23314: ra = u64 [sp + 0x78]\n 23317: s0 = u64 [sp + 0x70]\n 23320: s1 = u64 [sp + 0x68]\n 23323: sp = sp + 0x80\n 23327: ret\n      : @795 (gas: 6)\n 23329: u64 [sp + 80] = 0\n 23332: u64 [sp + 72] = 0\n 23335: u64 [sp + 64] = 0\n 23338: t0 = 0x314\n 23342: a0 = 0x4e487b7100000000\n 23352: fallthrough\n      : @796 [@dyn 394] (gas: 4)\n 23353: a1 = sp + 0x40\n 23356: u64 [sp + 0x58] = a0\n 23359: a0 = 0\n 23361: ra = 790, jump @4\n      : @797 [@dyn 395] (gas: 7)\n 23367: u64 [sp + 56] = 0\n 23370: u64 [sp + 48] = 0\n 23373: u64 [sp + 32] = 0x11\n 23377: a0 = 0x4\n 23380: a1 = sp + 0x20\n 23383: u64 [sp + 40] = 0\n 23386: ra = 792, jump @4\n      : @798 [@dyn 396] (gas: 2)\n 23392: a1 = i32 [0x201c4]\n 23397: jump @800 if a1 >u 63\n      : @799 (gas: 2)\n 23401: u32 [0x201c4] = 0x40\n 23407: fallthrough\n      : @800 (gas: 7)\n 23408: a1 = 0x201d0\n 23413: i32 a1 = a1 + 0\n 23415: a0 = 0x1\n 23418: a2 = 0x24\n 23421: ra = 0x31a\n 23425: ecalli 12 // 'seal_return'\n 23427: fallthrough\n      : @801 [@dyn 397] (gas: 19)\n 23428: sp = sp + 0xffffffffffffff90\n 23431: u64 [sp + 0x68] = ra\n 23434: u64 [sp + 0x60] = s0\n 23437: s0 = sp + 0x70\n 23440: sp = sp & 0xfffffffffffffff0\n 23443: a3 = u64 [a0 + 0x18]\n 23446: a2 = u64 [a0 + 0x10]\n 23449: t1 = u64 [a0]\n 23451: a0 = u64 [a0 + 0x8]\n 23454: a4 = a3 >u 0\n 23456: a5 = a2 >u 0\n 23458: a5 = a4 if a3 != 0\n 23461: t0 = a0 >u 0\n 23463: a4 = t1 <u 0xffffffffffffffa0\n 23466: a4 = a4 ^ 0x1\n 23469: a4 = t0 if a0 != 0\n 23472: a1 = a2 | a3\n 23475: a4 = a5 if a1 != 0\n 23478: jump @804 if a4 != 0\n      : @802 (gas: 15)\n 23481: a1 = t1 + 0x60\n 23484: a4 = a1 <u t1\n 23487: a5 = a0 + a4\n 23490: a0 = a5 <u a0\n 23493: a0 = a4 if a4 == 0\n 23496: a0 = a0 + a2\n 23499: a2 = a0 <u a2\n 23502: a2 = a2 + a3\n 23505: u64 [sp + 0x40] = a1\n 23508: u64 [sp + 0x48] = a5\n 23511: u64 [sp + 0x50] = a0\n 23514: a0 = 0x40\n 23517: a1 = sp + a0\n 23520: u64 [sp + 0x58] = a2\n 23523: ra = 796, jump @4\n      : @803 [@dyn 398] (gas: 5)\n 23529: sp = s0 + 0xffffffffffffff90\n 23532: ra = u64 [sp + 0x68]\n 23535: s0 = u64 [sp + 0x60]\n 23538: sp = sp + 0x70\n 23541: ret\n      : @804 (gas: 6)\n 23543: u64 [sp + 48] = 0\n 23546: u64 [sp + 40] = 0\n 23549: u64 [sp + 32] = 0\n 23552: t0 = 0x31e\n 23556: a0 = 0x4e487b7100000000\n 23566: fallthrough\n      : @805 [@dyn 399] (gas: 4)\n 23567: a1 = sp + 0x20\n 23570: u64 [sp + 0x38] = a0\n 23573: a0 = 0\n 23575: ra = 800, jump @4\n      : @806 [@dyn 400] (gas: 7)\n 23581: u64 [sp + 24] = 0\n 23584: u64 [sp + 16] = 0\n 23587: u64 [sp + 0] = 0x41\n 23590: a0 = 0x4\n 23593: a1 = sp\n 23595: u64 [sp + 8] = 0\n 23598: ra = 802, jump @4\n      : @807 [@dyn 401] (gas: 2)\n 23604: a1 = i32 [0x201c4]\n 23609: jump @809 if a1 >u 63\n      : @808 (gas: 2)\n 23613: u32 [0x201c4] = 0x40\n 23619: fallthrough\n      : @809 (gas: 7)\n 23620: a1 = 0x201d0\n 23625: i32 a1 = a1 + 0\n 23627: a0 = 0x1\n 23630: a2 = 0x24\n 23633: ra = 0x324\n 23637: ecalli 12 // 'seal_return'\n 23639: fallthrough\n      : @810 [@dyn 402] (gas: 46)\n 23640: sp = sp + 0xffffffffffffff70\n 23644: u64 [sp + 0x88] = ra\n 23648: u64 [sp + 0x80] = s0\n 23652: u64 [sp + 0x78] = s1\n 23655: s0 = sp + 0x90\n 23659: sp = sp & 0xfffffffffffffff0\n 23662: t0 = a0\n 23664: a2 = u64 [a1]\n 23666: t2 = u64 [a0 + 0x8]\n 23669: a5 = u64 [a1 + 0x8]\n 23672: t1 = u64 [a0]\n 23674: a3 = a2 + 0x1f\n 23677: ra = a3 <u a2\n 23680: a2 = a5 + ra\n 23683: a3 = a3 & 0xffffffffffffffe0\n 23686: u64 [sp + 0x8] = t1\n 23689: t1 = t1 + a3\n 23692: a4 = t1 <u a3\n 23695: a3 = a2 + t2\n 23698: a3 = a3 + a4\n 23701: s1 = a3 ^ a2\n 23704: a0 = a3 <u a2\n 23707: a0 = a4 if s1 == 0\n 23710: a4 = u64 [t0 + 0x18]\n 23713: a5 = a2 <u a5\n 23716: s1 = u64 [a1 + 0x10]\n 23719: t0 = u64 [t0 + 0x10]\n 23722: a1 = u64 [a1 + 0x18]\n 23725: a5 = ra if ra == 0\n 23728: a5 = a5 + s1\n 23731: s1 = a5 <u s1\n 23734: a2 = a5 + t0\n 23737: a0 = a0 + a2\n 23740: a5 = a2 <u a5\n 23743: a2 = a0 <u a2\n 23746: a1 = a1 + a4\n 23749: a1 = a1 + s1\n 23752: a1 = a1 + a5\n 23755: a5 = a1 + a2\n 23758: a1 = a5 >u 0\n 23760: a2 = a0 >u 0\n 23762: a2 = a1 if a5 != 0\n 23765: a1 = a0 | a5\n 23768: s1 = a3 >u 0\n 23770: s1 = a2 if a1 != 0\n 23773: jump @814 if s1 != 0\n      : @811 (gas: 13)\n 23776: a1 = u64 [sp + 0x8]\n 23779: a1 = t1 <u a1\n 23782: a2 = a3 ^ t2\n 23785: s1 = a3 <u t2\n 23788: s1 = a1 if a2 == 0\n 23791: a1 = a0 <u t0\n 23794: a2 = a5 ^ a4\n 23797: a4 = a5 <u a4\n 23800: a4 = a1 if a2 == 0\n 23803: a1 = a0 ^ t0\n 23806: a1 = a1 | a2\n 23809: a4 = s1 if a1 == 0\n 23812: jump @814 if a4 != 0\n      : @812 (gas: 7)\n 23815: u64 [sp + 0x50] = t1\n 23818: u64 [sp + 0x58] = a3\n 23821: u64 [sp + 0x60] = a0\n 23824: a0 = 0x40\n 23827: a1 = sp + 0x50\n 23830: u64 [sp + 0x68] = a5\n 23833: ra = 806, jump @4\n      : @813 [@dyn 403] (gas: 6)\n 23839: sp = s0 + 0xffffffffffffff70\n 23843: ra = u64 [sp + 0x88]\n 23847: s0 = u64 [sp + 0x80]\n 23851: s1 = u64 [sp + 0x78]\n 23854: sp = sp + 0x90\n 23858: ret\n      : @814 (gas: 6)\n 23860: u64 [sp + 64] = 0\n 23863: u64 [sp + 56] = 0\n 23866: u64 [sp + 48] = 0\n 23869: t0 = 0x328\n 23873: a0 = 0x4e487b7100000000\n 23883: fallthrough\n      : @815 [@dyn 404] (gas: 4)\n 23884: a1 = sp + 0x30\n 23887: u64 [sp + 0x48] = a0\n 23890: a0 = 0\n 23892: ra = 810, jump @4\n      : @816 [@dyn 405] (gas: 7)\n 23898: u64 [sp + 40] = 0\n 23901: u64 [sp + 32] = 0\n 23904: u64 [sp + 16] = 0x41\n 23908: a0 = 0x4\n 23911: a1 = sp + 0x10\n 23914: u64 [sp + 24] = 0\n 23917: ra = 812, jump @4\n      : @817 [@dyn 406] (gas: 2)\n 23923: a1 = i32 [0x201c4]\n 23928: jump @819 if a1 >u 63\n      : @818 (gas: 2)\n 23932: u32 [0x201c4] = 0x40\n 23938: fallthrough\n      : @819 (gas: 7)\n 23939: a1 = 0x201d0\n 23944: i32 a1 = a1 + 0\n 23946: a0 = 0x1\n 23949: a2 = 0x24\n 23952: ra = 0x32e\n 23956: ecalli 12 // 'seal_return'\n 23958: fallthrough\n      : @820 [@dyn 407] (gas: 53)\n 23959: sp = sp + 0xffffffffffffff90\n 23962: u64 [sp + 0x68] = ra\n 23965: u64 [sp + 0x60] = s0\n 23968: u64 [sp + 0x58] = s1\n 23971: s0 = sp + 0x70\n 23974: sp = sp & 0xfffffffffffffff0\n 23977: a3 = a1\n 23979: t2 = u64 [a1 + 0x10]\n 23982: a1 = u64 [a1 + 0x8]\n 23985: t0 = u64 [a2 + 0x8]\n 23988: s1 = u64 [a3]\n 23990: u64 [sp] = s1\n 23992: a4 = u64 [a2]\n 23994: u64 [sp + 0x8] = a4\n 23997: ra = u64 [a2 + 0x10]\n 24000: a5 = t0 ^ a1\n 24003: u64 [sp + 0x28] = a5\n 24006: a5 = t0 <u a1\n 24009: a4 = a4 <u s1\n 24012: t1 = u64 [sp + 0x28]\n 24015: a5 = a4 if t1 == 0\n 24018: s1 = a4\n 24020: a3 = u64 [a3 + 0x18]\n 24023: u64 [sp + 0x18] = a3\n 24026: a2 = u64 [a2 + 0x18]\n 24029: u64 [sp + 0x10] = a2\n 24032: a3 = ra - t2\n 24035: a2 = a3 - a5\n 24038: u64 [sp + 0x20] = a2\n 24041: a2 = a3 <u a5\n 24044: u64 [sp + 0x28] = t2\n 24047: a4 = ra <u t2\n 24050: t2 = u64 [sp + 0x18]\n 24053: a3 = u64 [sp + 0x10]\n 24056: a3 = a3 - t2\n 24059: a3 = a3 - a4\n 24062: a3 = a3 - a2\n 24065: a2 = t0 - a1\n 24068: a2 = a2 - s1\n 24071: t0 = u64 [sp]\n 24073: a4 = u64 [sp + 0x8]\n 24076: a4 = a4 - t0\n 24079: a5 = a2 >u 0\n 24081: a4 = a4 <u 0x20\n 24084: a4 = a4 ^ 0x1\n 24087: a4 = a5 if a2 != 0\n 24090: s1 = a3 >s 0\n 24092: a2 = u64 [sp + 0x20]\n 24095: a5 = a2 >u 0\n 24097: a5 = s1 if a3 != 0\n 24100: a2 = a2 | a3\n 24103: a4 = a5 if a2 != 0\n 24106: jump @826 if a4 == 0\n      : @821 (gas: 10)\n 24109: s1 = a0\n 24111: a3 = u64 [sp + 0x28]\n 24114: a0 = t0 | a3\n 24117: a2 = a1 | t2\n 24120: a0 = a0 | a2\n 24123: a0 = a0 >> 0x20\n 24126: a2 = a2 | a3\n 24129: a2 = a2 << 0x20\n 24132: a0 = a0 | a2\n 24135: jump @825 if a0 != 0\n      : @822 (gas: 3)\n 24138: a0 = sp + 0x30\n 24141: a1 = t0\n 24143: ra = 816, jump @2\n      : @823 [@dyn 408] (gas: 9)\n 24149: a0 = u64 [sp + 0x48]\n 24152: a1 = u64 [sp + 0x40]\n 24155: a2 = u64 [sp + 0x30]\n 24158: a3 = u64 [sp + 0x38]\n 24161: a4 = a1 | a0\n 24164: a5 = a2 <u 0x2\n 24167: a5 = 0 if a3 != 0\n 24169: a5 = 0 if a4 != 0\n 24171: jump @827 if a5 == 0\n      : @824 (gas: 10)\n 24174: u64 [s1] = a2\n 24176: u64 [s1 + 0x8] = a3\n 24179: u64 [s1 + 0x10] = a1\n 24182: u64 [s1 + 0x18] = a0\n 24185: sp = s0 + 0xffffffffffffff90\n 24188: ra = u64 [sp + 0x68]\n 24191: s0 = u64 [sp + 0x60]\n 24194: s1 = u64 [sp + 0x58]\n 24197: sp = sp + 0x70\n 24200: ret\n      : @825 (gas: 1)\n 24202: trap\n      : @826 (gas: 2)\n 24203: a1 = 0x201d0\n 24208: jump @828\n      : @827 (gas: 2)\n 24210: a1 = 0x201d0\n 24215: fallthrough\n      : @828 (gas: 6)\n 24216: i32 a1 = a1 + 0\n 24218: a0 = 0x1\n 24221: a2 = 0\n 24223: ra = 0x332\n 24227: ecalli 12 // 'seal_return'\n 24229: fallthrough\n      : @829 [@dyn 409] (gas: 22)\n 24230: sp = sp + 0xffffffffffffff50\n 24234: u64 [sp + 0xa8] = ra\n 24238: u64 [sp + 0xa0] = s0\n 24242: u64 [sp + 0x98] = s1\n 24246: s0 = sp + 0xb0\n 24250: sp = sp & 0xfffffffffffffff0\n 24253: a5 = u64 [a1 + 0x10]\n 24256: a4 = u64 [a1 + 0x18]\n 24259: s1 = u64 [a1 + 0x8]\n 24262: t0 = u64 [a1]\n 24264: u64 [sp + 0x40] = a4\n 24267: u64 [sp + 0x38] = s1\n 24270: a1 = s1 | a4\n 24273: a4 = t0 | a5\n 24276: a4 = a4 | a1\n 24279: a4 = a4 >> 0x20\n 24282: u64 [sp + 0x48] = a5\n 24285: a1 = a1 | a5\n 24288: a1 = a1 << 0x20\n 24291: a1 = a1 | a4\n 24294: u64 [sp + 0x30] = a0\n 24297: jump @834 if a1 != 0\n      : @830 (gas: 21)\n 24301: s1 = t0\n 24303: a0 = u64 [a3 + 0x18]\n 24306: u64 [sp + 0x28] = a0\n 24309: a0 = u64 [a3 + 0x10]\n 24312: u64 [sp + 0x20] = a0\n 24315: a0 = u64 [a3 + 0x8]\n 24318: u64 [sp + 0x18] = a0\n 24321: a0 = u64 [a3]\n 24323: u64 [sp + 0x10] = a0\n 24326: a0 = u64 [a2 + 0x10]\n 24329: a1 = u64 [a2 + 0x8]\n 24332: a2 = u64 [a2]\n 24334: a0 = a0 << 0x20\n 24337: a0 = a0 >> 0x20\n 24340: u64 [sp + 136] = 0\n 24344: u64 [sp + 0x70] = a2\n 24347: u64 [sp + 0x78] = a1\n 24350: a1 = sp + 0x70\n 24353: u64 [sp + 0x80] = a0\n 24357: a0 = t0\n 24359: ra = 820, jump @4\n      : @831 [@dyn 410] (gas: 9)\n 24365: a2 = u64 [sp + 0x48]\n 24368: a3 = u64 [sp + 0x40]\n 24371: a0 = a2 | a3\n 24374: a1 = 0xffffffe0\n 24384: a1 = s1 <u a1\n 24387: a4 = u64 [sp + 0x38]\n 24390: a1 = 0 if a4 != 0\n 24392: a1 = 0 if a0 != 0\n 24394: jump @834 if a1 == 0\n      : @832 (gas: 23)\n 24397: a0 = s1 + 0x40\n 24400: u64 [sp + 0x8] = a0\n 24403: a0 = a0 <u s1\n 24406: a1 = a4 + a0\n 24409: u64 [sp] = a1\n 24411: a1 = a1 <u a4\n 24414: a1 = a0 if a0 == 0\n 24417: a1 = a1 + a2\n 24420: u64 [sp + 0x38] = a1\n 24423: a0 = a1 <u a2\n 24426: a0 = a0 + a3\n 24429: u64 [sp + 0x48] = a0\n 24432: i32 a0 = s1 + 0x20\n 24435: a1 = u64 [sp + 0x10]\n 24438: u64 [sp + 0x50] = a1\n 24441: a1 = u64 [sp + 0x18]\n 24444: u64 [sp + 0x58] = a1\n 24447: a1 = u64 [sp + 0x20]\n 24450: u64 [sp + 0x60] = a1\n 24453: a1 = sp + 0x50\n 24456: a2 = u64 [sp + 0x28]\n 24459: u64 [sp + 0x68] = a2\n 24462: ra = 822, jump @4\n      : @833 [@dyn 411] (gas: 15)\n 24468: a0 = u64 [sp + 0x30]\n 24471: a1 = u64 [sp + 0x38]\n 24474: u64 [a0 + 0x10] = a1\n 24477: a1 = u64 [sp]\n 24479: u64 [a0 + 0x8] = a1\n 24482: a1 = u64 [sp + 0x8]\n 24485: u64 [a0] = a1\n 24487: a1 = u64 [sp + 0x48]\n 24490: u64 [a0 + 0x18] = a1\n 24493: sp = s0 + 0xffffffffffffff50\n 24497: ra = u64 [sp + 0xa8]\n 24501: s0 = u64 [sp + 0xa0]\n 24505: s1 = u64 [sp + 0x98]\n 24509: sp = sp + 0xb0\n 24513: ret\n      : @834 (gas: 1)\n 24515: trap\n      : @835 [@dyn 412] (gas: 1)\n 24516: jump @837 if a0 == 0\n      : @836 (gas: 6)\n 24519: sp = s0 + 0xffffffffffffff20\n 24523: ra = u64 [sp + 0xd8]\n 24527: s0 = u64 [sp + 0xd0]\n 24531: s1 = u64 [sp + 0xc8]\n 24535: sp = sp + 0xe0\n 24539: ret\n      : @837 (gas: 3)\n 24541: a0 = sp + 0xa0\n 24545: a1 = 0x40\n 24548: ra = 826, jump @2\n      : @838 [@dyn 413] (gas: 1)\n 24554: t0 = 828, jump @940\n      : @839 [@dyn 414] (gas: 1)\n 24560: jump @850 if a0 != 0\n      : @840 (gas: 1)\n 24563: t0 = 830, jump @950\n      : @841 [@dyn 415] (gas: 1)\n 24569: ra = 832, jump @4\n      : @842 [@dyn 416] (gas: 1)\n 24575: t0 = 834, jump @937\n      : @843 [@dyn 417] (gas: 1)\n 24581: jump @850 if a0 == 0\n      : @844 (gas: 8)\n 24584: a0 = u64 [sp + 0x18]\n 24587: i32 a0 = a0 + 0x4\n 24590: u64 [sp + 120] = 0\n 24593: u64 [sp + 112] = 0\n 24596: u64 [sp + 104] = 0\n 24599: a1 = sp + 0x60\n 24602: u64 [sp + 96] = 0x20\n 24606: ra = 836, jump @4\n      : @845 [@dyn 418] (gas: 1)\n 24612: t0 = 838, jump @949\n      : @846 [@dyn 419] (gas: 1)\n 24618: jump @850 if a0 == 0\n      : @847 (gas: 8)\n 24621: s1 = u64 [sp + 0x18]\n 24624: i32 a0 = s1 + 0x24\n 24627: u64 [sp + 88] = 0\n 24630: u64 [sp + 80] = 0\n 24633: u64 [sp + 64] = 0x20\n 24637: a1 = sp + 0x40\n 24640: u64 [sp + 72] = 0\n 24643: ra = 840, jump @4\n      : @848 [@dyn 420] (gas: 1)\n 24649: t0 = 842, jump @945\n      : @849 [@dyn 421] (gas: 1)\n 24655: jump @851 if a0 != 0\n      : @850 (gas: 1)\n 24658: trap\n      : @851 (gas: 12)\n 24659: s1 = u64 [sp + 0x18]\n 24662: i32 a0 = s1 + 0x44\n 24665: a1 = u64 [0x201a0]\n 24670: u64 [sp + 0x38] = a1\n 24673: a1 = u64 [0x201a8]\n 24678: a2 = u64 [0x201b0]\n 24683: a3 = u64 [0x201b8]\n 24688: u64 [sp + 0x30] = a1\n 24691: u64 [sp + 0x28] = a2\n 24694: a1 = sp + 0x20\n 24697: u64 [sp + 0x20] = a3\n 24700: ra = 844, jump @4\n      : @852 [@dyn 422] (gas: 3)\n 24706: a1 = 0x64\n 24709: a0 = s1\n 24711: ra = 846, jump @13\n      : @853 [@dyn 423] (gas: 6)\n 24717: i32 a1 = a0 + 0\n 24719: a0 = 0x1\n 24722: a2 = 0x64\n 24725: ra = 0x350\n 24729: ecalli 12 // 'seal_return'\n 24731: fallthrough\n      : @854 [@dyn 424] (gas: 23)\n 24732: sp = sp + 0xffffffffffffff10\n 24736: u64 [sp + 0xe8] = ra\n 24740: u64 [sp + 0xe0] = s0\n 24744: u64 [sp + 0xd8] = s1\n 24748: s0 = sp + 0xf0\n 24752: sp = sp & 0xfffffffffffffff0\n 24755: s1 = u64 [a1 + 0x10]\n 24758: t0 = u64 [a1 + 0x18]\n 24761: a5 = u64 [a1 + 0x8]\n 24764: a1 = u64 [a1]\n 24766: u64 [sp + 0x68] = a5\n 24769: u64 [sp + 0x58] = t0\n 24772: t1 = a5 | t0\n 24775: t0 = a1\n 24777: a5 = a1 | s1\n 24780: a5 = a5 | t1\n 24783: a5 = a5 >> 0x20\n 24786: u64 [sp + 0x60] = s1\n 24789: a1 = t1 | s1\n 24792: a1 = a1 << 0x20\n 24795: a1 = a1 | a5\n 24798: u64 [sp + 0x50] = a0\n 24801: jump @861 if a1 != 0\n      : @855 (gas: 27)\n 24805: a0 = u64 [a4 + 0x18]\n 24808: u64 [sp + 0x20] = a0\n 24811: a0 = u64 [a4 + 0x10]\n 24814: u64 [sp + 0x18] = a0\n 24817: a0 = u64 [a4 + 0x8]\n 24820: u64 [sp + 0x10] = a0\n 24823: a0 = u64 [a4]\n 24825: u64 [sp + 0x8] = a0\n 24828: a0 = u64 [a3 + 0x10]\n 24831: u64 [sp + 0x30] = a0\n 24834: a0 = u64 [a3 + 0x8]\n 24837: u64 [sp + 0x38] = a0\n 24840: a0 = u64 [a3]\n 24842: u64 [sp + 0x40] = a0\n 24845: a0 = u64 [a2 + 0x10]\n 24848: a1 = u64 [a2 + 0x8]\n 24851: a2 = u64 [a2]\n 24853: a0 = a0 << 0x20\n 24856: a0 = a0 >> 0x20\n 24859: u64 [sp + 200] = 0\n 24863: u64 [sp + 0xb0] = a2\n 24867: u64 [sp + 0xb8] = a1\n 24871: a1 = sp + 0xb0\n 24875: u64 [sp + 0xc0] = a0\n 24879: s1 = t0\n 24881: a0 = t0\n 24883: ra = 850, jump @4\n      : @856 [@dyn 425] (gas: 12)\n 24889: a0 = u64 [sp + 0x60]\n 24892: a1 = u64 [sp + 0x58]\n 24895: a2 = a0 | a1\n 24898: a0 = 0x100000000\n 24908: u64 [sp + 0x28] = a0\n 24911: a0 = 0xffffffe0\n 24921: a0 = s1 <u a0\n 24924: a1 = u64 [sp + 0x68]\n 24927: a0 = 0 if a1 != 0\n 24929: u64 [sp + 0x48] = a2\n 24932: a0 = 0 if a2 != 0\n 24934: jump @861 if a0 == 0\n      : @857 (gas: 14)\n 24938: a1 = 0xffffffff\n 24948: a2 = u64 [sp + 0x30]\n 24951: a2 = a2 & a1\n 24954: a1 = u64 [sp + 0x38]\n 24957: a1 = a1 & 0xffffffffffffffff\n 24960: a3 = u64 [sp + 0x40]\n 24963: a3 = a3 & 0xffffffffffffffff\n 24966: i32 a0 = s1 + 0x20\n 24969: u64 [sp + 168] = 0\n 24973: u64 [sp + 0x90] = a3\n 24977: u64 [sp + 0x98] = a1\n 24981: a1 = sp + 0x90\n 24985: u64 [sp + 0xa0] = a2\n 24989: ra = 852, jump @4\n      : @858 [@dyn 426] (gas: 8)\n 24995: a0 = u64 [sp + 0x28]\n 24998: a0 = a0 + 0xffffffffffffffc0\n 25001: a0 = s1 <u a0\n 25004: a1 = u64 [sp + 0x68]\n 25007: a0 = 0 if a1 != 0\n 25009: a1 = u64 [sp + 0x48]\n 25012: a0 = 0 if a1 != 0\n 25014: jump @861 if a0 == 0\n      : @859 (gas: 26)\n 25018: a0 = s1 + 0x60\n 25021: u64 [sp + 0x48] = a0\n 25024: a0 = a0 <u s1\n 25027: a1 = u64 [sp + 0x68]\n 25030: a2 = a1 + a0\n 25033: u64 [sp + 0x40] = a2\n 25036: a1 = a2 <u a1\n 25039: a1 = a0 if a0 == 0\n 25042: a0 = u64 [sp + 0x60]\n 25045: a1 = a1 + a0\n 25048: u64 [sp + 0x38] = a1\n 25051: a0 = a1 <u a0\n 25054: a1 = u64 [sp + 0x58]\n 25057: a0 = a0 + a1\n 25060: u64 [sp + 0x68] = a0\n 25063: i32 a0 = s1 + 0x40\n 25066: a1 = u64 [sp + 0x8]\n 25069: u64 [sp + 0x70] = a1\n 25072: a1 = u64 [sp + 0x10]\n 25075: u64 [sp + 0x78] = a1\n 25078: a1 = u64 [sp + 0x18]\n 25081: u64 [sp + 0x80] = a1\n 25085: a1 = sp + 0x70\n 25088: a2 = u64 [sp + 0x20]\n 25091: u64 [sp + 0x88] = a2\n 25095: ra = 854, jump @4\n      : @860 [@dyn 427] (gas: 15)\n 25101: a0 = u64 [sp + 0x50]\n 25104: a1 = u64 [sp + 0x38]\n 25107: u64 [a0 + 0x10] = a1\n 25110: a1 = u64 [sp + 0x40]\n 25113: u64 [a0 + 0x8] = a1\n 25116: a1 = u64 [sp + 0x48]\n 25119: u64 [a0] = a1\n 25121: a1 = u64 [sp + 0x68]\n 25124: u64 [a0 + 0x18] = a1\n 25127: sp = s0 + 0xffffffffffffff10\n 25131: ra = u64 [sp + 0xe8]\n 25135: s0 = u64 [sp + 0xe0]\n 25139: s1 = u64 [sp + 0xd8]\n 25143: sp = sp + 0xf0\n 25147: ret\n      : @861 (gas: 1)\n 25149: trap\n      : @862 [@dyn 428] (gas: 7)\n 25150: u64 [s1 + 632] = 0\n 25154: u64 [s1 + 624] = 0\n 25158: u64 [s1 + 608] = 0x5\n 25163: a0 = 0x20\n 25166: a1 = s1 + 0x260\n 25170: u64 [s1 + 616] = 0\n 25174: ra = 858, jump @4\n      : @863 [@dyn 429] (gas: 3)\n 25180: a2 = 0x201c4\n 25185: a0 = i32 [0x201c4]\n 25190: jump @865 if a0 >u 63\n      : @864 (gas: 2)\n 25194: u32 [0x201c4] = 0x40\n 25200: fallthrough\n      : @865 (gas: 15)\n 25201: u64 [s1 + 0x50] = a2\n 25204: a0 = sp + 0xffffffffffffffe0\n 25207: a2 = a0 & 0xffffffffffffffe0\n 25210: u64 [s1 + 0xb8] = a2\n 25214: sp = a2\n 25216: a0 = 0x201d0\n 25221: i32 a0 = a0 + 0\n 25223: i32 a2 = a2 + 0\n 25225: a1 = 0x40\n 25228: u64 [s1 + 0x30] = a0\n 25231: ra = 0x35c\n 25235: ecalli 8 // 'hash_keccak_256'\n 25237: a3 = u64 [s1 + 0xb8]\n 25241: t0 = 0x35e\n 25245: jump @947\n      : @866 [@dyn 430] (gas: 2)\n 25248: a3 = u64 [s1 + 0xb8]\n 25252: t0 = 862, jump @947\n      : @867 [@dyn 431] (gas: 11)\n 25258: u64 [s1 + 0x90] = a1\n 25262: u64 [s1 + 0x2b8] = a1\n 25266: u64 [s1 + 0x98] = a0\n 25270: u64 [s1 + 0x2b0] = a0\n 25274: u64 [s1 + 0x88] = a4\n 25278: u64 [s1 + 0x2a8] = a4\n 25282: u64 [s1 + 0x80] = a5\n 25286: u64 [s1 + 0x2a0] = a5\n 25290: a0 = s1 + 0x240\n 25294: a1 = 0x40\n 25297: ra = 864, jump @2\n      : @868 [@dyn 432] (gas: 15)\n 25303: a4 = s1 + 0x200\n 25307: a0 = u64 [a4 + 0x58]\n 25310: u64 [s1 + 0xa8] = a0\n 25314: a1 = u64 [a4 + 0x50]\n 25317: u64 [s1 + 0xa0] = a1\n 25321: a3 = u64 [a4 + 0x48]\n 25324: u64 [s1 + 0xb0] = a3\n 25328: a2 = u64 [a4 + 0x40]\n 25331: u64 [s1 + 0xb8] = a2\n 25335: u64 [a4 + 0x38] = a0\n 25338: u64 [a4 + 0x30] = a1\n 25341: u64 [a4 + 0x28] = a3\n 25344: a0 = s1 + 0x220\n 25348: u64 [a4 + 0x20] = a2\n 25351: ra = 866, jump @801\n      : @869 [@dyn 433] (gas: 3)\n 25357: a0 = s1 + 0x200\n 25361: a1 = s1 + 0x2a0\n 25365: ra = 868, jump @6\n      : @870 [@dyn 434] (gas: 12)\n 25371: a0 = u64 [s1 + 0xa8]\n 25375: a1 = u64 [s1 + 0xb0]\n 25379: a0 = a0 | a1\n 25382: a2 = u64 [s1 + 0xa0]\n 25386: a1 = u64 [s1 + 0xb8]\n 25390: a1 = a1 | a2\n 25393: a1 = a1 | a0\n 25396: a1 = a1 >> 0x20\n 25399: a0 = a0 | a2\n 25402: a0 = a0 << 0x20\n 25405: a0 = a0 | a1\n 25408: jump @902 if a0 != 0\n      : @871 (gas: 16)\n 25412: a2 = u64 [s1 + 0x218]\n 25416: a3 = u64 [s1 + 0x210]\n 25420: a1 = u64 [s1 + 0x208]\n 25424: a0 = u64 [s1 + 0x200]\n 25428: u64 [s1 + 0x78] = a0\n 25431: a4 = s1 + 0x100\n 25435: u64 [a4 + 0xe0] = a0\n 25439: u64 [s1 + 0x68] = a1\n 25442: u64 [a4 + 0xe8] = a1\n 25446: u64 [s1 + 0x58] = a3\n 25449: u64 [a4 + 0xf0] = a3\n 25453: a1 = s1 + 0x1e0\n 25457: u64 [s1 + 0x70] = a2\n 25460: u64 [a4 + 0xf8] = a2\n 25464: a0 = u64 [s1 + 0xb8]\n 25468: ra = 870, jump @4\n      : @872 [@dyn 435] (gas: 20)\n 25474: a0 = u64 [s1 + 0x80]\n 25478: a0 = a0 + 0x1\n 25481: a1 = a0 <u 0x1\n 25484: a2 = u64 [s1 + 0x88]\n 25488: a1 = a1 + a2\n 25491: a2 = a0 | a1\n 25494: a2 = a2 <u 0x1\n 25497: a3 = u64 [s1 + 0x98]\n 25501: a2 = a2 + a3\n 25504: a3 = a2 <u a3\n 25507: a4 = u64 [s1 + 0x90]\n 25511: a3 = a3 + a4\n 25514: a4 = s1 + 0x200\n 25518: u64 [a4 + 0xc8] = a1\n 25522: u64 [a4 + 0xc0] = a0\n 25526: u64 [a4 + 0xd0] = a2\n 25530: u64 [a4 + 0xd8] = a3\n 25534: a0 = s1 + 0x1c0\n 25538: a1 = s1 + 0x2c0\n 25542: ra = 872, jump @6\n      : @873 [@dyn 436] (gas: 13)\n 25548: a0 = u64 [s1 + 0xa8]\n 25552: a1 = u64 [s1 + 0xa0]\n 25556: a2 = a1 | a0\n 25559: a0 = 0x100000000\n 25569: u64 [s1 + 0xa0] = a0\n 25573: a0 = 0xffffffe0\n 25583: a1 = u64 [s1 + 0xb8]\n 25587: a0 = a1 <u a0\n 25590: a1 = u64 [s1 + 0xb0]\n 25594: a0 = 0 if a1 != 0\n 25596: u64 [s1 + 0xa8] = a2\n 25600: a0 = 0 if a2 != 0\n 25602: jump @902 if a0 == 0\n      : @874 (gas: 13)\n 25606: a5 = s1 + 0x100\n 25610: a2 = u64 [a5 + 0xd8]\n 25614: a1 = u64 [a5 + 0xd0]\n 25618: a3 = u64 [a5 + 0xc8]\n 25622: a4 = u64 [a5 + 0xc0]\n 25626: a0 = u64 [s1 + 0xb8]\n 25630: i32 a0 = a0 + 0x20\n 25633: u64 [a5 + 0xa0] = a4\n 25637: u64 [a5 + 0xa8] = a3\n 25641: u64 [a5 + 0xb0] = a1\n 25645: a1 = s1 + 0x1a0\n 25649: u64 [a5 + 0xb8] = a2\n 25653: ra = 874, jump @4\n      : @875 [@dyn 437] (gas: 5)\n 25659: a1 = u64 [s1 + 0x80]\n 25663: a0 = a1 + 0x2\n 25666: a1 = a0 <u a1\n 25669: a3 = u64 [s1 + 0x88]\n 25673: t0 = 876, jump @955\n      : @876 [@dyn 438] (gas: 13)\n 25679: a1 = u64 [s1 + 0x98]\n 25683: a3 = a3 + a1\n 25686: a1 = a3 <u a1\n 25689: a4 = u64 [s1 + 0x90]\n 25693: a1 = a1 + a4\n 25696: a4 = s1 + 0x200\n 25700: u64 [a4 + 0xe8] = a2\n 25704: u64 [a4 + 0xe0] = a0\n 25708: u64 [a4 + 0xf0] = a3\n 25712: u64 [a4 + 0xf8] = a1\n 25716: a0 = s1 + 0x180\n 25720: a1 = s1 + 0x2e0\n 25724: ra = 878, jump @6\n      : @877 [@dyn 439] (gas: 9)\n 25730: a0 = u64 [s1 + 0xa0]\n 25734: a0 = a0 + 0xffffffffffffffc0\n 25737: a1 = u64 [s1 + 0xb8]\n 25741: a0 = a1 <u a0\n 25744: a1 = u64 [s1 + 0xb0]\n 25748: a0 = 0 if a1 != 0\n 25750: a1 = u64 [s1 + 0xa8]\n 25754: a0 = 0 if a1 != 0\n 25756: jump @902 if a0 == 0\n      : @878 (gas: 12)\n 25760: a0 = u64 [s1 + 0x180]\n 25764: a0 = a0 & 0xff\n 25768: u64 [s1 + 0xb0] = a0\n 25772: a1 = a0 >u 0\n 25774: a0 = u64 [s1 + 0xb8]\n 25778: i32 a0 = a0 + 0x40\n 25781: u64 [s1 + 376] = 0\n 25785: u64 [s1 + 368] = 0\n 25789: u64 [s1 + 0x160] = a1\n 25793: a1 = s1 + 0x160\n 25797: u64 [s1 + 360] = 0\n 25801: ra = 880, jump @4\n      : @879 [@dyn 440] (gas: 2)\n 25807: a0 = u64 [s1 + 0xb0]\n 25811: jump @898 if a0 == 0\n      : @880 (gas: 24)\n 25815: t1 = 0x64\n 25818: t0 = u64 [s1 + 0x78]\n 25821: a0 = t0 mulhu t1\n 25824: a4 = u64 [s1 + 0x68]\n 25827: a1 = a4 * t1\n 25830: a0 = a0 + a1\n 25833: u64 [s1 + 0x60] = a0\n 25836: a0 = a0 <u a1\n 25839: a1 = a4 mulhu t1\n 25842: a0 = a0 + a1\n 25845: a3 = u64 [s1 + 0x58]\n 25848: a1 = a3 * t1\n 25851: a1 = a1 + a0\n 25854: u64 [s1 + 0xb8] = a1\n 25858: a0 = a1 <u a0\n 25861: a1 = a3 mulhu t1\n 25864: a5 = u64 [s1 + 0x70]\n 25867: a2 = a5 * t1\n 25870: a2 = a2 + a1\n 25873: a3 = t0 | a3\n 25876: a4 = a4 | a5\n 25879: a3 = a3 | a4\n 25882: a4 = a2 + a0\n 25885: jump @882 if a3 == 0\n      : @881 (gas: 7)\n 25888: a0 = 0 if a4 != 0\n 25890: a1 = a2 <u a1\n 25893: a2 = a5 mulhu t1\n 25896: a2 = a2 >u 0\n 25898: a1 = a1 | a2\n 25901: a0 = a0 | a1\n 25904: jump @906 if a0 != 0\n      : @882 (gas: 8)\n 25908: u64 [s1 + 0x70] = a4\n 25911: u64 [s1 + 792] = 0\n 25915: u64 [s1 + 784] = 0\n 25919: u64 [s1 + 776] = 0\n 25923: u64 [s1 + 768] = 0x3\n 25928: a0 = s1 + 0x100\n 25932: a1 = s1 + 0x300\n 25936: ra = 882, jump @6\n      : @883 [@dyn 441] (gas: 8)\n 25942: a5 = u64 [s1 + 0x118]\n 25946: t0 = u64 [s1 + 0x110]\n 25950: t2 = u64 [s1 + 0x108]\n 25954: a4 = u64 [s1 + 0x100]\n 25958: a0 = t2 | a5\n 25961: a1 = a4 | t0\n 25964: a0 = a0 | a1\n 25967: jump @903 if a0 == 0\n      : @884 (gas: 75)\n 25971: a1 = u64 [s1 + 0x78]\n 25974: a1 = a1 * 0x64\n 25977: a0 = a0 <u 0x1\n 25980: a3 = u64 [s1 + 0xb8]\n 25984: a3 = a3 | a1\n 25987: ra = a1\n 25989: u64 [s1 + 0x68] = a1\n 25992: t1 = u64 [s1 + 0x60]\n 25995: a1 = u64 [s1 + 0x70]\n 25998: a2 = t1 | a1\n 26001: a2 = a2 | a3\n 26004: a2 = a2 <u 0x1\n 26007: a0 = a0 | a2\n 26010: u64 [s1 + 0xb0] = a0\n 26014: a0 = clz t0\n 26016: a0 = a0 + 0x40\n 26019: a3 = clz a5\n 26021: a3 = a0 if a5 == 0\n 26024: u64 [s1 + 0x38] = a4\n 26027: a0 = clz a4\n 26029: a0 = a0 + 0x40\n 26032: a4 = clz t2\n 26034: u64 [s1 + 0x40] = t2\n 26037: a4 = a0 if t2 == 0\n 26040: a0 = a4 + 0x80\n 26044: u64 [s1 + 0x50] = a5\n 26047: u64 [s1 + 0x48] = t0\n 26050: a2 = t0 | a5\n 26053: a3 = a0 if a2 == 0\n 26056: a4 = a0 <u a4\n 26059: a4 = 0 if a2 != 0\n 26061: t0 = u64 [s1 + 0xb8]\n 26065: a0 = clz t0\n 26067: a0 = a0 + 0x40\n 26070: a5 = clz a1\n 26072: a5 = a0 if a1 == 0\n 26075: a0 = clz ra\n 26077: a0 = a0 + 0x40\n 26080: a2 = clz t1\n 26082: a2 = a0 if t1 == 0\n 26085: a0 = a2 + 0x80\n 26089: t0 = t0 | a1\n 26092: a5 = a0 if t0 == 0\n 26095: a2 = a0 <u a2\n 26098: a2 = 0 if t0 != 0\n 26100: t0 = a4 ^ a2\n 26103: a0 = a4 <u a2\n 26106: ra = a3 <u a5\n 26109: a0 = ra if t0 == 0\n 26112: t2 = a0 <u 0x1\n 26115: t2 = t2 + 0xffffffffffffffff\n 26118: t0 = -a0\n 26120: a4 = a4 - a2\n 26123: ra = a4 - ra\n 26126: a5 = a3 - a5\n 26129: a3 = t0 >u 0\n 26131: a2 = t2 >u 0\n 26133: a2 = a3 if t2 == 0\n 26136: a4 = ra >u 0\n 26138: u64 [s1 + 0xa8] = a5\n 26142: a3 = a5 <u 0x100\n 26146: a3 = a3 ^ 0x1\n 26149: a3 = a4 if ra != 0\n 26152: a3 = a2 if a0 != 0\n 26155: a2 = u64 [s1 + 0xb0]\n 26159: a2 = a2 | a3\n 26162: a4 = a1\n 26164: a4 = 0 if a2 != 0\n 26166: a3 = u64 [s1 + 0xb8]\n 26170: a3 = 0 if a2 != 0\n 26172: a0 = t1\n 26174: a0 = 0 if a2 != 0\n 26176: a5 = u64 [s1 + 0x68]\n 26179: a5 = 0 if a2 != 0\n 26181: jump @901 if a2 != 0\n      : @885 (gas: 7)\n 26185: a1 = t1\n 26187: a2 = u64 [s1 + 0xa8]\n 26191: a2 = a2 ^ 0xff\n 26195: t1 = a2 | t0\n 26198: a2 = ra | t2\n 26201: a2 = t1 | a2\n 26204: jump @901 if a2 == 0\n      : @886 (gas: 18)\n 26208: a3 = u64 [s1 + 0xa8]\n 26212: a2 = a3 + 0x1\n 26215: u64 [s1 + 0xb0] = a2\n 26219: a0 = a2 <u 0x1\n 26222: a0 = a0 + ra\n 26225: u64 [s1 + 0x88] = a0\n 26229: a0 = a0 | a2\n 26232: a0 = a0 <u 0x1\n 26235: a0 = a0 + t0\n 26238: u64 [s1 + 0x78] = a0\n 26241: a0 = a0 <u t0\n 26244: a0 = a0 + t2\n 26247: u64 [s1 + 0x80] = a0\n 26251: a2 = 0xff - a3\n 26255: u64 [s1 + 0x90] = a2\n 26259: a2 = 0x80 - a2\n 26263: a0 = u64 [s1 + 0x68]\n 26266: ra = 884, jump @956\n      : @887 [@dyn 442] (gas: 6)\n 26272: u64 [s1 + 0xa0] = a0\n 26276: u64 [s1 + 0x98] = a1\n 26280: a0 = u64 [s1 + 0xb8]\n 26284: a1 = u64 [s1 + 0x70]\n 26287: a2 = u64 [s1 + 0x90]\n 26291: ra = 886, jump @961\n      : @888 [@dyn 443] (gas: 9)\n 26297: u64 [s1 + 0x58] = a0\n 26300: a0 = u64 [s1 + 0x98]\n 26304: a0 = a0 | a1\n 26307: u64 [s1 + 0x98] = a0\n 26311: a1 = u64 [s1 + 0xa8]\n 26315: a2 = 0x7f - a1\n 26318: a0 = u64 [s1 + 0x68]\n 26321: a1 = u64 [s1 + 0x60]\n 26324: ra = 888, jump @961\n      : @889 [@dyn 444] (gas: 18)\n 26330: a2 = u64 [s1 + 0x90]\n 26334: a3 = a2 <u 0x80\n 26338: u64 [s1 + 0xa8] = a3\n 26342: a4 = u64 [s1 + 0x98]\n 26346: a1 = a4 if a3 != 0\n 26349: a4 = u64 [s1 + 0x70]\n 26352: a1 = a4 if a2 == 0\n 26355: u64 [s1 + 0x98] = a1\n 26359: a1 = u64 [s1 + 0xa0]\n 26363: a4 = u64 [s1 + 0x58]\n 26366: a1 = a1 | a4\n 26369: a1 = a0 if a3 == 0\n 26372: a0 = u64 [s1 + 0xb8]\n 26376: a1 = a0 if a2 == 0\n 26379: u64 [s1 + 0xa0] = a1\n 26383: a0 = u64 [s1 + 0x68]\n 26386: a1 = u64 [s1 + 0x60]\n 26389: ra = 890, jump @961\n      : @890 [@dyn 445] (gas: 13)\n 26395: a5 = u64 [s1 + 0x78]\n 26398: a2 = u64 [s1 + 0x80]\n 26402: a3 = u64 [s1 + 0x88]\n 26406: a3 = a3 | a2\n 26409: a2 = u64 [s1 + 0xb0]\n 26413: a2 = a2 | a5\n 26416: a2 = a2 | a3\n 26419: a3 = u64 [s1 + 0xa8]\n 26423: a1 = 0 if a3 == 0\n 26425: u64 [s1 + 0x90] = a1\n 26429: a0 = 0 if a3 == 0\n 26431: u64 [s1 + 0xa8] = a0\n 26435: jump @899 if a2 == 0\n      : @891 (gas: 5)\n 26439: a0 = u64 [s1 + 0xb0]\n 26443: a2 = a0 + 0xffffffffffffff80\n 26446: a0 = u64 [s1 + 0xb8]\n 26450: a1 = u64 [s1 + 0x70]\n 26453: ra = 892, jump @956\n      : @892 [@dyn 446] (gas: 6)\n 26459: u64 [s1 + 0x58] = a0\n 26462: u64 [s1 + 0x28] = a1\n 26465: a0 = u64 [s1 + 0x68]\n 26468: a1 = u64 [s1 + 0x60]\n 26471: a2 = u64 [s1 + 0xb0]\n 26475: ra = 894, jump @956\n      : @893 [@dyn 447] (gas: 7)\n 26481: u64 [s1 + 0x20] = a0\n 26484: u64 [s1 + 0x30] = a1\n 26487: a1 = u64 [s1 + 0xb0]\n 26491: a2 = 0x80 - a1\n 26495: a0 = u64 [s1 + 0xb8]\n 26499: a1 = u64 [s1 + 0x70]\n 26502: ra = 896, jump @961\n      : @894 [@dyn 448] (gas: 21)\n 26508: a2 = u64 [s1 + 0x30]\n 26511: a1 = a1 | a2\n 26514: a3 = u64 [s1 + 0xb0]\n 26518: a4 = a3 <u 0x80\n 26522: u64 [s1 + 0x30] = a4\n 26525: a2 = u64 [s1 + 0x28]\n 26528: a1 = a2 if a4 == 0\n 26531: a2 = u64 [s1 + 0x60]\n 26534: a2 = a1 if a3 != 0\n 26537: u64 [s1 + 0x60] = a2\n 26540: a1 = u64 [s1 + 0x20]\n 26543: a0 = a0 | a1\n 26546: a1 = u64 [s1 + 0x58]\n 26549: a0 = a1 if a4 == 0\n 26552: a1 = u64 [s1 + 0x68]\n 26555: a1 = a0 if a3 != 0\n 26558: a2 = a3\n 26560: u64 [s1 + 0x68] = a1\n 26563: a0 = u64 [s1 + 0xb8]\n 26567: a1 = u64 [s1 + 0x70]\n 26570: ra = 898, jump @956\n      : @895 [@dyn 449] (gas: 24)\n 26576: t2 = 0\n 26578: a2 = u64 [s1 + 0x30]\n 26581: a1 = 0 if a2 == 0\n 26583: a0 = 0 if a2 == 0\n 26585: u64 [s1 + 0x70] = a0\n 26588: a2 = u64 [s1 + 0x38]\n 26591: a0 = a2 <u 0x1\n 26594: a3 = u64 [s1 + 0x40]\n 26597: a0 = a3 - a0\n 26600: u64 [s1 + 0x28] = a0\n 26603: a0 = a2 | a3\n 26606: a0 = a0 <u 0x1\n 26609: a3 = u64 [s1 + 0x48]\n 26612: a4 = a3 - a0\n 26615: u64 [s1 + 0x20] = a4\n 26618: a0 = a3 <u a0\n 26621: a3 = u64 [s1 + 0x50]\n 26624: a3 = a3 - a0\n 26627: u64 [s1 + 0x18] = a3\n 26630: a2 = a2 + 0xffffffffffffffff\n 26633: u64 [s1 + 0x10] = a2\n 26636: t1 = u64 [s1 + 0x60]\n 26639: ra = u64 [s1 + 0x68]\n 26642: fallthrough\n      : @896 (gas: 106)\n 26643: u64 [s1 + 0x58] = t2\n 26646: u64 [s1 + 96] = 0\n 26649: u64 [s1 + 48] = 0\n 26652: a4 = ra >> 0x3f\n 26655: a3 = t1 << 0x1\n 26658: t0 = a3 | a4\n 26661: a4 = ra << 0x1\n 26664: a3 = u64 [s1 + 0x98]\n 26668: a2 = a3 >> 0x3f\n 26671: a2 = a2 | a4\n 26674: u64 [s1 + 0x68] = a2\n 26677: a0 = u64 [s1 + 0x28]\n 26680: a5 = a0 ^ t0\n 26683: a4 = a0 <u t0\n 26686: a0 = u64 [s1 + 0x10]\n 26689: t2 = a0 <u a2\n 26692: t2 = a4 if a5 != 0\n 26695: a1 = a1 << 0x1\n 26698: a0 = u64 [s1 + 0x70]\n 26701: a2 = a0 >> 0x3f\n 26704: a1 = a1 | a2\n 26707: u64 [s1 + 0xb8] = a1\n 26711: a2 = t1 >> 0x3f\n 26714: a0 = a0 << 0x1\n 26717: t1 = a0 | a2\n 26720: a0 = a3 << 0x1\n 26723: a1 = u64 [s1 + 0xa0]\n 26727: a2 = a1 >> 0x3f\n 26730: a0 = a0 | a2\n 26733: a2 = a1 << 0x1\n 26736: a1 = u64 [s1 + 0x90]\n 26740: a4 = a1 >> 0x3f\n 26743: a2 = a2 | a4\n 26746: a4 = a1 << 0x1\n 26749: a5 = u64 [s1 + 0xa8]\n 26753: ra = a5 >> 0x3f\n 26756: a4 = a4 | ra\n 26759: a5 = a5 << 0x1\n 26762: a1 = u64 [s1 + 0x58]\n 26765: a1 = a1 | a5\n 26768: u64 [s1 + 0xa8] = a1\n 26772: a3 = u64 [s1 + 0x60]\n 26775: a1 = a3 | a4\n 26778: u64 [s1 + 0x90] = a1\n 26782: a1 = a3 | a2\n 26785: u64 [s1 + 0xa0] = a1\n 26789: a0 = a0 | a3\n 26792: u64 [s1 + 0x98] = a0\n 26796: a1 = u64 [s1 + 0x20]\n 26799: a0 = a1 - t1\n 26802: a0 = a0 <u t2\n 26805: a2 = a1 <u t1\n 26808: a1 = u64 [s1 + 0x18]\n 26811: a3 = u64 [s1 + 0xb8]\n 26815: a4 = a1 - a3\n 26818: a4 = a4 - a2\n 26821: a4 = a4 - a0\n 26824: a4 = a4 >>a 0x3f\n 26827: a0 = u64 [s1 + 0x38]\n 26830: a1 = a4 & a0\n 26833: u64 [s1 + 0x60] = a1\n 26836: a5 = u64 [s1 + 0x40]\n 26839: a5 = a5 & a4\n 26842: a0 = t0 ^ a5\n 26845: a2 = t0 <u a5\n 26848: t2 = u64 [s1 + 0x68]\n 26851: ra = t2 <u a1\n 26854: a2 = ra if a0 == 0\n 26857: a1 = u64 [s1 + 0x48]\n 26860: a3 = a4 & a1\n 26863: a1 = t1 - a3\n 26866: a0 = a1 - a2\n 26869: u64 [s1 + 0x70] = a0\n 26872: a0 = a1 <u a2\n 26875: a1 = t1 <u a3\n 26878: a2 = u64 [s1 + 0x50]\n 26881: a2 = a2 & a4\n 26884: a3 = u64 [s1 + 0xb8]\n 26888: a2 = a3 - a2\n 26891: a1 = a2 - a1\n 26894: a1 = a1 - a0\n 26897: a3 = t0 - a5\n 26900: t1 = a3 - ra\n 26903: a0 = u64 [s1 + 0x60]\n 26906: ra = t2 - a0\n 26909: a5 = u64 [s1 + 0xb0]\n 26913: a2 = u64 [s1 + 0x88]\n 26917: a0 = a5 | a2\n 26920: a0 = a0 <u 0x1\n 26923: a3 = u64 [s1 + 0x78]\n 26926: t2 = a3 <u a0\n 26929: a0 = a3 - a0\n 26932: a3 = a5 <u 0x1\n 26935: a2 = a2 - a3\n 26938: a3 = u64 [s1 + 0x80]\n 26942: a3 = a3 - t2\n 26945: a5 = a5 + 0xffffffffffffffff\n 26948: u64 [s1 + 0x88] = a2\n 26952: u64 [s1 + 0x80] = a3\n 26956: a2 = a2 | a3\n 26959: u64 [s1 + 0xb0] = a5\n 26963: a3 = a5 | a0\n 26966: a3 = a3 | a2\n 26969: t2 = a4 & 0x1\n 26972: u64 [s1 + 0x78] = a0\n 26975: jump @896 if a3 != 0\n      : @897 (gas: 1)\n 26979: jump @900\n      : @898 (gas: 4)\n 26981: a5 = 0\n 26983: a3 = 0\n 26985: a4 = 0\n 26987: jump @901\n      : @899 (gas: 3)\n 26989: t2 = 0\n 26991: u64 [s1 + 48] = 0\n 26994: fallthrough\n      : @900 (gas: 20)\n 26995: a3 = u64 [s1 + 0xa0]\n 26999: a0 = a3 >> 0x3f\n 27002: a1 = u64 [s1 + 0x98]\n 27006: a1 = a1 << 0x1\n 27009: t0 = a1 | a0\n 27012: a0 = u64 [s1 + 0x90]\n 27016: a1 = a0 >> 0x3f\n 27019: a3 = a3 << 0x1\n 27022: a3 = a3 | a1\n 27025: a2 = u64 [s1 + 0xa8]\n 27029: a1 = a2 >> 0x3f\n 27032: a0 = a0 << 0x1\n 27035: a5 = a2 << 0x1\n 27038: a5 = t2 | a5\n 27041: a2 = u64 [s1 + 0x30]\n 27044: a1 = a1 | a2\n 27047: a0 = a0 | a1\n 27050: a3 = a3 | a2\n 27053: a4 = a2 | t0\n 27056: fallthrough\n      : @901 (gas: 12)\n 27057: a2 = u64 [s1 + 0x8]\n 27060: u64 [a2] = a5\n 27062: u64 [a2 + 0x8] = a0\n 27065: u64 [a2 + 0x10] = a3\n 27068: u64 [a2 + 0x18] = a4\n 27071: sp = s0 + 0xfffffffffffffcc0\n 27075: a0 = sp + 0x300\n 27079: ra = u64 [a0 + 0x38]\n 27082: s0 = u64 [a0 + 0x30]\n 27085: s1 = u64 [a0 + 0x28]\n 27088: sp = sp + 0x340\n 27092: ret\n      : @902 (gas: 1)\n 27094: trap\n      : @903 (gas: 6)\n 27095: u64 [s1 + 240] = 0\n 27099: u64 [s1 + 232] = 0\n 27103: u64 [s1 + 224] = 0\n 27107: t0 = 0x384\n 27111: a0 = 0x4e487b7100000000\n 27121: fallthrough\n      : @904 [@dyn 450] (gas: 4)\n 27122: a1 = s1 + 0xe0\n 27126: u64 [s1 + 0xf8] = a0\n 27130: a0 = 0\n 27132: ra = 902, jump @4\n      : @905 [@dyn 451] (gas: 8)\n 27138: u64 [s1 + 216] = 0\n 27142: u64 [s1 + 208] = 0\n 27146: u64 [s1 + 192] = 0x12\n 27151: a0 = 0x4\n 27154: a1 = s1 + 0xc0\n 27158: u64 [s1 + 200] = 0\n 27162: ra = 0x38c\n 27166: jump @4\n      : @906 (gas: 6)\n 27169: u64 [s1 + 336] = 0\n 27173: u64 [s1 + 328] = 0\n 27177: u64 [s1 + 320] = 0\n 27181: t0 = 0x388\n 27185: a0 = 0x4e487b7100000000\n 27195: fallthrough\n      : @907 [@dyn 452] (gas: 4)\n 27196: a1 = s1 + 0x140\n 27200: u64 [s1 + 0x158] = a0\n 27204: a0 = 0\n 27206: ra = 906, jump @4\n      : @908 [@dyn 453] (gas: 7)\n 27212: u64 [s1 + 312] = 0\n 27216: u64 [s1 + 304] = 0\n 27220: u64 [s1 + 288] = 0x11\n 27225: a0 = 0x4\n 27228: a1 = s1 + 0x120\n 27232: u64 [s1 + 296] = 0\n 27236: ra = 908, jump @4\n      : @909 [@dyn 454] (gas: 3)\n 27242: a0 = u64 [s1 + 0x50]\n 27245: a0 = i32 [a0]\n 27247: jump @911 if a0 >u 63\n      : @910 (gas: 3)\n 27251: a1 = u64 [s1 + 0x50]\n 27254: u32 [a1 + 0] = 0x40\n 27257: fallthrough\n      : @911 (gas: 6)\n 27258: a0 = 0x1\n 27261: a2 = 0x24\n 27264: a1 = u64 [s1 + 0x30]\n 27267: ra = 0x38e\n 27271: ecalli 12 // 'seal_return'\n 27273: fallthrough\n      : @912 [@dyn 455] (gas: 13)\n 27274: sp = sp + 0xffffffffffffff40\n 27278: u64 [sp + 0xb8] = ra\n 27282: u64 [sp + 0xb0] = s0\n 27286: u64 [sp + 0xa8] = s1\n 27290: s0 = sp + 0xc0\n 27294: sp = sp & 0xffffffffffffffe0\n 27297: u64 [sp + 152] = 0\n 27301: u64 [sp + 144] = 0\n 27305: u64 [sp + 136] = 0\n 27309: u64 [sp + 128] = 0\n 27313: a0 = sp + 0x60\n 27316: a1 = sp + 0x80\n 27320: ra = 912, jump @6\n      : @913 [@dyn 456] (gas: 11)\n 27326: a0 = u64 [sp + 0x68]\n 27329: u64 [sp + 0x18] = a0\n 27332: a0 = u64 [sp + 0x60]\n 27335: u64 [sp + 0x10] = a0\n 27338: a0 = u32 [sp + 0x70]\n 27341: u64 [sp + 0x8] = a0\n 27344: s1 = 0x301d0\n 27349: i32 a0 = s1 + 0\n 27351: u64 [sp] = a0\n 27353: ecalli 5 // 'caller'\n 27355: fallthrough\n      : @914 (gas: 22)\n 27356: a0 = u64 [0x301d8]\n 27361: a1 = u64 [0x301d0]\n 27366: a2 = i32 [0x301e0]\n 27371: a0 = reverse a0\n 27373: a3 = a0 >> 0x20\n 27376: a1 = reverse a1\n 27378: a4 = a1 << 0x20\n 27381: a3 = a3 | a4\n 27384: a0 = a0 << 0x20\n 27387: a2 = reverse a2\n 27389: a2 = a2 >> 0x20\n 27392: a0 = a0 | a2\n 27395: a1 = a1 >> 0x20\n 27398: a2 = u64 [sp + 0x8]\n 27401: a1 = a1 ^ a2\n 27404: a2 = u64 [sp + 0x10]\n 27407: a0 = a0 ^ a2\n 27410: a0 = a0 | a1\n 27413: a1 = u64 [sp + 0x18]\n 27416: a1 = a1 ^ a3\n 27419: a0 = a0 | a1\n 27422: jump @916 if a0 != 0\n      : @915 (gas: 6)\n 27425: sp = s0 + 0xffffffffffffff40\n 27429: ra = u64 [sp + 0xb8]\n 27433: s0 = u64 [sp + 0xb0]\n 27437: s1 = u64 [sp + 0xa8]\n 27441: sp = sp + 0xc0\n 27445: ret\n      : @916 (gas: 8)\n 27447: u64 [sp + 80] = 0\n 27450: u64 [sp + 72] = 0\n 27453: u64 [sp + 64] = 0\n 27456: a0 = 0x118cdaa700000000\n 27466: a1 = sp + 0x40\n 27469: u64 [sp + 0x58] = a0\n 27472: a0 = 0\n 27474: ra = 914, jump @4\n      : @917 [@dyn 457] (gas: 22)\n 27480: a0 = u64 [sp]\n 27482: ecalli 5 // 'caller'\n 27484: a0 = u64 [s1 + 0x8]\n 27487: a1 = i32 [s1 + 0x10]\n 27490: a2 = u64 [s1]\n 27492: a0 = reverse a0\n 27494: a3 = a0 << 0x20\n 27497: a1 = reverse a1\n 27499: a1 = a1 >> 0x20\n 27502: a3 = a3 | a1\n 27505: a0 = a0 >> 0x20\n 27508: a1 = reverse a2\n 27510: a2 = a1 << 0x20\n 27513: a0 = a0 | a2\n 27516: a1 = a1 >> 0x20\n 27519: u64 [sp + 56] = 0\n 27522: u64 [sp + 0x30] = a1\n 27525: u64 [sp + 0x28] = a0\n 27528: a0 = 0x4\n 27531: a1 = sp + 0x20\n 27534: u64 [sp + 0x20] = a3\n 27537: ra = 916, jump @4\n      : @918 [@dyn 458] (gas: 2)\n 27543: a1 = i32 [0x201c4]\n 27548: jump @920 if a1 >u 63\n      : @919 (gas: 2)\n 27552: u32 [0x201c4] = 0x40\n 27558: fallthrough\n      : @920 (gas: 8)\n 27559: a1 = 0x201d0\n 27564: i32 a1 = a1 + 0\n 27566: a0 = 0x1\n 27569: a2 = 0x24\n 27572: ecalli 12 // 'seal_return'\n 27574: a0 = 0\n 27576: ra = 0x396\n 27580: jump @19\n      : @921 [export #0: 'call'] (gas: 2)\n 27583: a0 = 0\n 27585: ra = 918, jump @19\n      : @922 [@dyn 459] [export #1: 'deploy'] (gas: 2)\n 27591: a0 = 0x1\n 27594: ra = 920, jump @19\n      : @923 [@dyn 460] (gas: 14)\n 27600: a0 = u64 [a2 + 0x8]\n 27603: a1 = i32 [a2 + 0x10]\n 27606: a2 = u64 [a2]\n 27608: a0 = reverse a0\n 27610: a3 = a0 << 0x20\n 27613: a1 = reverse a1\n 27615: a1 = a1 >> 0x20\n 27618: a3 = a3 | a1\n 27621: a0 = a0 >> 0x20\n 27624: a1 = reverse a2\n 27626: a2 = a1 << 0x20\n 27629: a0 = a0 | a2\n 27632: a1 = a1 >> 0x20\n 27635: jump [t0]\n      : @924 (gas: 17)\n 27637: a2 = u64 [s1 + 0x60]\n 27640: a0 = u64 [a2 + 0x8]\n 27643: a1 = i32 [a2 + 0x10]\n 27646: a2 = u64 [a2]\n 27648: a0 = reverse a0\n 27650: a3 = a0 << 0x20\n 27653: a1 = reverse a1\n 27655: a1 = a1 >> 0x20\n 27658: a3 = a3 | a1\n 27661: a0 = a0 >> 0x20\n 27664: a1 = reverse a2\n 27666: a2 = a1 << 0x20\n 27669: a0 = a0 | a2\n 27672: a1 = a1 >> 0x20\n 27675: a2 = s1 + 0x7ff\n 27679: a2 = a2 + 0x61\n 27682: jump [t0]\n      : @925 (gas: 7)\n 27684: a4 = 0x100000000\n 27694: a0 = 0xfffffffc\n 27704: a0 = a1 <u a0\n 27707: a2 = u64 [s1 + 0xd0]\n 27711: a0 = 0 if a2 != 0\n 27713: a0 = 0 if a3 != 0\n 27715: jump [t0]\n      : @926 (gas: 8)\n 27717: a0 = u64 [a2 + 0x8]\n 27720: a1 = i32 [a2 + 0x10]\n 27723: a2 = u64 [a2]\n 27725: a3 = reverse a0\n 27727: a0 = a3 << 0x20\n 27730: a1 = reverse a1\n 27732: a1 = a1 >> 0x20\n 27735: jump [t0]\n      : @927 (gas: 11)\n 27737: a0 = u64 [a3 + 0x18]\n 27740: a1 = u64 [a3 + 0x10]\n 27743: a2 = u64 [a3 + 0x8]\n 27746: a3 = u64 [a3]\n 27748: a0 = reverse a0\n 27750: a1 = reverse a1\n 27752: a2 = reverse a2\n 27754: a3 = reverse a3\n 27756: a4 = s1 + 0x1878\n 27760: a5 = a4 + 0x400\n 27764: jump [t0]\n      : @928 (gas: 12)\n 27766: a1 = u64 [s1 + 0xd0]\n 27770: a2 = u64 [s1 + 0xc0]\n 27774: a1 = a1 | a2\n 27777: a3 = u64 [s1 + 0xc8]\n 27781: a2 = u64 [s1 + 0xd8]\n 27785: a2 = a2 | a3\n 27788: a2 = a2 | a1\n 27791: a2 = a2 >> 0x20\n 27794: a1 = a1 | a3\n 27797: a1 = a1 << 0x20\n 27800: a1 = a1 | a2\n 27803: jump [t0]\n      : @929 (gas: 8)\n 27805: a3 = u64 [s1 + 0xd8]\n 27809: a0 = 0xffffffbc\n 27819: a0 = a3 <u a0\n 27822: a1 = u64 [s1 + 0xd0]\n 27826: a0 = 0 if a1 != 0\n 27828: a1 = u64 [s1 + 0xc8]\n 27832: a0 = 0 if a1 != 0\n 27834: jump [t0]\n      : @930 (gas: 5)\n 27836: a2 = s1 + 0x7ff\n 27840: a2 = a2 + 0x61\n 27843: a0 = 0x20\n 27846: a1 = s1 + 0x7ff\n 27850: jump [t0]\n      : @931 (gas: 9)\n 27852: a3 = u64 [s1 + 0xc8]\n 27856: a2 = u64 [s1 + 0xd0]\n 27860: a1 = u64 [s1 + 0xd8]\n 27864: a0 = u64 [s1 + 0xc0]\n 27868: a0 = a0 + 0xffffffffffffffdc\n 27871: a0 = a1 <u a0\n 27874: a0 = 0 if a2 != 0\n 27876: a0 = 0 if a3 != 0\n 27878: jump [t0]\n      : @932 (gas: 8)\n 27880: a2 = 0x100000000\n 27890: a2 = a2 ^ a1\n 27893: a2 = a2 | a0\n 27896: a3 = a1 >> 0x20\n 27899: a3 = a3 <u 0x1\n 27902: a3 = 0 if a0 != 0\n 27904: a3 = 0 if a2 == 0\n 27906: jump [t0]\n      : @933 (gas: 9)\n 27908: a0 = u64 [a2 + 0x8]\n 27911: a1 = i32 [a2 + 0x10]\n 27914: a2 = u64 [a2]\n 27916: a0 = reverse a0\n 27918: a3 = a0 << 0x20\n 27921: a1 = reverse a1\n 27923: a1 = a1 >> 0x20\n 27926: a1 = a1 | a3\n 27929: jump [t0]\n      : @934 (gas: 11)\n 27931: a3 = u64 [s1 + 0xd8]\n 27935: a0 = u64 [a3 + 0x18]\n 27938: a1 = u64 [a3 + 0x10]\n 27941: a2 = u64 [a3 + 0x8]\n 27944: a3 = u64 [a3]\n 27946: a0 = reverse a0\n 27948: a1 = reverse a1\n 27950: a2 = reverse a2\n 27952: a3 = reverse a3\n 27954: a4 = s1 + 0x1878\n 27958: jump [t0]\n      : @935 (gas: 5)\n 27960: a1 = u64 [s1 + 0xd0]\n 27964: a0 = 0 if a1 != 0\n 27966: a1 = u64 [s1 + 0xc8]\n 27970: a0 = 0 if a1 != 0\n 27972: jump [t0]\n      : @936 (gas: 8)\n 27974: a0 = a0 | a2\n 27977: a2 = a4 | a1\n 27980: a2 = a2 | a0\n 27983: a2 = a2 >> 0x20\n 27986: a0 = a0 | a1\n 27989: a0 = a0 << 0x20\n 27992: a0 = a0 | a2\n 27995: jump [t0]\n      : @937 (gas: 11)\n 27997: a2 = u64 [sp + 0x8]\n 28000: a2 = a2 | s1\n 28003: s1 = 0x100000000\n 28013: a0 = 0xfffffffc\n 28023: a1 = u64 [sp + 0x18]\n 28026: a0 = a1 <u a0\n 28029: a1 = u64 [sp + 0x10]\n 28032: a0 = 0 if a1 != 0\n 28034: u64 [sp + 0x8] = a2\n 28037: a0 = 0 if a2 != 0\n 28039: jump [t0]\n      : @938 (gas: 7)\n 28041: a2 = a2 >> 0x20\n 28044: u64 [a3 + 0x8] = a0\n 28047: u64 [a3] = a1\n 28049: u32 [a3 + 0x10] = a2\n 28052: a0 = 0x2078\n 28056: a2 = s1 + a0\n 28059: jump [t0]\n      : @939 (gas: 8)\n 28061: a2 = a3 | a4\n 28064: a1 = a0 | a5\n 28067: a1 = a1 | a2\n 28070: a1 = a1 >> 0x20\n 28073: a2 = a2 | a5\n 28076: a2 = a2 << 0x20\n 28079: a1 = a1 | a2\n 28082: jump [t0]\n      : @940 (gas: 15)\n 28084: a2 = u64 [sp + 0xb8]\n 28088: s1 = u64 [sp + 0xb0]\n 28092: a0 = u64 [sp + 0xa8]\n 28096: a1 = u64 [sp + 0xa0]\n 28100: u64 [sp + 0x10] = a0\n 28103: u64 [sp + 0x8] = a2\n 28106: a0 = a0 | a2\n 28109: u64 [sp + 0x18] = a1\n 28112: a1 = a1 | s1\n 28115: a1 = a1 | a0\n 28118: a1 = a1 >> 0x20\n 28121: a0 = a0 | s1\n 28124: a0 = a0 << 0x20\n 28127: a0 = a0 | a1\n 28130: jump [t0]\n      : @941 (gas: 14)\n 28132: sp = sp + 0xffffffffffffff20\n 28136: u64 [sp + 0xd8] = ra\n 28140: u64 [sp + 0xd0] = s0\n 28144: u64 [sp + 0xc8] = s1\n 28148: s0 = sp + 0xe0\n 28152: sp = sp & 0xfffffffffffffff0\n 28155: a1 = u64 [a0 + 0x10]\n 28158: a2 = u64 [a0 + 0x18]\n 28161: a3 = u64 [a0 + 0x8]\n 28164: a0 = u64 [a0]\n 28166: a2 = a2 | a3\n 28169: a0 = a0 | a1\n 28172: a0 = a0 | a2\n 28175: jump [t0]\n      : @942 (gas: 11)\n 28177: a2 = a2 - a3\n 28180: a3 = a4 <u a5\n 28183: a2 = a2 - a3\n 28186: u64 [s1 + 0x60] = a2\n 28189: a4 = a4 - a5\n 28192: u64 [s1 + 0x58] = a4\n 28195: a0 = a0 - a1\n 28198: a0 = a0 - t2\n 28201: u64 [s1 + 0x50] = a0\n 28204: a0 = t1 - ra\n 28207: jump [t0]\n      : @943 (gas: 6)\n 28209: a0 = a1 <u a0\n 28212: a2 = u64 [s1 + 0xd0]\n 28216: a0 = 0 if a2 != 0\n 28218: a2 = u64 [s1 + 0xc8]\n 28222: a0 = 0 if a2 != 0\n 28224: jump [t0]\n      : @944 (gas: 9)\n 28226: a4 = u64 [s1 + 0xc8]\n 28230: a3 = u64 [s1 + 0xd0]\n 28234: a1 = u64 [s1 + 0xd8]\n 28238: a0 = u64 [s1 + 0xc0]\n 28242: a0 = a0 + 0xffffffffffffffdc\n 28245: a0 = a1 <u a0\n 28248: a0 = 0 if a3 != 0\n 28250: a0 = 0 if a4 != 0\n 28252: jump [t0]\n      : @945 (gas: 7)\n 28254: a0 = 0xffffffbc\n 28264: a0 = s1 <u a0\n 28267: a1 = u64 [sp + 0x10]\n 28270: a0 = 0 if a1 != 0\n 28272: a1 = u64 [sp + 0x8]\n 28275: a0 = 0 if a1 != 0\n 28277: jump [t0]\n      : @946 (gas: 9)\n 28279: a0 = u64 [a3 + 0x18]\n 28282: a1 = u64 [a3 + 0x10]\n 28285: a2 = u64 [a3 + 0x8]\n 28288: a3 = u64 [a3]\n 28290: a0 = reverse a0\n 28292: a4 = reverse a1\n 28294: a2 = reverse a2\n 28296: a3 = reverse a3\n 28298: jump [t0]\n      : @947 (gas: 9)\n 28300: a0 = u64 [a3 + 0x18]\n 28303: a1 = u64 [a3 + 0x10]\n 28306: a2 = u64 [a3 + 0x8]\n 28309: a3 = u64 [a3]\n 28311: a5 = reverse a0\n 28313: a4 = reverse a1\n 28315: a0 = reverse a2\n 28317: a1 = reverse a3\n 28319: jump [t0]\n      : @948 (gas: 8)\n 28321: a4 = a4 | a2\n 28324: a2 = a0 | a1\n 28327: a2 = a2 | a4\n 28330: a2 = a2 >> 0x20\n 28333: a1 = a1 | a4\n 28336: a1 = a1 << 0x20\n 28339: a1 = a1 | a2\n 28342: jump [t0]\n      : @949 (gas: 8)\n 28344: a0 = s1 + 0xffffffffffffffdc\n 28347: a1 = u64 [sp + 0x18]\n 28350: a0 = a1 <u a0\n 28353: a1 = u64 [sp + 0x10]\n 28356: a0 = 0 if a1 != 0\n 28358: a1 = u64 [sp + 0x8]\n 28361: a0 = 0 if a1 != 0\n 28363: jump [t0]\n      : @950 (gas: 8)\n 28365: u64 [sp + 144] = 0\n 28369: u64 [sp + 136] = 0\n 28373: u64 [sp + 128] = 0\n 28377: a0 = 0x8c379a000000000\n 28387: a1 = sp + 0x80\n 28391: u64 [sp + 0x98] = a0\n 28395: a0 = u64 [sp + 0x18]\n 28398: jump [t0]\n      : @951 (gas: 6)\n 28400: i32 a0 = a2 + 0\n 28402: u64 [s1 + 0xd0] = a0\n 28406: a0 = u64 [s1 + 0xd8]\n 28410: a1 = a2\n 28412: u64 [s1 + 0xc8] = a2\n 28416: jump [t0]\n      : @952 (gas: 8)\n 28418: a0 = sp + 0xffffffffffffffe0\n 28421: a0 = a0 & 0xffffffffffffffe0\n 28424: u64 [s1 + 0xd8] = a0\n 28428: sp = a0\n 28430: i32 a2 = a0 + 0\n 28432: a1 = 0x40\n 28435: a0 = u64 [s1 + 0x50]\n 28438: jump [t0]\n      : @953 (gas: 8)\n 28440: a0 = u64 [a4 + 0x98]\n 28444: a1 = u64 [a4 + 0xa0]\n 28448: a2 = u64 [a4 + 0x90]\n 28452: a3 = u64 [a4 + 0x88]\n 28456: a1 = a1 | a2\n 28459: a0 = a0 | a3\n 28462: a0 = a0 | a1\n 28465: jump [t0]\n      : @954 (gas: 4)\n 28467: i32 a0 = a1 + 0x4\n 28470: a1 = 0x1078\n 28474: a2 = s1 + a1\n 28477: jump [t0]\n      : @955 (gas: 4)\n 28479: a2 = a3 + a1\n 28482: a3 = a2 <u a3\n 28485: a3 = a1 if a1 == 0\n 28488: jump [t0]\n      : @956 (gas: 2)\n 28490: a3 = a2 & 0x40\n 28493: jump @960 if a3 != 0\n      : @957 (gas: 1)\n 28496: jump @959 if a2 == 0\n      : @958 (gas: 6)\n 28499: i32 a3 = 0x40 - a2\n 28502: a3 = a1 << a3\n 28505: a1 = a1 >> a2\n 28508: a0 = a0 >> a2\n 28511: a0 = a0 | a3\n 28514: ret\n      : @959 (gas: 1)\n 28516: ret\n      : @960 (gas: 4)\n 28518: a0 = a2 + 0xffffffffffffffc0\n 28521: a0 = a1 >> a0\n 28524: a1 = 0\n 28526: ret\n      : @961 (gas: 2)\n 28528: a3 = a2 & 0x40\n 28531: jump @965 if a3 != 0\n      : @962 (gas: 1)\n 28534: jump @964 if a2 == 0\n      : @963 (gas: 6)\n 28537: i32 a3 = 0x40 - a2\n 28540: a3 = a0 >> a3\n 28543: a0 = a0 << a2\n 28546: a1 = a1 << a2\n 28549: a1 = a1 | a3\n 28552: ret\n      : @964 (gas: 1)\n 28554: ret\n      : @965 (gas: 4)\n 28556: a1 = a2 + 0xffffffffffffffc0\n 28559: a1 = a0 << a1\n 28562: a0 = 0\n 28564: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "collateralBalances(address)": "29bc969d",
              "collateralFactor()": "df011c41",
              "collateralToken()": "b2016bd4",
              "depositCollateral(uint256)": "bad4a01f",
              "getLoanDetails(address)": "e8a7da8e",
              "lendingToken()": "aaaca558",
              "loans(address)": "73b4086b",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "repayLoan(uint256)": "ab7b1c89",
              "setCollateralFactor(uint256)": "b5c22157",
              "takeLoan(uint256)": "8c803fc2",
              "transferOwnership(address)": "f2fde38b",
              "withdrawCollateral(uint256)": "6112fe2e"
            }
          },
          "irOptimized": "/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 5:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"contracts/LendingBorrowing.sol\"\nobject \"LendingBorrowing_1349\" {\n    code {\n        {\n            /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"LendingBorrowing_1349\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n            let value0 := abi_decode_contract_IERC20_fromMemory(_1)\n            let value1 := abi_decode_contract_IERC20_fromMemory(add(_1, 32))\n            let value := mload(add(_1, 64))\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 6:1784:1794  \"msg.sender\" */ caller())\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                mstore(/** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ 4, /** @src -1:-1:-1 */ 0)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 36)\n            }\n            let _2 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ or(and(_2, not(sub(shl(160, 1), 1))), /** @src 6:1784:1794  \"msg.sender\" */ caller()))\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _3 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ and(_2, sub(shl(160, 1), 1)), /** @src 6:1784:1794  \"msg.sender\" */ caller())\n            /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n            if /** @src 6:1861:1885  \"_collateralFactor <= 100\" */ gt(value, /** @src 6:1882:1885  \"100\" */ 0x64)\n            /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n            {\n                mstore(_3, shl(229, 4594637))\n                mstore(add(_3, 4), 32)\n                mstore(add(_3, 36), 33)\n                mstore(add(_3, 68), \"Collatereal Factor must be <= 10\")\n                mstore(add(_3, /** @src 6:1882:1885  \"100\" */ 0x64), /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ \"0\")\n                revert(_3, 132)\n            }\n            sstore(1, or(and(sload(1), not(sub(shl(160, 1), 1))), and(/** @src 6:1952:1977  \"address(_collateralToken)\" */ value0, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1))))\n            sstore(/** @src 6:1988:2025  \"lendingToken = address(_lendingToken)\" */ 0x02, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ or(and(sload(/** @src 6:1988:2025  \"lendingToken = address(_lendingToken)\" */ 0x02), /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ not(sub(shl(160, 1), 1))), and(/** @src 6:2003:2025  \"address(_lendingToken)\" */ value1, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1))))\n            sstore(/** @src 6:2036:2072  \"collateralFactor = _collateralFactor\" */ 0x03, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ value)\n            let _4 := mload(64)\n            let _5 := datasize(\"LendingBorrowing_1349_deployed\")\n            codecopy(_4, dataoffset(\"LendingBorrowing_1349_deployed\"), _5)\n            return(_4, _5)\n        }\n        function abi_decode_contract_IERC20_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 5:\"@openzeppelin/contracts/utils/Context.sol\", 6:\"contracts/LendingBorrowing.sol\"\n    object \"LendingBorrowing_1349_deployed\" {\n        code {\n            {\n                /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x29bc969d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _2 := and(value, sub(shl(160, 1), 1))\n                        if iszero(eq(value, _2)) { revert(0, 0) }\n                        mstore(0, _2)\n                        mstore(32, 4)\n                        mstore(_1, sload(keccak256(0, 64)))\n                        return(_1, 32)\n                    }\n                    case 0x6112fe2e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_1 := calldataload(4)\n                        /// @src 6:2823:2865  \"require(_amount > 0, \\\"Amount must be > 0\\\")\"\n                        require_helper_stringliteral_01c2(/** @src 6:2831:2842  \"_amount > 0\" */ iszero(iszero(value_1)))\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(0, /** @src 6:2903:2913  \"msg.sender\" */ caller())\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, 4)\n                        if /** @src 6:2884:2925  \"collateralBalances[msg.sender] >= _amount\" */ lt(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ sload(keccak256(0, 64)), /** @src 6:2884:2925  \"collateralBalances[msg.sender] >= _amount\" */ value_1)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 23)\n                            mstore(add(memPtr, 68), \"Insufficient collateral\")\n                            revert(memPtr, 100)\n                        }\n                        mstore(0, /** @src 6:2903:2913  \"msg.sender\" */ caller())\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, 4)\n                        let _3 := sload(keccak256(0, 64))\n                        if /** @src 6:3075:3099  \"_amount <= withdrawLimit\" */ gt(value_1, /** @src 6:2988:3056  \"collateralBalances[msg.sender] - _loanRequiredCollateral(msg.sender)\" */ checked_sub_uint256(_3, /** @src 6:3021:3056  \"_loanRequiredCollateral(msg.sender)\" */ fun_loanRequiredCollateral(/** @src 6:2903:2913  \"msg.sender\" */ caller())))\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 24)\n                            mstore(add(memPtr_1, 68), \"Cant withdraw collateral\")\n                            revert(memPtr_1, 100)\n                        }\n                        mstore(0, /** @src 6:2903:2913  \"msg.sender\" */ caller())\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, 4)\n                        let dataSlot := keccak256(0, 64)\n                        sstore(dataSlot, /** @src 6:3139:3180  \"collateralBalances[msg.sender] -= _amount\" */ checked_sub_uint256(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ sload(/** @src 6:3139:3180  \"collateralBalances[msg.sender] -= _amount\" */ dataSlot), value_1))\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        let value_2 := and(sload(1), sub(shl(160, 1), 1))\n                        /// @src 6:3191:3244  \"IERC20(collateralToken).transfer(msg.sender, _amount)\"\n                        let _4 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        /// @src 6:3191:3244  \"IERC20(collateralToken).transfer(msg.sender, _amount)\"\n                        mstore(_4, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 6:3191:3244  \"IERC20(collateralToken).transfer(msg.sender, _amount)\"\n                        let _5 := call(gas(), value_2, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0, /** @src 6:3191:3244  \"IERC20(collateralToken).transfer(msg.sender, _amount)\" */ _4, sub(abi_encode_address_uint256(add(_4, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 4), /** @src 6:2903:2913  \"msg.sender\" */ caller(), /** @src 6:3191:3244  \"IERC20(collateralToken).transfer(msg.sender, _amount)\" */ value_1), _4), _4, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        /// @src 6:3191:3244  \"IERC20(collateralToken).transfer(msg.sender, _amount)\"\n                        if iszero(_5)\n                        {\n                            /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 6:3191:3244  \"IERC20(collateralToken).transfer(msg.sender, _amount)\"\n                        let expr := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        /// @src 6:3191:3244  \"IERC20(collateralToken).transfer(msg.sender, _amount)\"\n                        if _5\n                        {\n                            let _6 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32\n                            /// @src 6:3191:3244  \"IERC20(collateralToken).transfer(msg.sender, _amount)\"\n                            if gt(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:3191:3244  \"IERC20(collateralToken).transfer(msg.sender, _amount)\" */ returndatasize()) { _6 := returndatasize() }\n                            finalize_allocation(_4, _6)\n                            expr := abi_decode_bool_fromMemory(_4, add(_4, _6))\n                        }\n                        /// @src 6:3260:3300  \"CollateralWithdrawn(msg.sender, _amount)\"\n                        let _7 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        mstore(_7, value_1)\n                        /// @src 6:3260:3300  \"CollateralWithdrawn(msg.sender, _amount)\"\n                        log2(_7, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:3260:3300  \"CollateralWithdrawn(msg.sender, _amount)\" */ 0xc30fcfbcaac9e0deffa719714eaa82396ff506a0d0d0eebe170830177288715d, /** @src 6:2903:2913  \"msg.sender\" */ caller())\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        let _8 := sload(0)\n                        sstore(0, and(_8, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ and(_8, sub(shl(160, 1), 1)), 0)\n                        return(0, 0)\n                    }\n                    case 0x73b4086b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_3 := calldataload(4)\n                        let _9 := and(value_3, sub(shl(160, 1), 1))\n                        if iszero(eq(value_3, _9)) { revert(0, 0) }\n                        mstore(0, _9)\n                        mstore(32, /** @src 6:1073:1110  \"mapping(address => Loan) public loans\" */ 5)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_1 := keccak256(0, 64)\n                        let _10 := sload(/** @src 6:1073:1110  \"mapping(address => Loan) public loans\" */ dataSlot_1)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        let _11 := sload(/** @src 6:1073:1110  \"mapping(address => Loan) public loans\" */ add(dataSlot_1, 1))\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        let value_4 := and(sload(/** @src 6:1073:1110  \"mapping(address => Loan) public loans\" */ add(dataSlot_1, 2)), /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0xff)\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_uint256_uint256_bool(memPos, _10, _11, value_4), memPos))\n                    }\n                    case 0x8c803fc2 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_5 := calldataload(4)\n                        /// @src 6:3414:3470  \"require(_amount > 0, \\\"Amount must be greater than zero\\\")\"\n                        require_helper_stringliteral_335f(/** @src 6:3422:3433  \"_amount > 0\" */ iszero(iszero(value_5)))\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(0, /** @src 6:3495:3505  \"msg.sender\" */ caller())\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 6:3489:3494  \"loans\" */ 0x05)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        if iszero(iszero(and(sload(/** @src 6:3489:3515  \"loans[msg.sender].isActive\" */ add(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ keccak256(0, 64), /** @src 6:3489:3515  \"loans[msg.sender].isActive\" */ 2)), /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0xff)))\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 34)\n                            mstore(add(memPtr_2, 68), \"Existing loan must be repaid fir\")\n                            mstore(add(memPtr_2, 100), \"st\")\n                            revert(memPtr_2, 132)\n                        }\n                        mstore(0, /** @src 6:3495:3505  \"msg.sender\" */ caller())\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, 4)\n                        let _12 := sload(keccak256(0, 64))\n                        let _13 := sload(/** @src 6:3626:3642  \"collateralFactor\" */ 0x03)\n                        /// @src 6:3593:3642  \"collateralBalances[msg.sender] * collateralFactor\"\n                        let product := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        product := mul(_12, _13)\n                        if iszero(or(iszero(_12), eq(_13, div(product, _12))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        if /** @src 6:3668:3686  \"_amount <= maxLoan\" */ gt(value_5, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ div(product, /** @src 6:3646:3649  \"100\" */ 0x64))\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_3 := mload(64)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, 4), 32)\n                            mstore(add(memPtr_3, 36), 29)\n                            mstore(add(memPtr_3, 68), \"Loan exceeds collateral limit\")\n                            revert(memPtr_3, /** @src 6:3646:3649  \"100\" */ 0x64)\n                        }\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(0, /** @src 6:3495:3505  \"msg.sender\" */ caller())\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, 4)\n                        let _14 := sload(keccak256(0, 64))\n                        let memPtr_4 := mload(64)\n                        finalize_allocation_7373(memPtr_4)\n                        mstore(memPtr_4, value_5)\n                        /// @src 6:3751:3884  \"Loan({...\"\n                        let _15 := add(memPtr_4, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        mstore(_15, _14)\n                        /// @src 6:3751:3884  \"Loan({...\"\n                        let _16 := add(memPtr_4, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 64)\n                        mstore(_16, 1)\n                        mstore(0, /** @src 6:3495:3505  \"msg.sender\" */ caller())\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 6:3489:3494  \"loans\" */ 0x05)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        sstore(dataSlot_2, mload(memPtr_4))\n                        sstore(add(dataSlot_2, 1), mload(_15))\n                        let memberSlot := add(dataSlot_2, /** @src 6:3489:3515  \"loans[msg.sender].isActive\" */ 2)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        let cleaned := iszero(iszero(mload(_16)))\n                        let value_6 := and(sload(memberSlot), not(255))\n                        sstore(memberSlot, or(value_6, and(cleaned, 0xff)))\n                        let value_7 := and(sload(/** @src 6:3489:3515  \"loans[msg.sender].isActive\" */ 2), /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 6:3895:3945  \"IERC20(lendingToken).transfer(msg.sender, _amount)\"\n                        let _17 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        /// @src 6:3895:3945  \"IERC20(lendingToken).transfer(msg.sender, _amount)\"\n                        mstore(_17, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0xa9059cbb))\n                        /// @src 6:3895:3945  \"IERC20(lendingToken).transfer(msg.sender, _amount)\"\n                        let _18 := call(gas(), value_7, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0, /** @src 6:3895:3945  \"IERC20(lendingToken).transfer(msg.sender, _amount)\" */ _17, sub(abi_encode_address_uint256(add(_17, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 4), /** @src 6:3495:3505  \"msg.sender\" */ caller(), /** @src 6:3895:3945  \"IERC20(lendingToken).transfer(msg.sender, _amount)\" */ value_5), _17), _17, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        /// @src 6:3895:3945  \"IERC20(lendingToken).transfer(msg.sender, _amount)\"\n                        if iszero(_18)\n                        {\n                            /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 6:3895:3945  \"IERC20(lendingToken).transfer(msg.sender, _amount)\"\n                        let expr_1 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        /// @src 6:3895:3945  \"IERC20(lendingToken).transfer(msg.sender, _amount)\"\n                        if _18\n                        {\n                            let _19 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32\n                            /// @src 6:3895:3945  \"IERC20(lendingToken).transfer(msg.sender, _amount)\"\n                            if gt(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:3895:3945  \"IERC20(lendingToken).transfer(msg.sender, _amount)\" */ returndatasize()) { _19 := returndatasize() }\n                            finalize_allocation(_17, _19)\n                            expr_1 := abi_decode_bool_fromMemory(_17, add(_17, _19))\n                        }\n                        /// @src 6:3961:3991  \"LoanTaken(msg.sender, _amount)\"\n                        let _20 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        mstore(_20, value_5)\n                        /// @src 6:3961:3991  \"LoanTaken(msg.sender, _amount)\"\n                        log2(_20, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:3961:3991  \"LoanTaken(msg.sender, _amount)\" */ 0xd5c776eab9418d89c040ffee59f2310d225f5ff682191bcee59b0413a7fd4835, /** @src 6:3495:3505  \"msg.sender\" */ caller())\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_8 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, value_8)\n                        return(memPos_1, 32)\n                    }\n                    case 0xaaaca558 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_9 := and(sload(/** @src 6:941:968  \"address public lendingToken\" */ 2), /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, value_9)\n                        return(memPos_2, 32)\n                    }\n                    case 0xab7b1c89 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_10 := calldataload(4)\n                        /// @src 6:4107:4163  \"require(_amount > 0, \\\"Amount must be greater than zero\\\")\"\n                        require_helper_stringliteral_335f(/** @src 6:4115:4126  \"_amount > 0\" */ iszero(iszero(value_10)))\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(0, /** @src 6:4204:4214  \"msg.sender\" */ caller())\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, /** @src 6:4198:4203  \"loans\" */ 0x05)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_3 := keccak256(0, 64)\n                        /// @src 6:4234:4251  \"userLoan.isActive\"\n                        let _21 := add(dataSlot_3, 2)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        if iszero(and(sload(/** @src 6:4234:4251  \"userLoan.isActive\" */ _21), /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0xff))\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 32)\n                            mstore(add(memPtr_5, 36), 14)\n                            mstore(add(memPtr_5, 68), \"No active loan\")\n                            revert(memPtr_5, 100)\n                        }\n                        if /** @src 6:4289:4315  \"_amount <= userLoan.amount\" */ gt(value_10, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ sload(/** @src 6:4300:4315  \"userLoan.amount\" */ dataSlot_3))\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), 32)\n                            mstore(add(memPtr_6, 36), 25)\n                            mstore(add(memPtr_6, 68), \"Repay amount exceeds loan\")\n                            revert(memPtr_6, 100)\n                        }\n                        let value_11 := and(sload(/** @src 6:4234:4251  \"userLoan.isActive\" */ 2), /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 6:4356:4425  \"IERC20(lendingToken).transferFrom(msg.sender, address(this), _amount)\"\n                        let _22 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        /// @src 6:4356:4425  \"IERC20(lendingToken).transferFrom(msg.sender, address(this), _amount)\"\n                        mstore(_22, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x23b872dd))\n                        /// @src 6:4356:4425  \"IERC20(lendingToken).transferFrom(msg.sender, address(this), _amount)\"\n                        let _23 := call(gas(), value_11, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0, /** @src 6:4356:4425  \"IERC20(lendingToken).transferFrom(msg.sender, address(this), _amount)\" */ _22, sub(abi_encode_address_address_uint256(add(_22, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 4), /** @src 6:4204:4214  \"msg.sender\" */ caller(), /** @src 6:4410:4414  \"this\" */ address(), /** @src 6:4356:4425  \"IERC20(lendingToken).transferFrom(msg.sender, address(this), _amount)\" */ value_10), _22), _22, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        /// @src 6:4356:4425  \"IERC20(lendingToken).transferFrom(msg.sender, address(this), _amount)\"\n                        if iszero(_23)\n                        {\n                            /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 6:4356:4425  \"IERC20(lendingToken).transferFrom(msg.sender, address(this), _amount)\"\n                        let expr_2 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        /// @src 6:4356:4425  \"IERC20(lendingToken).transferFrom(msg.sender, address(this), _amount)\"\n                        if _23\n                        {\n                            let _24 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32\n                            /// @src 6:4356:4425  \"IERC20(lendingToken).transferFrom(msg.sender, address(this), _amount)\"\n                            if gt(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:4356:4425  \"IERC20(lendingToken).transferFrom(msg.sender, address(this), _amount)\" */ returndatasize()) { _24 := returndatasize() }\n                            finalize_allocation(_22, _24)\n                            expr_2 := abi_decode_bool_fromMemory(_22, add(_22, _24))\n                        }\n                        /// @src 6:4436:4462  \"userLoan.amount -= _amount\"\n                        let _25 := checked_sub_uint256(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ sload(/** @src 6:4436:4462  \"userLoan.amount -= _amount\" */ dataSlot_3), value_10)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        sstore(dataSlot_3, _25)\n                        /// @src 6:4473:4551  \"if (userLoan.amount == 0) {...\"\n                        if /** @src 6:4477:4497  \"userLoan.amount == 0\" */ iszero(_25)\n                        /// @src 6:4473:4551  \"if (userLoan.amount == 0) {...\"\n                        {\n                            /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                            sstore(_21, and(sload(_21), not(255)))\n                        }\n                        /// @src 6:4566:4597  \"LoanRepaid(msg.sender, _amount)\"\n                        let _26 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        mstore(_26, value_10)\n                        /// @src 6:4566:4597  \"LoanRepaid(msg.sender, _amount)\"\n                        log2(_26, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:4566:4597  \"LoanRepaid(msg.sender, _amount)\" */ 0xc200a1f31dd659e356e0f112c82558e25f49f7b0f84438691cd96f5cb3558823, /** @src 6:4204:4214  \"msg.sender\" */ caller())\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xb2016bd4 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_12 := and(sload(/** @src 6:904:934  \"address public collateralToken\" */ 1), /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, value_12)\n                        return(memPos_3, 32)\n                    }\n                    case 0xb5c22157 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_13 := calldataload(4)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        if /** @src 6:2229:2246  \"_newFactor <= 100\" */ gt(value_13, /** @src 6:2243:2246  \"100\" */ 0x64)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), 32)\n                            mstore(add(memPtr_7, 36), 33)\n                            mstore(add(memPtr_7, 68), \"Collatereal Factor must be <= 10\")\n                            mstore(add(memPtr_7, /** @src 6:2243:2246  \"100\" */ 0x64), /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ \"0\")\n                            revert(memPtr_7, 132)\n                        }\n                        sstore(/** @src 6:2295:2324  \"collateralFactor = _newFactor\" */ 0x03, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ value_13)\n                        return(0, 0)\n                    }\n                    case 0xbad4a01f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_14 := calldataload(4)\n                        /// @src 6:2456:2498  \"require(_amount > 0, \\\"Amount must be > 0\\\")\"\n                        require_helper_stringliteral_01c2(/** @src 6:2464:2475  \"_amount > 0\" */ iszero(iszero(value_14)))\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(0, /** @src 6:2528:2538  \"msg.sender\" */ caller())\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        mstore(32, 4)\n                        let dataSlot_4 := keccak256(0, 64)\n                        let _27 := sload(/** @src 6:2509:2550  \"collateralBalances[msg.sender] += _amount\" */ dataSlot_4)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        let sum := add(_27, value_14)\n                        if gt(_27, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        sstore(dataSlot_4, sum)\n                        let value_15 := and(sload(1), sub(shl(160, 1), 1))\n                        /// @src 6:2561:2633  \"IERC20(collateralToken).transferFrom(msg.sender, address(this), _amount)\"\n                        let _28 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        /// @src 6:2561:2633  \"IERC20(collateralToken).transferFrom(msg.sender, address(this), _amount)\"\n                        mstore(_28, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x23b872dd))\n                        /// @src 6:2561:2633  \"IERC20(collateralToken).transferFrom(msg.sender, address(this), _amount)\"\n                        let _29 := call(gas(), value_15, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0, /** @src 6:2561:2633  \"IERC20(collateralToken).transferFrom(msg.sender, address(this), _amount)\" */ _28, sub(abi_encode_address_address_uint256(add(_28, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 4), /** @src 6:2528:2538  \"msg.sender\" */ caller(), /** @src 6:2618:2622  \"this\" */ address(), /** @src 6:2561:2633  \"IERC20(collateralToken).transferFrom(msg.sender, address(this), _amount)\" */ value_14), _28), _28, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32)\n                        /// @src 6:2561:2633  \"IERC20(collateralToken).transferFrom(msg.sender, address(this), _amount)\"\n                        if iszero(_29)\n                        {\n                            /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, 0, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 6:2561:2633  \"IERC20(collateralToken).transferFrom(msg.sender, address(this), _amount)\"\n                        let expr_3 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0\n                        /// @src 6:2561:2633  \"IERC20(collateralToken).transferFrom(msg.sender, address(this), _amount)\"\n                        if _29\n                        {\n                            let _30 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32\n                            /// @src 6:2561:2633  \"IERC20(collateralToken).transferFrom(msg.sender, address(this), _amount)\"\n                            if gt(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:2561:2633  \"IERC20(collateralToken).transferFrom(msg.sender, address(this), _amount)\" */ returndatasize()) { _30 := returndatasize() }\n                            finalize_allocation(_28, _30)\n                            expr_3 := abi_decode_bool_fromMemory(_28, add(_28, _30))\n                        }\n                        /// @src 6:2649:2689  \"CollateralDeposited(msg.sender, _amount)\"\n                        let _31 := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ mload(64)\n                        mstore(_31, value_14)\n                        /// @src 6:2649:2689  \"CollateralDeposited(msg.sender, _amount)\"\n                        log2(_31, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 32, /** @src 6:2649:2689  \"CollateralDeposited(msg.sender, _amount)\" */ 0xd7243f6f8212d5188fd054141cf6ea89cfc0d91facb8c3afe2f88a1358480142, /** @src 6:2528:2538  \"msg.sender\" */ caller())\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                    case 0xdf011c41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _32 := sload(/** @src 6:975:1006  \"uint256 public collateralFactor\" */ 3)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _32)\n                        return(memPos_4, 32)\n                    }\n                    case 0xe8a7da8e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_16 := calldataload(4)\n                        let _33 := and(value_16, sub(shl(160, 1), 1))\n                        if iszero(eq(value_16, _33)) { revert(0, 0) }\n                        mstore(0, _33)\n                        mstore(32, /** @src 6:5112:5117  \"loans\" */ 0x05)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        let memPtr_8 := mload(64)\n                        finalize_allocation_7373(memPtr_8)\n                        let _34 := sload(dataSlot_5)\n                        mstore(memPtr_8, _34)\n                        let _35 := sload(add(dataSlot_5, 1))\n                        mstore(add(memPtr_8, 32), _35)\n                        let _36 := iszero(iszero(and(sload(add(dataSlot_5, 2)), 0xff)))\n                        mstore(add(memPtr_8, 64), _36)\n                        let memPos_5 := mload(64)\n                        return(memPos_5, sub(abi_encode_uint256_uint256_bool(memPos_5, _34, _35, _36), memPos_5))\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_17 := calldataload(4)\n                        let _37 := and(value_17, sub(shl(160, 1), 1))\n                        if iszero(eq(value_17, _37)) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ _37)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0, /** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                            /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                            mstore(4, 0)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0, 36)\n                        }\n                        let _38 := sload(0)\n                        sstore(0, or(and(_38, shl(160, 0xffffffffffffffffffffffff)), _37))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ and(_38, sub(shl(160, 1), 1)), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _37)\n                        /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_uint256_uint256_bool(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), iszero(iszero(value2)))\n            }\n            function require_helper_stringliteral_01c2(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"Amount must be > 0\")\n                    revert(memPtr, 100)\n                }\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function finalize_allocation_7373(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_bool_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, iszero(iszero(value))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                value0 := value\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function require_helper_stringliteral_335f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 32)\n                    mstore(add(memPtr, 68), \"Amount must be greater than zero\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_address_address_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 64), value2)\n            }\n            /// @ast-id 1321 @src 6:4613:4908  \"function _loanRequiredCollateral(address _user) internal view returns (uint256) {...\"\n            function fun_loanRequiredCollateral(var_user) -> var\n            {\n                /// @src 6:4684:4691  \"uint256\"\n                var := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0\n                mstore(0, and(var_user, sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 6:4785:4790  \"loans\" */ 0x05)\n                /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                let dataSlot := keccak256(0, 0x40)\n                let memPtr := mload(0x40)\n                finalize_allocation_7373(memPtr)\n                let _1 := sload(dataSlot)\n                mstore(memPtr, _1)\n                mstore(add(memPtr, 0x20), sload(add(dataSlot, 1)))\n                let _2 := iszero(and(sload(add(dataSlot, 2)), 0xff))\n                mstore(add(memPtr, 0x40), iszero(_2))\n                /// @src 6:4808:4840  \"if (!userLoan.isActive) return 0\"\n                if /** @src 6:4812:4830  \"!userLoan.isActive\" */ _2\n                /// @src 6:4808:4840  \"if (!userLoan.isActive) return 0\"\n                {\n                    /// @src 6:4832:4840  \"return 0\"\n                    var := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0\n                    /// @src 6:4832:4840  \"return 0\"\n                    leave\n                }\n                /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                let product := mul(_1, /** @src 6:4877:4880  \"100\" */ 0x64)\n                /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                if iszero(or(iszero(_1), eq(/** @src 6:4877:4880  \"100\" */ 0x64, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ div(product, _1))))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                let _3 := sload(/** @src 6:4884:4900  \"collateralFactor\" */ 0x03)\n                /// @src 6:4858:4900  \"(userLoan.amount * 100) / collateralFactor\"\n                let r := /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 0\n                if iszero(_3)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x12)\n                    revert(0, 0x24)\n                }\n                r := div(product, _3)\n                /// @src 6:4851:4900  \"return (userLoan.amount * 100) / collateralFactor\"\n                var := r\n            }\n            /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                let value := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x00), /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ sub(shl(160, 1), 1))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ value, /** @src 5:735:745  \"msg.sender\" */ caller()))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(/** @src 0:1710:1716  \"_owner\" */ 0x00, /** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                    /// @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\"\n                    mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 5:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(/** @src 0:1710:1716  \"_owner\" */ 0x00, /** @src 6:173:5210  \"contract LendingBorrowing is Ownable {...\" */ 36)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220be03213baa9f6b40fe5bbf5a222ed4e97f7cff83226472978338ed2c27516ad864736f6c634300081a0033\"\n    }\n}\n",
          "hash": "9c9d0f09506ff6e153b7d4bd565400042587560bc335ce32113322f827da9b2e",
          "factoryDependencies": {}
        }
      },
      "contracts/MyToken.sol": {
        "MockERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.1.0-dev.16+commit.0421869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyToken.sol\":\"MockERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MyToken.sol\":{\"keccak256\":\"0x8661be179fbbb00c0b373833592a03ccbd051ddcf086d54d8c084476c5db8cab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec36f6e61e21736bcf637e3654070f0a3d70ff1657ededb4428bbab3de2997c9\",\"dweb:/ipfs/QmUDAa4xextG1gHaYPH7ig2hLpMKBhAzdKKNH49LMZ5pni\"]}},\"version\":1}",
            "solc_version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 224/65808 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 6684\n// Code size = 23195 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x200e8]\n   117: jump @213 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x30110\n   126: i32 a0 = a0 + 0\n   128: ecalli 8 // 'set_immutable_data'\n   130: jump @213\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @26\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @26\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 48)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ecalli 5 // 'get_storage'\n   770: a0 = u64 [sp + 0x38]\n   773: a1 = u64 [sp + 0x30]\n   776: a2 = u64 [sp + 0x28]\n   779: a3 = u64 [sp + 0x20]\n   782: a0 = reverse a0\n   784: a1 = reverse a1\n   786: a2 = reverse a2\n   788: a3 = reverse a3\n   790: u64 [s1 + 0x18] = a3\n   793: u64 [s1 + 0x10] = a2\n   796: u64 [s1 + 0x8] = a1\n   799: u64 [s1] = a0\n   801: sp = s0 + 0xffffffffffffffa0\n   804: ra = u64 [sp + 0x58]\n   807: s0 = u64 [sp + 0x50]\n   810: s1 = u64 [sp + 0x48]\n   813: sp = sp + 0x60\n   816: ret\n      : @22 (gas: 40)\n   818: sp = sp + 0xffffffffffffffa0\n   821: u64 [sp + 0x58] = ra\n   824: u64 [sp + 0x50] = s0\n   827: s0 = sp + 0x60\n   830: sp = sp & 0xffffffffffffffe0\n   833: t0 = u64 [a0]\n   835: a3 = u64 [a0 + 0x8]\n   838: a4 = u64 [a0 + 0x10]\n   841: a0 = u64 [a0 + 0x18]\n   844: t1 = u64 [a1]\n   846: a2 = u64 [a1 + 0x8]\n   849: a5 = u64 [a1 + 0x10]\n   852: a1 = u64 [a1 + 0x18]\n   855: t2 = reverse a0\n   857: a4 = reverse a4\n   859: a3 = reverse a3\n   861: a0 = reverse t0\n   863: t0 = reverse a1\n   865: a5 = reverse a5\n   867: a2 = reverse a2\n   869: a1 = reverse t1\n   871: u64 [sp + 0x18] = a0\n   874: u64 [sp + 0x10] = a3\n   877: u64 [sp + 0x8] = a4\n   880: u64 [sp] = t2\n   882: u64 [sp + 0x38] = a1\n   885: u64 [sp + 0x30] = a2\n   888: u64 [sp + 0x28] = a5\n   891: u64 [sp + 0x20] = t0\n   894: i32 a1 = sp + 0\n   896: i32 a3 = sp + 0x20\n   899: a2 = 0xffffffffffffffff\n   902: a4 = 0x20\n   905: a0 = 0\n   907: ecalli 9 // 'set_storage'\n   909: sp = s0 + 0xffffffffffffffa0\n   912: ra = u64 [sp + 0x58]\n   915: s0 = u64 [sp + 0x50]\n   918: sp = sp + 0x60\n   921: ret\n      : @23 (gas: 33)\n   923: sp = sp + 0xffffffffffffff20\n   927: u64 [sp + 0xd8] = ra\n   931: u64 [sp + 0xd0] = s0\n   935: u64 [sp + 0xc8] = s1\n   939: s0 = sp + 0xe0\n   943: sp = sp & 0xffffffffffffffe0\n   946: a5 = u64 [a4]\n   948: u64 [sp + 0x40] = a5\n   951: a5 = u64 [a4 + 0x8]\n   954: u64 [sp + 0x48] = a5\n   957: a5 = u64 [a4 + 0x10]\n   960: u64 [sp + 0x50] = a5\n   963: a4 = u64 [a4 + 0x18]\n   966: u64 [sp + 0x58] = a4\n   969: t0 = 0x6\n   972: a4 = u64 [a3]\n   974: u64 [sp + 0x18] = a4\n   977: a4 = u64 [a3 + 0x8]\n   980: u64 [sp + 0x20] = a4\n   983: a4 = u64 [a3 + 0x10]\n   986: u64 [sp + 0x28] = a4\n   989: a3 = u64 [a3 + 0x18]\n   992: u64 [sp + 0x30] = a3\n   995: s1 = u64 [a2]\n   997: a3 = u64 [a2 + 0x8]\n  1000: u64 [sp] = a3\n  1002: a3 = u64 [a2 + 0x10]\n  1005: u64 [sp + 0x8] = a3\n  1008: a2 = u64 [a2 + 0x18]\n  1011: u64 [sp + 0x10] = a2\n  1014: u64 [sp + 0x38] = a1\n  1017: ra = 0x8\n  1020: jump @26\n      : @24 [@dyn 3] (gas: 2)\n  1023: u64 [sp + 0x38] = a1\n  1026: ra = 8, jump @26\n      : @25 [@dyn 4] (gas: 46)\n  1031: a1 = reverse s1\n  1033: u64 [sp + 0x78] = a1\n  1036: a1 = u64 [sp]\n  1038: a1 = reverse a1\n  1040: u64 [sp + 0x70] = a1\n  1043: a1 = u64 [sp + 0x8]\n  1046: a1 = reverse a1\n  1048: u64 [sp + 0x68] = a1\n  1051: a1 = u64 [sp + 0x10]\n  1054: a1 = reverse a1\n  1056: u64 [sp + 0x60] = a1\n  1059: a1 = u64 [sp + 0x18]\n  1062: a1 = reverse a1\n  1064: u64 [sp + 0x98] = a1\n  1068: a1 = u64 [sp + 0x20]\n  1071: a1 = reverse a1\n  1073: u64 [sp + 0x90] = a1\n  1077: a1 = u64 [sp + 0x28]\n  1080: a1 = reverse a1\n  1082: u64 [sp + 0x88] = a1\n  1086: a1 = u64 [sp + 0x30]\n  1089: a1 = reverse a1\n  1091: u64 [sp + 0x80] = a1\n  1095: a1 = u64 [sp + 0x40]\n  1098: a1 = reverse a1\n  1100: u64 [sp + 0xb8] = a1\n  1104: a1 = u64 [sp + 0x48]\n  1107: a1 = reverse a1\n  1109: u64 [sp + 0xb0] = a1\n  1113: a1 = u64 [sp + 0x50]\n  1116: a1 = reverse a1\n  1118: u64 [sp + 0xa8] = a1\n  1122: a1 = u64 [sp + 0x58]\n  1125: a1 = reverse a1\n  1127: u64 [sp + 0xa0] = a1\n  1131: i32 a2 = a0 + 0\n  1133: a3 = i32 [sp + 0x38]\n  1136: i32 a0 = sp + 0x60\n  1139: a1 = 0x3\n  1142: ecalli 4 // 'deposit_event'\n  1144: sp = s0 + 0xffffffffffffff20\n  1148: ra = u64 [sp + 0xd8]\n  1152: s0 = u64 [sp + 0xd0]\n  1156: s1 = u64 [sp + 0xc8]\n  1160: sp = sp + 0xe0\n  1164: ret\n      : @26 (gas: 2)\n  1166: i32 a2 = a0 >> 0x10\n  1169: jump @31 if a2 != 0\n      : @27 (gas: 4)\n  1172: a1 = a1 + a0\n  1175: i32 a1 = a1 + 0x1f\n  1178: a1 = a1 & 0xffffffffffffffe0\n  1181: jump @31 if a1 >u 65536\n      : @28 (gas: 3)\n  1187: a2 = 0x200e4\n  1192: a3 = i32 [0x200e4]\n  1197: jump @30 if a3 >=u a1\n      : @29 (gas: 2)\n  1200: u32 [0x200e4] = a1\n  1205: fallthrough\n      : @30 (gas: 4)\n  1206: a1 = 0x200f0\n  1211: i32 a0 = a0 + 0\n  1213: a0 = a0 + a1\n  1216: ret\n      : @31 (gas: 1)\n  1218: trap\n      : @32 (gas: 6)\n  1219: sp = sp + 0xfffffffffffffff0\n  1222: u64 [sp + 0x8] = ra\n  1225: u64 [sp] = s0\n  1227: s0 = a0 & 0x1\n  1230: ecalli 2 // 'call_data_size'\n  1232: fallthrough\n      : @33 (gas: 2)\n  1233: u32 [0x200e0] = a0\n  1238: jump @35 if s0 == 0\n      : @34 (gas: 1)\n  1241: ra = 10, jump @36\n      : @35 [@dyn 5] (gas: 21)\n  1245: ra = 0xc\n  1248: sp = sp + 0xfffffffffffff808\n  1252: a0 = sp + 0x700\n  1256: u64 [a0 + 0xf0] = ra\n  1260: u64 [a0 + 0xe8] = s0\n  1264: u64 [a0 + 0xe0] = s1\n  1268: s0 = sp + 0x7f8\n  1272: sp = sp + 0xfffffffffffff800\n  1276: sp = sp + 0xfffffffffffffb78\n  1280: sp = sp & 0xffffffffffffffe0\n  1283: s1 = sp\n  1285: a2 = s1 + 0x7ff\n  1289: a2 = a2 + 0x79\n  1292: u64 [a2 + 1984] = 0\n  1296: u64 [a2 + 1976] = 0\n  1300: u64 [a2 + 1960] = 0x80\n  1306: a0 = 0x40\n  1309: a1 = s1 + 0x1020\n  1313: u64 [a2 + 1968] = 0\n  1317: ra = 0xc6\n  1321: jump @19\n      : @36 [@dyn 6] (gas: 15)\n  1324: sp = sp + 0xfffffffffffffe10\n  1328: u64 [sp + 0x1e8] = ra\n  1332: u64 [sp + 0x1e0] = s0\n  1336: u64 [sp + 0x1d8] = s1\n  1340: s0 = sp + 0x1f0\n  1344: sp = sp + 0xfffffffffffff930\n  1348: sp = sp & 0xffffffffffffffe0\n  1351: s1 = sp\n  1353: u64 [s1 + 1560] = 0\n  1357: u64 [s1 + 1552] = 0\n  1361: u64 [s1 + 1536] = 0x80\n  1367: a0 = 0x40\n  1370: a1 = s1 + 0x600\n  1374: u64 [s1 + 1544] = 0\n  1378: ra = 14, jump @19\n      : @37 [@dyn 7] (gas: 7)\n  1383: u64 [s1 + 1592] = 0\n  1387: u64 [s1 + 1584] = 0\n  1391: u64 [s1 + 1576] = 0\n  1395: u64 [s1 + 1568] = 0\n  1399: i32 a0 = s1 + 0x620\n  1403: ecalli 10 // 'value_transferred'\n  1405: fallthrough\n      : @38 (gas: 9)\n  1406: a4 = s1 + 0x600\n  1410: a0 = u64 [a4 + 0x30]\n  1413: a1 = u64 [a4 + 0x38]\n  1416: a2 = u64 [a4 + 0x28]\n  1419: a3 = u64 [a4 + 0x20]\n  1422: a1 = a1 | a2\n  1425: a0 = a0 | a3\n  1428: a0 = a0 | a1\n  1431: jump @40 if a0 == 0\n      : @39 (gas: 1)\n  1434: jump @177\n      : @40 (gas: 9)\n  1437: a2 = u32 [0x200e0]\n  1442: u64 [s1 + 1496] = 0\n  1446: u64 [s1 + 1488] = 0\n  1450: u64 [s1 + 1480] = 0\n  1454: a0 = s1 + 0x5e0\n  1458: a1 = s1 + 0x5c0\n  1462: u64 [s1 + 0x118] = a2\n  1466: u64 [s1 + 0x5c0] = a2\n  1470: ra = 16, jump @602\n      : @41 [@dyn 8] (gas: 17)\n  1475: a4 = s1 + 0x500\n  1479: a3 = u64 [a4 + 0xf8]\n  1483: a2 = u64 [a4 + 0xf0]\n  1487: a1 = u64 [a4 + 0xe8]\n  1491: a0 = u64 [a4 + 0xe0]\n  1495: a4 = s1 + 0x100\n  1499: u64 [a4 + 0x10] = a3\n  1502: u64 [a4] = a1\n  1504: a3 = a3 | a1\n  1507: a1 = a0 | a2\n  1510: a1 = a1 | a3\n  1513: a1 = a1 >> 0x20\n  1516: u64 [a4 + 0x8] = a2\n  1519: a2 = a2 | a3\n  1522: a2 = a2 << 0x20\n  1525: a1 = a1 | a2\n  1528: jump @43 if a1 == 0\n      : @42 (gas: 1)\n  1531: jump @176\n      : @43 (gas: 3)\n  1534: u64 [s1 + 0xf8] = a0\n  1538: a1 = u64 [s1 + 0x118]\n  1542: ra = 18, jump @26\n      : @44 [@dyn 9] (gas: 5)\n  1547: i32 a0 = a0 + 0\n  1549: a1 = i32 [s1 + 0x118]\n  1553: a2 = 0\n  1555: ecalli 0 // 'call_data_copy'\n  1556: fallthrough\n      : @45 (gas: 2)\n  1557: a1 = u64 [s1 + 0x118]\n  1561: jump @47 if a1 >u 63\n      : @46 (gas: 1)\n  1565: jump @178\n      : @47 (gas: 3)\n  1568: a0 = s1 + 0x5a0\n  1572: a1 = u64 [s1 + 0xf8]\n  1576: ra = 20, jump @17\n      : @48 [@dyn 10] (gas: 8)\n  1581: a0 = u64 [s1 + 0x5b8]\n  1585: t0 = u64 [s1 + 0x5b0]\n  1589: a4 = u64 [s1 + 0x5a8]\n  1593: u64 [s1 + 0xf0] = a0\n  1597: a2 = t0 | a0\n  1600: a3 = a4 <u 0x1\n  1603: a3 = 0 if a2 != 0\n  1605: jump @50 if a3 != 0\n      : @49 (gas: 1)\n  1608: jump @179\n      : @50 (gas: 50)\n  1611: a3 = u64 [s1 + 0x5a0]\n  1615: t1 = u64 [s1 + 0xf8]\n  1619: t2 = u64 [s1 + 0x118]\n  1623: t2 = t2 + t1\n  1626: a1 = t2 <u t1\n  1629: t1 = t1 + a3\n  1632: u64 [s1 + 0x118] = t1\n  1636: a3 = t1 <u a3\n  1639: a2 = u64 [s1 + 0x100]\n  1643: a0 = a4 + a2\n  1646: a5 = a2\n  1648: t1 = a0 + a3\n  1651: a2 = t1 ^ a4\n  1654: a4 = t1 <u a4\n  1657: a4 = a3 if a2 == 0\n  1660: a2 = a5\n  1662: a5 = a5 + a1\n  1665: a2 = a5 <u a2\n  1668: a2 = a1 if a1 == 0\n  1671: a1 = u64 [s1 + 0x108]\n  1675: a3 = t0 + a1\n  1678: ra = a3 <u t0\n  1681: a0 = u64 [s1 + 0x110]\n  1685: t0 = u64 [s1 + 0xf0]\n  1689: t0 = t0 + a0\n  1692: ra = ra + t0\n  1695: t0 = a1 + a2\n  1698: a4 = a4 + a3\n  1701: a2 = a4 <u a3\n  1704: a3 = ra + a2\n  1707: a1 = t0 <u a1\n  1710: a1 = a1 + a0\n  1713: u64 [s1 + 0xf0] = t2\n  1717: u64 [s1 + 0x540] = t2\n  1721: u64 [s1 + 0xe8] = a5\n  1725: u64 [s1 + 0x548] = a5\n  1729: a0 = u64 [s1 + 0x118]\n  1733: a5 = s1 + 0x500\n  1737: u64 [a5 + 0x60] = a0\n  1740: u64 [s1 + 0x118] = t0\n  1744: u64 [s1 + 0x550] = t0\n  1748: u64 [s1 + 0xe0] = a1\n  1752: u64 [a5 + 0x58] = a1\n  1755: u64 [s1 + 0x568] = t1\n  1759: u64 [a5 + 0x70] = a4\n  1762: a0 = s1 + 0x580\n  1766: a1 = s1 + 0x560\n  1770: a2 = s1 + 0x540\n  1774: u64 [a5 + 0x78] = a3\n  1777: ra = 22, jump @613\n      : @51 [@dyn 11] (gas: 11)\n  1782: a2 = u64 [s1 + 0xf8]\n  1786: a4 = s1 + 0x100\n  1790: a0 = u64 [a4 + 0x8]\n  1793: a1 = u64 [a4 + 0x10]\n  1796: a0 = a0 | a1\n  1799: a1 = 0xffffffe0\n  1809: a1 = a2 <u a1\n  1812: a3 = u64 [a4]\n  1814: a1 = 0 if a3 != 0\n  1816: a1 = 0 if a0 != 0\n  1818: jump @53 if a1 != 0\n      : @52 (gas: 1)\n  1821: jump @176\n      : @53 (gas: 11)\n  1824: a0 = u64 [s1 + 0x598]\n  1828: u64 [s1 + 0xa0] = a0\n  1832: a0 = u64 [s1 + 0x590]\n  1836: u64 [s1 + 0x98] = a0\n  1840: a0 = u64 [s1 + 0x588]\n  1844: u64 [s1 + 0xa8] = a0\n  1848: a0 = u64 [s1 + 0x580]\n  1852: u64 [s1 + 0xb0] = a0\n  1856: i32 a1 = a2 + 0x20\n  1859: a0 = s1 + 0x520\n  1863: ra = 24, jump @17\n      : @54 [@dyn 12] (gas: 7)\n  1868: t0 = u64 [s1 + 0x538]\n  1872: a1 = u64 [s1 + 0x530]\n  1876: a2 = u64 [s1 + 0x528]\n  1880: a3 = a1 | t0\n  1883: a4 = a2 <u 0x1\n  1886: a4 = 0 if a3 != 0\n  1888: jump @56 if a4 != 0\n      : @55 (gas: 1)\n  1891: jump @180\n      : @56 (gas: 36)\n  1894: a3 = u64 [s1 + 0x520]\n  1898: a4 = u64 [s1 + 0xf8]\n  1902: a4 = a4 + a3\n  1905: a3 = a4 <u a3\n  1908: a5 = u64 [s1 + 0x100]\n  1912: a5 = a5 + a2\n  1915: a5 = a5 + a3\n  1918: a0 = a5 ^ a2\n  1921: a2 = a5 <u a2\n  1924: a2 = a3 if a0 == 0\n  1927: a0 = u64 [s1 + 0x108]\n  1931: a0 = a0 + a1\n  1934: a2 = a2 + a0\n  1937: a3 = a2 <u a0\n  1940: a0 = a0 <u a1\n  1943: a1 = u64 [s1 + 0x110]\n  1947: t0 = t0 + a1\n  1950: a0 = a0 + t0\n  1953: a3 = a3 + a0\n  1956: a0 = u64 [s1 + 0xf0]\n  1960: u64 [s1 + 0x4c0] = a0\n  1964: a0 = u64 [s1 + 0xe8]\n  1968: u64 [s1 + 0x4c8] = a0\n  1972: u64 [s1 + 0x4e0] = a4\n  1976: a0 = u64 [s1 + 0x118]\n  1980: a4 = s1 + 0x400\n  1984: u64 [a4 + 0xd0] = a0\n  1988: a0 = u64 [s1 + 0xe0]\n  1992: u64 [a4 + 0xd8] = a0\n  1996: u64 [a4 + 0xe8] = a5\n  2000: u64 [a4 + 0xf0] = a2\n  2004: a0 = s1 + 0x500\n  2008: a1 = s1 + 0x4e0\n  2012: a2 = s1 + 0x4c0\n  2016: u64 [a4 + 0xf8] = a3\n  2020: ra = 26, jump @613\n      : @57 [@dyn 13] (gas: 12)\n  2025: a2 = u64 [s1 + 0x98]\n  2029: a4 = u64 [s1 + 0xb0]\n  2033: a0 = a4 | a2\n  2036: a1 = u64 [s1 + 0xa0]\n  2040: a3 = u64 [s1 + 0xa8]\n  2044: a1 = a1 | a3\n  2047: a0 = a0 | a1\n  2050: a0 = a0 >> 0x20\n  2053: a1 = a1 | a2\n  2056: a1 = a1 << 0x20\n  2059: a0 = a0 | a1\n  2062: jump @59 if a0 == 0\n      : @58 (gas: 1)\n  2065: jump @176\n      : @59 (gas: 12)\n  2068: a1 = a4\n  2070: a2 = s1 + 0x500\n  2074: a0 = u64 [a2 + 0x18]\n  2077: u64 [s1 + 0x78] = a0\n  2080: a0 = u64 [a2 + 0x10]\n  2083: u64 [s1 + 0x70] = a0\n  2086: a0 = u64 [a2 + 0x8]\n  2089: u64 [s1 + 0x80] = a0\n  2093: a0 = u64 [a2]\n  2095: u64 [s1 + 0x88] = a0\n  2099: a0 = s1 + 0x4a0\n  2103: ra = 28, jump @17\n      : @60 [@dyn 14] (gas: 17)\n  2108: a0 = s1 + 0x400\n  2112: a3 = u64 [a0 + 0xb8]\n  2116: a1 = u64 [a0 + 0xb0]\n  2120: a2 = u64 [a0 + 0xa8]\n  2124: a0 = a3 >u 0\n  2126: a4 = a1 >u 0\n  2128: a4 = a0 if a3 != 0\n  2131: u64 [s1 + 0xd0] = a2\n  2135: a0 = a2 >u 0\n  2137: u64 [s1 + 0x60] = a1\n  2140: u64 [s1 + 0xc8] = a3\n  2144: a1 = a1 | a3\n  2147: u64 [s1 + 0x58] = a0\n  2150: u64 [s1 + 0x90] = a4\n  2154: u64 [s1 + 0xc0] = a1\n  2158: a0 = a4 if a1 != 0\n  2161: jump @62 if a0 == 0\n      : @61 (gas: 1)\n  2164: jump @181\n      : @62 (gas: 9)\n  2167: a0 = u64 [s1 + 0x4a0]\n  2171: u64 [s1 + 0x68] = a0\n  2174: u64 [s1 + 1624] = 0\n  2178: u64 [s1 + 1616] = 0\n  2182: u64 [s1 + 1608] = 0\n  2186: u64 [s1 + 1600] = 0x3\n  2191: a0 = s1 + 0x480\n  2195: a1 = s1 + 0x640\n  2199: ra = 30, jump @21\n      : @63 [@dyn 15] (gas: 6)\n  2204: a4 = s1 + 0x400\n  2208: a0 = u64 [a4 + 0x90]\n  2212: a1 = u64 [a4 + 0x88]\n  2216: a2 = u64 [a4 + 0x80]\n  2220: a3 = u64 [a4 + 0x98]\n  2224: t0 = 32, jump @735\n      : @64 [@dyn 16] (gas: 12)\n  2229: t0 = a2 <u 0x1\n  2232: ra = a1 & 0x7f\n  2235: t2 = a5 & a0\n  2238: a4 = a5 & t1\n  2241: ra = a1 if a2 != 0\n  2244: a1 = ra <u 0x20\n  2247: a5 = a5 & a3\n  2250: a2 = a1\n  2252: a2 = 0 if a4 != 0\n  2254: a0 = t2 | a5\n  2257: a2 = 0 if a0 != 0\n  2259: jump @66 if t0 == a2\n      : @65 (gas: 1)\n  2262: jump @187\n      : @66 (gas: 1)\n  2265: t0 = 34, jump @740\n      : @67 [@dyn 17] (gas: 4)\n  2270: a0 = u64 [s1 + 0x68]\n  2273: a0 = a0 <u 0x20\n  2276: u64 [s1 + 0xb8] = a0\n  2280: jump @76 if a3 == 0\n      : @68 (gas: 11)\n  2284: u64 [s1 + 0xf0] = a4\n  2288: u64 [s1 + 0xf8] = ra\n  2292: u64 [s1 + 0x100] = a5\n  2296: u64 [s1 + 0x110] = t2\n  2300: u64 [s1 + 1144] = 0\n  2304: u64 [s1 + 1136] = 0\n  2308: u64 [s1 + 1128] = 0\n  2312: a1 = s1 + 0x460\n  2316: u64 [s1 + 1120] = 0x3\n  2321: a0 = 0\n  2323: ra = 36, jump @19\n      : @69 [@dyn 18] (gas: 2)\n  2328: a1 = i32 [0x200e4]\n  2333: jump @71 if a1 >u 31\n      : @70 (gas: 2)\n  2337: u32 [0x200e4] = 0x20\n  2343: fallthrough\n      : @71 (gas: 87)\n  2344: a0 = sp + 0xffffffffffffffe0\n  2347: a2 = a0 & 0xffffffffffffffe0\n  2350: u64 [s1 + 0x108] = a2\n  2354: sp = a2\n  2356: a0 = 0x200f0\n  2361: i32 a0 = a0 + 0\n  2363: i32 a2 = a2 + 0\n  2365: a1 = 0x20\n  2368: ecalli 6 // 'hash_keccak_256'\n  2370: a0 = u64 [s1 + 0x68]\n  2373: a1 = a0 + 0x1f\n  2376: a0 = a1 <u a0\n  2379: a5 = u64 [s1 + 0xd0]\n  2383: a2 = a5 + a0\n  2386: a3 = a2 <u a5\n  2389: a3 = a0 if a0 == 0\n  2392: a4 = u64 [s1 + 0x60]\n  2395: a3 = a3 + a4\n  2398: u64 [s1 + 0xe8] = a3\n  2402: a3 = a3 << 0x3b\n  2405: a4 = a2 >> 0x5\n  2408: a4 = a4 | a3\n  2411: a0 = u64 [s1 + 0x108]\n  2415: t1 = u64 [a0 + 0x18]\n  2418: a2 = a2 << 0x3b\n  2421: a3 = u64 [a0 + 0x10]\n  2424: a1 = a1 >> 0x5\n  2427: a0 = a1 | a2\n  2430: t2 = reverse t1\n  2432: a2 = reverse a3\n  2434: a1 = u64 [s1 + 0xb8]\n  2438: a1 = 0 if a5 != 0\n  2440: a3 = u64 [s1 + 0xc0]\n  2444: a1 = 0 if a3 != 0\n  2446: a4 = 0 if a1 != 0\n  2448: a0 = 0 if a1 != 0\n  2450: t0 = t2 + a0\n  2453: a0 = t0 <u t2\n  2456: a5 = a2 + a0\n  2459: a4 = a4 + a5\n  2462: u64 [s1 + 0x118] = a4\n  2466: a5 = a4 ^ a2\n  2469: a3 = a4 <u a2\n  2472: a3 = a0 if a5 == 0\n  2475: u64 [s1 + 0xe0] = a3\n  2479: a0 = u64 [s1 + 0xf8]\n  2483: ra = a0 + 0x1f\n  2486: a4 = ra <u a0\n  2489: a3 = u64 [s1 + 0xf0]\n  2493: a0 = a3 + a4\n  2496: a5 = a0 <u a3\n  2499: a5 = a4 if a4 == 0\n  2502: t1 = u64 [s1 + 0x110]\n  2506: t1 = t1 + a5\n  2509: a4 = t1 << 0x3b\n  2512: a3 = a0 >> 0x5\n  2515: a3 = a3 | a4\n  2518: a0 = a0 << 0x3b\n  2521: a4 = ra >> 0x5\n  2524: a0 = a0 | a4\n  2527: a0 = a0 + t2\n  2530: u64 [s1 + 0xf8] = a0\n  2534: a0 = a0 <u t2\n  2537: t2 = t0\n  2539: a4 = a2 + a0\n  2542: a4 = a4 + a3\n  2545: a3 = a4 ^ a2\n  2548: u64 [s1 + 0xf0] = a4\n  2552: a2 = a4 <u a2\n  2555: a2 = a0 if a3 == 0\n  2558: a4 = u64 [s1 + 0xe8]\n  2562: a0 = u64 [s1 + 0x60]\n  2565: a0 = a4 <u a0\n  2568: a3 = u64 [s1 + 0xc8]\n  2572: a0 = a0 + a3\n  2575: a3 = a4 >> 0x5\n  2578: a4 = a0 << 0x3b\n  2581: a3 = a3 | a4\n  2584: a4 = u64 [s1 + 0x108]\n  2588: t0 = u64 [a4]\n  2590: a4 = u64 [a4 + 0x8]\n  2593: a0 = a0 >> 0x5\n  2596: a3 = 0 if a1 != 0\n  2598: a0 = 0 if a1 != 0\n  2600: a1 = reverse a4\n  2602: a4 = reverse t0\n  2604: t0 = 38, jump @756\n      : @72 [@dyn 19] (gas: 24)\n  2609: t0 = a0 + a3\n  2612: a0 = u64 [s1 + 0x110]\n  2616: a0 = t1 <u a0\n  2619: a3 = u64 [s1 + 0x100]\n  2623: a0 = a0 + a3\n  2626: a3 = t1 >> 0x5\n  2629: a5 = a0 << 0x3b\n  2632: a3 = a3 | a5\n  2635: a0 = a0 >> 0x5\n  2638: a0 = a0 + a4\n  2641: a4 = u64 [s1 + 0x118]\n  2645: a3 = a3 + a1\n  2648: a1 = a3 <u a1\n  2651: a0 = a0 + a1\n  2654: a2 = a2 + a3\n  2657: u64 [s1 + 0xe8] = a2\n  2661: a1 = a2 <u a3\n  2664: a0 = a0 + a1\n  2667: u64 [s1 + 0xe0] = a0\n  2671: a0 = sp + 0xffffffffffffffe0\n  2674: t1 = a0 & 0xffffffffffffffe0\n  2677: sp = t1\n  2679: u64 [s1 + 0xd8] = t1\n  2683: fallthrough\n      : @73 (gas: 20)\n  2684: a0 = u64 [s1 + 0xf8]\n  2688: a0 = t2 <u a0\n  2691: a2 = u64 [s1 + 0xf0]\n  2695: a1 = a4 ^ a2\n  2698: a2 = a4 <u a2\n  2701: a2 = a0 if a1 == 0\n  2704: a5 = u64 [s1 + 0xe8]\n  2708: a0 = ra <u a5\n  2711: a3 = u64 [s1 + 0xe0]\n  2715: a1 = t0 ^ a3\n  2718: a3 = t0 <u a3\n  2721: a3 = a0 if a1 == 0\n  2724: a0 = ra ^ a5\n  2727: a0 = a0 | a1\n  2730: a3 = a2 if a0 == 0\n  2733: u64 [t1] = t2\n  2735: u64 [t1 + 0x8] = a4\n  2738: u64 [t1 + 0x10] = ra\n  2741: u64 [t1 + 0x18] = t0\n  2744: jump @76 if a3 == 0\n      : @74 (gas: 11)\n  2747: u64 [s1 + 1656] = 0\n  2751: u64 [s1 + 1648] = 0\n  2755: u64 [s1 + 1640] = 0\n  2759: u64 [s1 + 1632] = 0\n  2763: a1 = s1 + 0x660\n  2767: a0 = t1\n  2769: u64 [s1 + 0x110] = t2\n  2773: u64 [s1 + 0x118] = a4\n  2777: u64 [s1 + 0x108] = t0\n  2781: u64 [s1 + 0x100] = ra\n  2785: ra = 40, jump @22\n      : @75 [@dyn 20] (gas: 15)\n  2790: t1 = u64 [s1 + 0xd8]\n  2794: t0 = u64 [s1 + 0x108]\n  2798: a4 = u64 [s1 + 0x118]\n  2802: t2 = u64 [s1 + 0x110]\n  2806: t2 = t2 + 0x1\n  2809: a0 = t2 <u 0x1\n  2812: a4 = a4 + a0\n  2815: a0 = t2 | a4\n  2818: a0 = a0 <u 0x1\n  2821: a1 = u64 [s1 + 0x100]\n  2825: a0 = a0 + a1\n  2828: a1 = a0 <u a1\n  2831: t0 = t0 + a1\n  2834: ra = a0\n  2836: jump @73\n      : @76 (gas: 23)\n  2839: a0 = u64 [s1 + 0xb8]\n  2843: a0 = a0 ^ 0x1\n  2846: a5 = u64 [s1 + 0xd0]\n  2850: a1 = u64 [s1 + 0x58]\n  2853: a0 = a1 if a5 != 0\n  2856: a1 = u64 [s1 + 0x90]\n  2860: a2 = u64 [s1 + 0xc0]\n  2864: a0 = a1 if a2 != 0\n  2867: ra = u64 [s1 + 0xc8]\n  2871: a4 = a5 | ra\n  2874: a1 = u64 [s1 + 0x60]\n  2877: t2 = a1 >> 0x3f\n  2880: ra = ra << 0x1\n  2883: a2 = a5 >> 0x3f\n  2886: u64 [s1 + 0x58] = a2\n  2889: a2 = a1 << 0x1\n  2892: u64 [s1 + 0x48] = a2\n  2895: a3 = u64 [s1 + 0x68]\n  2898: t0 = a3 >> 0x3f\n  2901: a2 = a5 << 0x1\n  2904: u64 [s1 + 0x50] = a2\n  2907: a2 = a3 << 0x1\n  2910: jump @87 if a0 == 0\n      : @77 (gas: 14)\n  2914: u64 [s1 + 0x20] = a4\n  2917: u64 [s1 + 0x30] = t0\n  2920: u64 [s1 + 0x38] = ra\n  2923: u64 [s1 + 0x28] = t2\n  2926: u64 [s1 + 0x40] = a2\n  2929: a3 = a3 & 0xffffffffffffffe0\n  2932: u64 [s1 + 0x90] = a3\n  2936: u64 [s1 + 1080] = 0\n  2940: u64 [s1 + 1072] = 0\n  2944: u64 [s1 + 1064] = 0\n  2948: a1 = s1 + 0x420\n  2952: u64 [s1 + 1056] = 0x3\n  2957: a0 = 0\n  2959: ra = 42, jump @19\n      : @78 [@dyn 21] (gas: 7)\n  2964: a0 = sp + 0xffffffffffffffe0\n  2967: a0 = a0 & 0xffffffffffffffe0\n  2970: u64 [s1 + 0xf0] = a0\n  2974: sp = a0\n  2976: a1 = 0x20\n  2979: a0 = 0\n  2981: ra = 44, jump @26\n      : @79 [@dyn 22] (gas: 1)\n  2986: t0 = 46, jump @755\n      : @80 [@dyn 23] (gas: 5)\n  2991: ecalli 6 // 'hash_keccak_256'\n  2993: u64 [s1 + 280] = 0x20\n  2998: a5 = 0\n  3000: u64 [s1 + 272] = 0\n  3004: t0 = 48, jump @743\n      : @81 [@dyn 24] (gas: 15)\n  3009: t0 = u64 [a3]\n  3011: t1 = reverse a0\n  3013: a1 = reverse a1\n  3015: a3 = reverse a2\n  3017: a2 = reverse t0\n  3019: t0 = a2\n  3021: a0 = u64 [s1 + 0xf0]\n  3025: u64 [a0 + 0x18] = a2\n  3028: u64 [s1 + 0xd0] = a3\n  3032: u64 [a0 + 0x10] = a3\n  3035: u64 [s1 + 0xe8] = a1\n  3039: u64 [a0 + 0x8] = a1\n  3042: a3 = t1\n  3044: u64 [a0] = t1\n  3046: fallthrough\n      : @82 (gas: 25)\n  3047: t2 = t0\n  3049: t1 = a3\n  3051: a0 = u64 [s1 + 0x90]\n  3055: u64 [s1 + 0xe0] = a4\n  3059: a0 = a4 <u a0\n  3062: a4 = a0 ^ 0x1\n  3065: u64 [s1 + 0xd8] = ra\n  3069: a4 = 0x1 if ra != 0\n  3072: a0 = u64 [s1 + 0x100]\n  3076: a2 = u64 [s1 + 0xf8]\n  3080: a0 = a0 | a2\n  3083: a4 = 0x1 if a0 != 0\n  3086: a1 = u64 [s1 + 0xb0]\n  3090: a0 = u64 [s1 + 0x118]\n  3094: a1 = a1 + a0\n  3097: a3 = u64 [s1 + 0xa8]\n  3101: t0 = a5\n  3103: a3 = a3 + a5\n  3106: a2 = u64 [s1 + 0x98]\n  3110: a0 = u64 [s1 + 0x110]\n  3114: a2 = a2 + a0\n  3117: a0 = u64 [s1 + 0xa0]\n  3121: a5 = u64 [s1 + 0x108]\n  3125: a0 = a0 + a5\n  3128: jump @89 if a4 != 0\n      : @83 (gas: 23)\n  3132: a4 = u64 [s1 + 0x118]\n  3136: a4 = a1 <u a4\n  3139: ra = a3 + a4\n  3142: a3 = t0\n  3144: t0 = ra ^ t0\n  3147: a5 = ra <u a3\n  3150: a5 = a4 if t0 == 0\n  3153: a5 = a5 + a2\n  3156: t0 = a5 <u a2\n  3159: a4 = u64 [s1 + 0x110]\n  3163: a2 = a2 <u a4\n  3166: a0 = a0 + a2\n  3169: a0 = a0 + t0\n  3172: a2 = a1 | a5\n  3175: a0 = ra | a0\n  3178: a2 = a2 | a0\n  3181: a2 = a2 >> 0x20\n  3184: a0 = a0 | a5\n  3187: a0 = a0 << 0x20\n  3190: a0 = a0 | a2\n  3193: u64 [s1 + 0xc8] = t1\n  3197: u64 [s1 + 0xc0] = t2\n  3201: jump @176 if a0 != 0\n      : @84 (gas: 3)\n  3205: a0 = s1 + 0x1a0\n  3209: u64 [s1 + 0xb8] = a3\n  3213: ra = 50, jump @17\n      : @85 [@dyn 25] (gas: 12)\n  3218: a0 = u64 [s1 + 0x1b8]\n  3222: a1 = u64 [s1 + 0x1b0]\n  3226: a2 = u64 [s1 + 0x1a8]\n  3230: a3 = u64 [s1 + 0x1a0]\n  3234: a4 = s1 + 0x600\n  3238: u64 [a4 + 0x98] = a0\n  3242: u64 [a4 + 0x90] = a1\n  3246: u64 [a4 + 0x88] = a2\n  3250: u64 [a4 + 0x80] = a3\n  3254: a1 = s1 + 0x680\n  3258: a0 = u64 [s1 + 0xf0]\n  3262: ra = 52, jump @22\n      : @86 [@dyn 26] (gas: 57)\n  3267: ra = u64 [s1 + 0xc8]\n  3271: ra = ra + 0x1\n  3274: a0 = ra <u 0x1\n  3277: t0 = u64 [s1 + 0xe8]\n  3281: t0 = t0 + a0\n  3284: a0 = ra | t0\n  3287: a0 = a0 <u 0x1\n  3290: a1 = u64 [s1 + 0xd0]\n  3294: t1 = a1 + a0\n  3297: a1 = t1 <u a1\n  3300: a0 = u64 [s1 + 0xc0]\n  3304: a0 = a0 + a1\n  3307: a1 = u64 [s1 + 0x118]\n  3311: a2 = a1 + 0x20\n  3314: u64 [s1 + 0xc8] = a2\n  3318: a3 = a2 <u a1\n  3321: a1 = u64 [s1 + 0xb8]\n  3325: a2 = a1 + a3\n  3328: u64 [s1 + 0xc0] = a2\n  3332: a4 = a2 <u a1\n  3335: a4 = a3 if a3 == 0\n  3338: a1 = u64 [s1 + 0x110]\n  3342: t2 = a1 + a4\n  3345: a4 = t2 <u a1\n  3348: a1 = u64 [s1 + 0x108]\n  3352: a1 = a1 + a4\n  3355: u64 [s1 + 0x108] = a1\n  3359: a1 = u64 [s1 + 0xe0]\n  3363: a4 = a1 + 0x20\n  3366: a5 = a4 <u a1\n  3369: a2 = u64 [s1 + 0xd8]\n  3373: a1 = a2 + a5\n  3376: a2 = a1 <u a2\n  3379: a2 = a5 if a5 == 0\n  3382: a3 = u64 [s1 + 0xf8]\n  3386: a2 = a2 + a3\n  3389: a5 = a2 <u a3\n  3392: a3 = u64 [s1 + 0x100]\n  3396: a3 = a3 + a5\n  3399: u64 [s1 + 0x100] = a3\n  3403: a3 = t0\n  3405: u64 [s1 + 0xe8] = a3\n  3409: a5 = u64 [s1 + 0xf0]\n  3413: u64 [a5 + 0x8] = a3\n  3416: a3 = ra\n  3418: u64 [a5] = ra\n  3420: u64 [a5 + 0x10] = t1\n  3423: t0 = a0\n  3425: u64 [a5 + 0x18] = a0\n  3428: u64 [s1 + 0xd0] = t1\n  3432: a0 = u64 [s1 + 0xc8]\n  3436: u64 [s1 + 0x118] = a0\n  3440: a5 = u64 [s1 + 0xc0]\n  3444: u64 [s1 + 0x110] = t2\n  3448: ra = a1\n  3450: u64 [s1 + 0xf8] = a2\n  3454: jump @82\n      : @87 (gas: 7)\n  3457: a0 = a3 | a1\n  3460: a0 = a0 | a4\n  3463: a4 = u64 [s1 + 0xb0]\n  3467: t1 = u64 [s1 + 0xa8]\n  3471: a1 = u64 [s1 + 0xa0]\n  3475: a5 = u64 [s1 + 0x98]\n  3479: jump @102 if a0 != 0\n      : @88 (gas: 6)\n  3483: u64 [s1 + 0x40] = a2\n  3486: u64 [s1 + 256] = 0\n  3490: u64 [s1 + 248] = 0\n  3494: u64 [s1 + 264] = 0\n  3498: u64 [s1 + 272] = 0\n  3502: jump @105\n      : @89 (gas: 11)\n  3505: ra = t0\n  3507: t1 = u64 [s1 + 0x68]\n  3510: a4 = u64 [s1 + 0x90]\n  3514: a4 = a4 ^ t1\n  3517: a5 = u64 [s1 + 0x60]\n  3520: a4 = a4 | a5\n  3523: a5 = u64 [s1 + 0x20]\n  3526: a4 = a4 | a5\n  3529: a5 = u64 [s1 + 0x38]\n  3532: t0 = u64 [s1 + 0x30]\n  3535: jump @101 if a4 == 0\n      : @90 (gas: 13)\n  3539: a4 = u64 [s1 + 0x118]\n  3543: a4 = a1 <u a4\n  3546: a3 = a3 + a4\n  3549: t0 = a3 ^ ra\n  3552: a5 = a3 <u ra\n  3555: a5 = a4 if t0 == 0\n  3558: a5 = a5 + a2\n  3561: t0 = a5 <u a2\n  3564: a4 = u64 [s1 + 0x110]\n  3568: a2 = a2 <u a4\n  3571: a0 = a0 + a2\n  3574: a0 = a0 + t0\n  3577: t0 = 54, jump @742\n      : @91 [@dyn 27] (gas: 1)\n  3582: jump @176 if a0 != 0\n      : @92 (gas: 2)\n  3586: a0 = s1 + 0x400\n  3590: ra = 56, jump @17\n      : @93 [@dyn 28] (gas: 11)\n  3595: a1 = s1 + 0x400\n  3599: a0 = u64 [a1 + 0x18]\n  3602: u64 [s1 + 0x110] = a0\n  3606: a0 = u64 [a1 + 0x10]\n  3609: u64 [s1 + 0x108] = a0\n  3613: a0 = u64 [a1 + 0x8]\n  3616: u64 [s1 + 0x100] = a0\n  3620: a0 = u64 [a1]\n  3622: u64 [s1 + 0xf8] = a0\n  3626: a0 = u64 [s1 + 0x68]\n  3629: t0 = 58, jump @746\n      : @94 [@dyn 29] (gas: 1)\n  3634: ra = 60, jump @764\n      : @95 [@dyn 30] (gas: 6)\n  3639: u64 [s1 + 0xe8] = a0\n  3643: u64 [s1 + 0xd0] = a1\n  3647: a0 = 0xffffffffffffffff\n  3650: a1 = 0xffffffffffffffff\n  3653: a2 = u64 [s1 + 0x118]\n  3657: ra = 62, jump @759\n      : @96 [@dyn 31] (gas: 1)\n  3662: t0 = 64, jump @747\n      : @97 [@dyn 32] (gas: 1)\n  3667: ra = 66, jump @759\n      : @98 [@dyn 33] (gas: 1)\n  3672: t0 = 68, jump @733\n      : @99 [@dyn 34] (gas: 8)\n  3677: a4 = s1 + 0x600\n  3681: u64 [a4 + 0xb8] = a3\n  3685: u64 [a4 + 0xb0] = a2\n  3689: u64 [a4 + 0xa8] = a1\n  3693: u64 [a4 + 0xa0] = a0\n  3697: a1 = s1 + 0x6a0\n  3701: a0 = u64 [s1 + 0xf0]\n  3705: ra = 70, jump @22\n      : @100 [@dyn 35] (gas: 3)\n  3710: t0 = u64 [s1 + 0x30]\n  3713: a5 = u64 [s1 + 0x38]\n  3716: fallthrough\n      : @101 (gas: 22)\n  3717: a0 = u64 [s1 + 0x28]\n  3720: a0 = a0 | a5\n  3723: a1 = u64 [s1 + 0x58]\n  3726: a2 = u64 [s1 + 0x48]\n  3729: a1 = a1 | a2\n  3732: a2 = u64 [s1 + 0x50]\n  3735: a2 = a2 | t0\n  3738: a3 = u64 [s1 + 0x40]\n  3741: a3 = a3 + 0x1\n  3744: u64 [s1 + 1752] = 0\n  3748: u64 [s1 + 1744] = 0\n  3752: u64 [s1 + 1736] = 0\n  3756: a5 = s1 + 0x600\n  3760: u64 [a5 + 192] = 0x3\n  3765: u64 [a5 + 0xe0] = a3\n  3769: u64 [a5 + 0xe8] = a2\n  3773: u64 [a5 + 0xf0] = a1\n  3777: u64 [a5 + 0xf8] = a0\n  3781: a0 = s1 + 0x6c0\n  3785: a1 = s1 + 0x6e0\n  3789: ra = 0x56\n  3792: jump @22\n      : @102 (gas: 6)\n  3795: a0 = a5 | a1\n  3798: a1 = 0xffffffe0\n  3808: a1 = a4 <u a1\n  3811: a1 = 0 if t1 != 0\n  3813: a1 = 0 if a0 != 0\n  3815: jump @176 if a1 == 0\n      : @103 (gas: 7)\n  3819: u64 [s1 + 0x40] = a2\n  3822: i32 a1 = a4 + 0x20\n  3825: a0 = s1 + 0x440\n  3829: u64 [s1 + 0x28] = t2\n  3832: u64 [s1 + 0x38] = ra\n  3835: u64 [s1 + 0x30] = t0\n  3838: ra = 72, jump @17\n      : @104 [@dyn 36] (gas: 15)\n  3843: t0 = u64 [s1 + 0x30]\n  3846: ra = u64 [s1 + 0x38]\n  3849: t2 = u64 [s1 + 0x28]\n  3852: a3 = u64 [s1 + 0x68]\n  3855: a1 = s1 + 0x400\n  3859: a0 = u64 [a1 + 0x58]\n  3862: a2 = s1 + 0x100\n  3866: u64 [a2 + 0x10] = a0\n  3869: a0 = u64 [a1 + 0x50]\n  3872: u64 [a2 + 0x8] = a0\n  3875: a0 = u64 [a1 + 0x48]\n  3878: u64 [s1 + 0xf8] = a0\n  3882: a0 = u64 [a1 + 0x40]\n  3885: u64 [a2] = a0\n  3887: fallthrough\n      : @105 (gas: 10)\n  3888: a0 = u64 [s1 + 0x58]\n  3891: a1 = u64 [s1 + 0x48]\n  3894: a0 = a0 | a1\n  3897: u64 [s1 + 0xf0] = a0\n  3901: a0 = ra | t2\n  3904: u64 [s1 + 0xe8] = a0\n  3908: a0 = u64 [s1 + 0x50]\n  3911: a0 = a0 | t0\n  3914: u64 [s1 + 0xe0] = a0\n  3918: t0 = 74, jump @758\n      : @106 [@dyn 37] (gas: 1)\n  3923: ra = 76, jump @764\n      : @107 [@dyn 38] (gas: 7)\n  3928: u64 [s1 + 0xc0] = a0\n  3932: u64 [s1 + 0xd8] = a1\n  3936: a0 = u64 [s1 + 0x68]\n  3939: i32 a2 = a0 << 0x3\n  3942: a0 = 0xffffffffffffffff\n  3945: a1 = 0xffffffffffffffff\n  3948: ra = 78, jump @759\n      : @108 [@dyn 39] (gas: 10)\n  3953: u64 [s1 + 0xd0] = a0\n  3957: u64 [s1 + 0xc8] = a1\n  3961: a1 = u64 [s1 + 0xc0]\n  3965: a0 = a0 | a1\n  3968: u64 [s1 + 0xc0] = a0\n  3972: a0 = u64 [s1 + 0x118]\n  3976: i32 a2 = a0 + 0xffffffffffffff80\n  3979: a0 = 0xffffffffffffffff\n  3982: a1 = 0xffffffffffffffff\n  3985: ra = 80, jump @759\n      : @109 [@dyn 40] (gas: 7)\n  3990: a4 = u64 [s1 + 0x118]\n  3994: a2 = a4 <u 0x80\n  3998: a3 = u64 [s1 + 0xc0]\n  4002: a0 = a3 if a2 != 0\n  4005: a5 = u64 [s1 + 0xc8]\n  4009: a3 = u64 [s1 + 0xd8]\n  4013: t0 = 82, jump @748\n      : @110 [@dyn 41] (gas: 2)\n  4018: a4 = u64 [s1 + 0xd0]\n  4022: t0 = 84, jump @737\n      : @111 [@dyn 42] (gas: 20)\n  4027: a4 = u64 [s1 + 0x40]\n  4030: a0 = a0 | a4\n  4033: a4 = u64 [s1 + 0xe0]\n  4037: a1 = a1 | a4\n  4040: a4 = u64 [s1 + 0xe8]\n  4044: a3 = a3 | a4\n  4047: a4 = u64 [s1 + 0xf0]\n  4051: a2 = a2 | a4\n  4054: a5 = s1 + 0x700\n  4058: u64 [a5 + 0] = 0x3\n  4061: u64 [a5 + 0x30] = a2\n  4064: u64 [a5 + 0x38] = a3\n  4067: u64 [a5 + 0x28] = a1\n  4070: u64 [a5 + 0x20] = a0\n  4073: u64 [s1 + 1816] = 0\n  4077: u64 [s1 + 1808] = 0\n  4081: u64 [s1 + 1800] = 0\n  4085: a0 = s1 + 0x700\n  4089: a1 = s1 + 0x720\n  4093: ra = 86, jump @22\n      : @112 [@dyn 43] (gas: 12)\n  4098: a1 = u64 [s1 + 0x88]\n  4102: a4 = u64 [s1 + 0x70]\n  4105: a0 = a1 | a4\n  4108: a2 = u64 [s1 + 0x80]\n  4112: a3 = u64 [s1 + 0x78]\n  4115: a2 = a2 | a3\n  4118: a0 = a0 | a2\n  4121: a0 = a0 >> 0x20\n  4124: a2 = a2 | a4\n  4127: a2 = a2 << 0x20\n  4130: a0 = a0 | a2\n  4133: jump @176 if a0 != 0\n      : @113 (gas: 2)\n  4137: a0 = s1 + 0x3e0\n  4141: ra = 88, jump @17\n      : @114 [@dyn 44] (gas: 17)\n  4146: a0 = s1 + 0x300\n  4150: a3 = u64 [a0 + 0xf8]\n  4154: a2 = u64 [a0 + 0xf0]\n  4158: a1 = u64 [a0 + 0xe8]\n  4162: a0 = a3 >u 0\n  4164: a4 = a2 >u 0\n  4166: a4 = a0 if a3 != 0\n  4169: u64 [s1 + 0xa0] = a1\n  4173: a0 = a1 >u 0\n  4175: u64 [s1 + 0x98] = a2\n  4179: u64 [s1 + 0x90] = a3\n  4183: a2 = a2 | a3\n  4186: u64 [s1 + 0xb8] = a0\n  4190: u64 [s1 + 0xc0] = a4\n  4194: u64 [s1 + 0xd0] = a2\n  4198: a0 = a4 if a2 != 0\n  4201: jump @193 if a0 != 0\n      : @115 (gas: 9)\n  4205: a0 = u64 [s1 + 0x3e0]\n  4209: u64 [s1 + 0xa8] = a0\n  4213: u64 [s1 + 1880] = 0\n  4217: u64 [s1 + 1872] = 0\n  4221: u64 [s1 + 1864] = 0\n  4225: u64 [s1 + 1856] = 0x4\n  4230: a0 = s1 + 0x3c0\n  4234: a1 = s1 + 0x740\n  4238: ra = 90, jump @21\n      : @116 [@dyn 45] (gas: 6)\n  4243: a4 = s1 + 0x300\n  4247: a0 = u64 [a4 + 0xd0]\n  4251: a1 = u64 [a4 + 0xc8]\n  4255: a2 = u64 [a4 + 0xc0]\n  4259: a3 = u64 [a4 + 0xd8]\n  4263: t0 = 92, jump @735\n      : @117 [@dyn 46] (gas: 12)\n  4268: t0 = a2 <u 0x1\n  4271: ra = a1 & 0x7f\n  4274: t2 = a5 & a0\n  4277: a4 = a5 & t1\n  4280: ra = a1 if a2 != 0\n  4283: a1 = ra <u 0x20\n  4286: a5 = a5 & a3\n  4289: a2 = a1\n  4291: a2 = 0 if a4 != 0\n  4293: a0 = t2 | a5\n  4296: a2 = 0 if a0 != 0\n  4298: jump @199 if t0 != a2\n      : @118 (gas: 1)\n  4302: t0 = 94, jump @740\n      : @119 [@dyn 47] (gas: 4)\n  4307: a0 = u64 [s1 + 0xa8]\n  4311: a0 = a0 <u 0x20\n  4314: u64 [s1 + 0xc8] = a0\n  4318: jump @128 if a3 == 0\n      : @120 (gas: 11)\n  4322: u64 [s1 + 0xf0] = a4\n  4326: u64 [s1 + 0xf8] = ra\n  4330: u64 [s1 + 0x100] = a5\n  4334: u64 [s1 + 0x110] = t2\n  4338: u64 [s1 + 952] = 0\n  4342: u64 [s1 + 944] = 0\n  4346: u64 [s1 + 936] = 0\n  4350: a1 = s1 + 0x3a0\n  4354: u64 [s1 + 928] = 0x4\n  4359: a0 = 0\n  4361: ra = 96, jump @19\n      : @121 [@dyn 48] (gas: 2)\n  4366: a1 = i32 [0x200e4]\n  4371: jump @123 if a1 >u 31\n      : @122 (gas: 2)\n  4375: u32 [0x200e4] = 0x20\n  4381: fallthrough\n      : @123 (gas: 87)\n  4382: a0 = sp + 0xffffffffffffffe0\n  4385: a2 = a0 & 0xffffffffffffffe0\n  4388: u64 [s1 + 0x108] = a2\n  4392: sp = a2\n  4394: a0 = 0x200f0\n  4399: i32 a0 = a0 + 0\n  4401: i32 a2 = a2 + 0\n  4403: a1 = 0x20\n  4406: ecalli 6 // 'hash_keccak_256'\n  4408: a0 = u64 [s1 + 0xa8]\n  4412: a1 = a0 + 0x1f\n  4415: a0 = a1 <u a0\n  4418: a5 = u64 [s1 + 0xa0]\n  4422: a2 = a5 + a0\n  4425: a3 = a2 <u a5\n  4428: a3 = a0 if a0 == 0\n  4431: a4 = u64 [s1 + 0x98]\n  4435: a3 = a3 + a4\n  4438: u64 [s1 + 0xe8] = a3\n  4442: a3 = a3 << 0x3b\n  4445: a4 = a2 >> 0x5\n  4448: a4 = a4 | a3\n  4451: a0 = u64 [s1 + 0x108]\n  4455: t0 = u64 [a0 + 0x18]\n  4458: a2 = a2 << 0x3b\n  4461: a0 = u64 [a0 + 0x10]\n  4464: a1 = a1 >> 0x5\n  4467: a2 = a2 | a1\n  4470: t2 = reverse t0\n  4472: a0 = reverse a0\n  4474: a1 = u64 [s1 + 0xc8]\n  4478: a1 = 0 if a5 != 0\n  4480: a3 = u64 [s1 + 0xd0]\n  4484: a1 = 0 if a3 != 0\n  4486: a4 = 0 if a1 != 0\n  4488: a2 = 0 if a1 != 0\n  4490: t0 = t2 + a2\n  4493: a2 = t0 <u t2\n  4496: a5 = a0 + a2\n  4499: a4 = a4 + a5\n  4502: u64 [s1 + 0x118] = a4\n  4506: a5 = a4 ^ a0\n  4509: a3 = a4 <u a0\n  4512: a3 = a2 if a5 == 0\n  4515: u64 [s1 + 0xe0] = a3\n  4519: a2 = u64 [s1 + 0xf8]\n  4523: ra = a2 + 0x1f\n  4526: a4 = ra <u a2\n  4529: a3 = u64 [s1 + 0xf0]\n  4533: a2 = a3 + a4\n  4536: a5 = a2 <u a3\n  4539: a5 = a4 if a4 == 0\n  4542: t1 = u64 [s1 + 0x110]\n  4546: t1 = t1 + a5\n  4549: a4 = t1 << 0x3b\n  4552: a3 = a2 >> 0x5\n  4555: a3 = a3 | a4\n  4558: a2 = a2 << 0x3b\n  4561: a4 = ra >> 0x5\n  4564: a2 = a2 | a4\n  4567: a2 = a2 + t2\n  4570: u64 [s1 + 0xf8] = a2\n  4574: a4 = a2 <u t2\n  4577: t2 = t0\n  4579: a2 = a0 + a4\n  4582: a2 = a2 + a3\n  4585: a3 = a2 ^ a0\n  4588: u64 [s1 + 0xf0] = a2\n  4592: a2 = a2 <u a0\n  4595: a2 = a4 if a3 == 0\n  4598: a4 = u64 [s1 + 0xe8]\n  4602: a0 = u64 [s1 + 0x98]\n  4606: a0 = a4 <u a0\n  4609: a3 = u64 [s1 + 0x90]\n  4613: a0 = a0 + a3\n  4616: a3 = a4 >> 0x5\n  4619: a4 = a0 << 0x3b\n  4622: a3 = a3 | a4\n  4625: a4 = u64 [s1 + 0x108]\n  4629: t0 = u64 [a4]\n  4631: a4 = u64 [a4 + 0x8]\n  4634: a0 = a0 >> 0x5\n  4637: a3 = 0 if a1 != 0\n  4639: a0 = 0 if a1 != 0\n  4641: a1 = reverse a4\n  4643: a4 = reverse t0\n  4645: t0 = 98, jump @756\n      : @124 [@dyn 49] (gas: 24)\n  4650: t0 = a0 + a3\n  4653: a0 = u64 [s1 + 0x110]\n  4657: a0 = t1 <u a0\n  4660: a3 = u64 [s1 + 0x100]\n  4664: a0 = a0 + a3\n  4667: a3 = t1 >> 0x5\n  4670: a5 = a0 << 0x3b\n  4673: a3 = a3 | a5\n  4676: a0 = a0 >> 0x5\n  4679: a0 = a0 + a4\n  4682: a4 = u64 [s1 + 0x118]\n  4686: a3 = a3 + a1\n  4689: a1 = a3 <u a1\n  4692: a0 = a0 + a1\n  4695: a2 = a2 + a3\n  4698: u64 [s1 + 0xe8] = a2\n  4702: a1 = a2 <u a3\n  4705: a0 = a0 + a1\n  4708: u64 [s1 + 0xe0] = a0\n  4712: a0 = sp + 0xffffffffffffffe0\n  4715: t1 = a0 & 0xffffffffffffffe0\n  4718: sp = t1\n  4720: u64 [s1 + 0xd8] = t1\n  4724: fallthrough\n      : @125 (gas: 20)\n  4725: a0 = u64 [s1 + 0xf8]\n  4729: a0 = t2 <u a0\n  4732: a2 = u64 [s1 + 0xf0]\n  4736: a1 = a4 ^ a2\n  4739: a2 = a4 <u a2\n  4742: a2 = a0 if a1 == 0\n  4745: a5 = u64 [s1 + 0xe8]\n  4749: a0 = ra <u a5\n  4752: a3 = u64 [s1 + 0xe0]\n  4756: a1 = t0 ^ a3\n  4759: a3 = t0 <u a3\n  4762: a3 = a0 if a1 == 0\n  4765: a0 = ra ^ a5\n  4768: a0 = a0 | a1\n  4771: a3 = a2 if a0 == 0\n  4774: u64 [t1] = t2\n  4776: u64 [t1 + 0x8] = a4\n  4779: u64 [t1 + 0x10] = ra\n  4782: u64 [t1 + 0x18] = t0\n  4785: jump @128 if a3 == 0\n      : @126 (gas: 11)\n  4788: u64 [s1 + 1912] = 0\n  4792: u64 [s1 + 1904] = 0\n  4796: u64 [s1 + 1896] = 0\n  4800: u64 [s1 + 1888] = 0\n  4804: a1 = s1 + 0x760\n  4808: a0 = t1\n  4810: u64 [s1 + 0x110] = t2\n  4814: u64 [s1 + 0x118] = a4\n  4818: u64 [s1 + 0x108] = t0\n  4822: u64 [s1 + 0x100] = ra\n  4826: ra = 100, jump @22\n      : @127 [@dyn 50] (gas: 15)\n  4831: t1 = u64 [s1 + 0xd8]\n  4835: t0 = u64 [s1 + 0x108]\n  4839: a4 = u64 [s1 + 0x118]\n  4843: t2 = u64 [s1 + 0x110]\n  4847: t2 = t2 + 0x1\n  4850: a0 = t2 <u 0x1\n  4853: a4 = a4 + a0\n  4856: a0 = t2 | a4\n  4859: a0 = a0 <u 0x1\n  4862: a1 = u64 [s1 + 0x100]\n  4866: a0 = a0 + a1\n  4869: a1 = a0 <u a1\n  4872: t0 = t0 + a1\n  4875: ra = a0\n  4877: jump @125\n      : @128 (gas: 9)\n  4880: a0 = u64 [s1 + 0xc8]\n  4884: a0 = a0 ^ 0x1\n  4887: a4 = u64 [s1 + 0xa0]\n  4891: a1 = u64 [s1 + 0xb8]\n  4895: a0 = a1 if a4 != 0\n  4898: a1 = u64 [s1 + 0xc0]\n  4902: a2 = u64 [s1 + 0xd0]\n  4906: a0 = a1 if a2 != 0\n  4909: jump @140 if a0 == 0\n      : @129 (gas: 10)\n  4913: a0 = u64 [s1 + 0xa8]\n  4917: a0 = a0 & 0xffffffffffffffe0\n  4920: u64 [s1 + 0xb0] = a0\n  4924: u64 [s1 + 888] = 0\n  4928: u64 [s1 + 880] = 0\n  4932: u64 [s1 + 872] = 0\n  4936: a1 = s1 + 0x360\n  4940: u64 [s1 + 864] = 0x4\n  4945: a0 = 0\n  4947: ra = 102, jump @19\n      : @130 [@dyn 51] (gas: 7)\n  4952: a0 = sp + 0xffffffffffffffe0\n  4955: a0 = a0 & 0xffffffffffffffe0\n  4958: u64 [s1 + 0xf0] = a0\n  4962: sp = a0\n  4964: a1 = 0x20\n  4967: a0 = 0\n  4969: ra = 104, jump @26\n      : @131 [@dyn 52] (gas: 1)\n  4974: t0 = 106, jump @755\n      : @132 [@dyn 53] (gas: 5)\n  4979: ecalli 6 // 'hash_keccak_256'\n  4981: u64 [s1 + 272] = 0x20\n  4986: a5 = 0\n  4988: u64 [s1 + 280] = 0\n  4992: t0 = 108, jump @743\n      : @133 [@dyn 54] (gas: 15)\n  4997: t0 = u64 [a3]\n  4999: t1 = reverse a0\n  5001: a1 = reverse a1\n  5003: a3 = reverse a2\n  5005: a2 = reverse t0\n  5007: t0 = a2\n  5009: a0 = u64 [s1 + 0xf0]\n  5013: u64 [a0 + 0x18] = a2\n  5016: u64 [s1 + 0xc8] = a3\n  5020: u64 [a0 + 0x10] = a3\n  5023: u64 [s1 + 0xe0] = a1\n  5027: u64 [a0 + 0x8] = a1\n  5030: a3 = t1\n  5032: u64 [a0] = t1\n  5034: fallthrough\n      : @134 (gas: 26)\n  5035: t1 = t0\n  5037: t2 = a3\n  5039: a0 = u64 [s1 + 0xb0]\n  5043: u64 [s1 + 0xd8] = a4\n  5047: a0 = a4 <u a0\n  5050: a4 = a0 ^ 0x1\n  5053: u64 [s1 + 0xd0] = ra\n  5057: a4 = 0x1 if ra != 0\n  5060: a0 = u64 [s1 + 0x100]\n  5064: a2 = u64 [s1 + 0xf8]\n  5068: a0 = a0 | a2\n  5071: a4 = 0x1 if a0 != 0\n  5074: a1 = u64 [s1 + 0x88]\n  5078: ra = u64 [s1 + 0x110]\n  5082: a1 = a1 + ra\n  5085: a3 = u64 [s1 + 0x80]\n  5089: t0 = a5\n  5091: a3 = a3 + a5\n  5094: a2 = u64 [s1 + 0x70]\n  5097: a0 = u64 [s1 + 0x118]\n  5101: a2 = a2 + a0\n  5104: a0 = u64 [s1 + 0x78]\n  5107: a5 = u64 [s1 + 0x108]\n  5111: a0 = a0 + a5\n  5114: u64 [s1 + 0xe8] = t0\n  5118: jump @142 if a4 != 0\n      : @135 (gas: 13)\n  5122: a4 = a1 <u ra\n  5125: a3 = a3 + a4\n  5128: a5 = t0\n  5130: t0 = a3 ^ t0\n  5133: a5 = a3 <u a5\n  5136: a5 = a4 if t0 == 0\n  5139: a5 = a5 + a2\n  5142: t0 = a5 <u a2\n  5145: a4 = u64 [s1 + 0x118]\n  5149: a2 = a2 <u a4\n  5152: a0 = a0 + a2\n  5155: a0 = a0 + t0\n  5158: t0 = 110, jump @742\n      : @136 [@dyn 55] (gas: 3)\n  5163: u64 [s1 + 0xc0] = t2\n  5167: u64 [s1 + 0xb8] = t1\n  5171: jump @176 if a0 != 0\n      : @137 (gas: 3)\n  5175: a0 = s1 + 0x240\n  5179: u64 [s1 + 0x110] = ra\n  5183: ra = 112, jump @17\n      : @138 [@dyn 56] (gas: 13)\n  5188: a4 = s1 + 0x200\n  5192: a0 = u64 [a4 + 0x58]\n  5195: a1 = u64 [a4 + 0x50]\n  5198: a2 = u64 [a4 + 0x48]\n  5201: a3 = u64 [a4 + 0x40]\n  5204: a4 = s1 + 0x700\n  5208: u64 [a4 + 0x98] = a0\n  5212: u64 [a4 + 0x90] = a1\n  5216: u64 [a4 + 0x88] = a2\n  5220: u64 [a4 + 0x80] = a3\n  5224: a1 = s1 + 0x780\n  5228: a0 = u64 [s1 + 0xf0]\n  5232: ra = 114, jump @22\n      : @139 [@dyn 57] (gas: 57)\n  5237: ra = u64 [s1 + 0xc0]\n  5241: ra = ra + 0x1\n  5244: a0 = ra <u 0x1\n  5247: t0 = u64 [s1 + 0xe0]\n  5251: t0 = t0 + a0\n  5254: a0 = ra | t0\n  5257: a0 = a0 <u 0x1\n  5260: a1 = u64 [s1 + 0xc8]\n  5264: t1 = a1 + a0\n  5267: a1 = t1 <u a1\n  5270: a0 = u64 [s1 + 0xb8]\n  5274: a0 = a0 + a1\n  5277: a1 = u64 [s1 + 0x110]\n  5281: a2 = a1 + 0x20\n  5284: u64 [s1 + 0xc0] = a2\n  5288: a3 = a2 <u a1\n  5291: a1 = u64 [s1 + 0xe8]\n  5295: a2 = a1 + a3\n  5298: u64 [s1 + 0xb8] = a2\n  5302: a4 = a2 <u a1\n  5305: a4 = a3 if a3 == 0\n  5308: a1 = u64 [s1 + 0x118]\n  5312: t2 = a1 + a4\n  5315: a4 = t2 <u a1\n  5318: a1 = u64 [s1 + 0x108]\n  5322: a1 = a1 + a4\n  5325: u64 [s1 + 0x108] = a1\n  5329: a1 = u64 [s1 + 0xd8]\n  5333: a4 = a1 + 0x20\n  5336: a5 = a4 <u a1\n  5339: a2 = u64 [s1 + 0xd0]\n  5343: a1 = a2 + a5\n  5346: a2 = a1 <u a2\n  5349: a2 = a5 if a5 == 0\n  5352: a3 = u64 [s1 + 0xf8]\n  5356: a2 = a2 + a3\n  5359: a5 = a2 <u a3\n  5362: a3 = u64 [s1 + 0x100]\n  5366: a3 = a3 + a5\n  5369: u64 [s1 + 0x100] = a3\n  5373: a3 = t0\n  5375: u64 [s1 + 0xe0] = a3\n  5379: a5 = u64 [s1 + 0xf0]\n  5383: u64 [a5 + 0x8] = a3\n  5386: a3 = ra\n  5388: u64 [a5] = ra\n  5390: u64 [a5 + 0x10] = t1\n  5393: t0 = a0\n  5395: u64 [a5 + 0x18] = a0\n  5398: u64 [s1 + 0xc8] = t1\n  5402: a0 = u64 [s1 + 0xc0]\n  5406: u64 [s1 + 0x110] = a0\n  5410: a5 = u64 [s1 + 0xb8]\n  5414: u64 [s1 + 0x118] = t2\n  5418: ra = a1\n  5420: u64 [s1 + 0xf8] = a2\n  5424: jump @134\n      : @140 (gas: 8)\n  5427: a3 = u64 [s1 + 0xa8]\n  5431: a5 = u64 [s1 + 0x98]\n  5435: a0 = a3 | a5\n  5438: a2 = u64 [s1 + 0x90]\n  5442: a1 = a4 | a2\n  5445: a0 = a0 | a1\n  5448: t0 = u64 [s1 + 0x88]\n  5452: jump @155 if a0 != 0\n      : @141 (gas: 5)\n  5456: u64 [s1 + 256] = 0\n  5460: u64 [s1 + 248] = 0\n  5464: u64 [s1 + 264] = 0\n  5468: u64 [s1 + 272] = 0\n  5472: jump @158\n      : @142 (gas: 10)\n  5475: t0 = u64 [s1 + 0xa8]\n  5479: a4 = u64 [s1 + 0xb0]\n  5483: a4 = a4 ^ t0\n  5486: t2 = u64 [s1 + 0x98]\n  5490: a4 = a4 | t2\n  5493: t1 = u64 [s1 + 0xa0]\n  5497: ra = u64 [s1 + 0x90]\n  5501: a5 = t1 | ra\n  5504: a4 = a4 | a5\n  5507: jump @154 if a4 == 0\n      : @143 (gas: 14)\n  5511: a4 = u64 [s1 + 0x110]\n  5515: a4 = a1 <u a4\n  5518: a3 = a3 + a4\n  5521: a5 = u64 [s1 + 0xe8]\n  5525: t0 = a3 ^ a5\n  5528: a5 = a3 <u a5\n  5531: a5 = a4 if t0 == 0\n  5534: a5 = a5 + a2\n  5537: t0 = a5 <u a2\n  5540: a4 = u64 [s1 + 0x118]\n  5544: a2 = a2 <u a4\n  5547: a0 = a0 + a2\n  5550: a0 = a0 + t0\n  5553: t0 = 116, jump @742\n      : @144 [@dyn 58] (gas: 1)\n  5558: jump @176 if a0 != 0\n      : @145 (gas: 2)\n  5562: a0 = s1 + 0x340\n  5566: ra = 118, jump @17\n      : @146 [@dyn 59] (gas: 11)\n  5571: a1 = s1 + 0x300\n  5575: a0 = u64 [a1 + 0x58]\n  5578: u64 [s1 + 0x110] = a0\n  5582: a0 = u64 [a1 + 0x50]\n  5585: u64 [s1 + 0x108] = a0\n  5589: a0 = u64 [a1 + 0x48]\n  5592: u64 [s1 + 0x100] = a0\n  5596: a0 = u64 [a1 + 0x40]\n  5599: u64 [s1 + 0xf8] = a0\n  5603: a0 = u64 [s1 + 0xa8]\n  5607: t0 = 120, jump @746\n      : @147 [@dyn 60] (gas: 1)\n  5612: ra = 122, jump @764\n      : @148 [@dyn 61] (gas: 6)\n  5617: u64 [s1 + 0xe8] = a0\n  5621: u64 [s1 + 0xd0] = a1\n  5625: a0 = 0xffffffffffffffff\n  5628: a1 = 0xffffffffffffffff\n  5631: a2 = u64 [s1 + 0x118]\n  5635: ra = 124, jump @759\n      : @149 [@dyn 62] (gas: 1)\n  5640: t0 = 126, jump @747\n      : @150 [@dyn 63] (gas: 1)\n  5645: ra = 128, jump @759\n      : @151 [@dyn 64] (gas: 1)\n  5651: t0 = 130, jump @733\n      : @152 [@dyn 65] (gas: 8)\n  5657: a4 = s1 + 0x700\n  5661: u64 [a4 + 0xb8] = a3\n  5665: u64 [a4 + 0xb0] = a2\n  5669: u64 [a4 + 0xa8] = a1\n  5673: u64 [a4 + 0xa0] = a0\n  5677: a1 = s1 + 0x7a0\n  5681: a0 = u64 [s1 + 0xf0]\n  5685: ra = 132, jump @22\n      : @153 [@dyn 66] (gas: 5)\n  5691: t0 = u64 [s1 + 0xa8]\n  5695: t1 = u64 [s1 + 0xa0]\n  5699: t2 = u64 [s1 + 0x98]\n  5703: ra = u64 [s1 + 0x90]\n  5707: fallthrough\n      : @154 (gas: 24)\n  5708: a0 = t2 >> 0x3f\n  5711: a1 = ra << 0x1\n  5714: a0 = a0 | a1\n  5717: a1 = t1 >> 0x3f\n  5720: a2 = t2 << 0x1\n  5723: a1 = a1 | a2\n  5726: a2 = t0 >> 0x3f\n  5729: a3 = t1 << 0x1\n  5732: a2 = a2 | a3\n  5735: a3 = t0 << 0x1\n  5738: a3 = a3 + 0x1\n  5741: u64 [s1 + 2008] = 0\n  5745: u64 [s1 + 2000] = 0\n  5749: u64 [s1 + 1992] = 0\n  5753: a5 = s1 + 0x700\n  5757: u64 [a5 + 192] = 0x4\n  5762: u64 [a5 + 0xe0] = a3\n  5766: u64 [a5 + 0xe8] = a2\n  5770: u64 [a5 + 0xf0] = a1\n  5774: u64 [a5 + 0xf8] = a0\n  5778: a0 = s1 + 0x7c0\n  5782: a1 = s1 + 0x7e0\n  5786: ra = 0x94\n  5790: jump @22\n      : @155 (gas: 9)\n  5793: a0 = u64 [s1 + 0x78]\n  5796: a1 = u64 [s1 + 0x70]\n  5799: a0 = a0 | a1\n  5802: a1 = 0xffffffe0\n  5812: a1 = t0 <u a1\n  5815: a3 = u64 [s1 + 0x80]\n  5819: a1 = 0 if a3 != 0\n  5821: a1 = 0 if a0 != 0\n  5823: jump @176 if a1 == 0\n      : @156 (gas: 3)\n  5827: i32 a1 = t0 + 0x20\n  5830: a0 = s1 + 0x380\n  5834: ra = 134, jump @17\n      : @157 [@dyn 67] (gas: 14)\n  5840: a2 = u64 [s1 + 0x90]\n  5844: a5 = u64 [s1 + 0x98]\n  5848: a4 = u64 [s1 + 0xa0]\n  5852: a3 = u64 [s1 + 0xa8]\n  5856: a1 = s1 + 0x300\n  5860: a0 = u64 [a1 + 0x98]\n  5864: u64 [s1 + 0x110] = a0\n  5868: a0 = u64 [a1 + 0x90]\n  5872: u64 [s1 + 0x108] = a0\n  5876: a0 = u64 [a1 + 0x88]\n  5880: u64 [s1 + 0xf8] = a0\n  5884: a0 = u64 [a1 + 0x80]\n  5888: u64 [s1 + 0x100] = a0\n  5892: fallthrough\n      : @158 (gas: 15)\n  5893: a0 = a4 >> 0x3f\n  5896: a1 = a5 << 0x1\n  5899: a0 = a0 | a1\n  5902: u64 [s1 + 0xf0] = a0\n  5906: a0 = a5 >> 0x3f\n  5909: a1 = a2 << 0x1\n  5912: a0 = a0 | a1\n  5915: u64 [s1 + 0xe8] = a0\n  5919: a0 = a3 >> 0x3f\n  5922: a1 = a4 << 0x1\n  5925: a0 = a0 | a1\n  5928: u64 [s1 + 0xe0] = a0\n  5932: a0 = a3 << 0x1\n  5935: u64 [s1 + 0xd8] = a0\n  5939: t0 = 136, jump @758\n      : @159 [@dyn 68] (gas: 1)\n  5945: ra = 138, jump @764\n      : @160 [@dyn 69] (gas: 7)\n  5951: u64 [s1 + 0xb8] = a0\n  5955: u64 [s1 + 0xd0] = a1\n  5959: a0 = u64 [s1 + 0xa8]\n  5963: i32 a2 = a0 << 0x3\n  5966: a0 = 0xffffffffffffffff\n  5969: a1 = 0xffffffffffffffff\n  5972: ra = 140, jump @759\n      : @161 [@dyn 70] (gas: 10)\n  5978: u64 [s1 + 0xc8] = a0\n  5982: u64 [s1 + 0xc0] = a1\n  5986: a1 = u64 [s1 + 0xb8]\n  5990: a0 = a0 | a1\n  5993: u64 [s1 + 0xb8] = a0\n  5997: a0 = u64 [s1 + 0x118]\n  6001: i32 a2 = a0 + 0xffffffffffffff80\n  6004: a0 = 0xffffffffffffffff\n  6007: a1 = 0xffffffffffffffff\n  6010: ra = 142, jump @759\n      : @162 [@dyn 71] (gas: 7)\n  6016: a4 = u64 [s1 + 0x118]\n  6020: a2 = a4 <u 0x80\n  6024: a3 = u64 [s1 + 0xb8]\n  6028: a0 = a3 if a2 != 0\n  6031: a5 = u64 [s1 + 0xc0]\n  6035: a3 = u64 [s1 + 0xd0]\n  6039: t0 = 144, jump @748\n      : @163 [@dyn 72] (gas: 2)\n  6045: a4 = u64 [s1 + 0xc8]\n  6049: t0 = 146, jump @737\n      : @164 [@dyn 73] (gas: 29)\n  6055: a4 = u64 [s1 + 0xd8]\n  6059: a0 = a0 | a4\n  6062: a4 = u64 [s1 + 0xe0]\n  6066: a1 = a1 | a4\n  6069: a4 = u64 [s1 + 0xe8]\n  6073: a3 = a3 | a4\n  6076: a4 = u64 [s1 + 0xf0]\n  6080: a2 = a2 | a4\n  6083: a5 = s1 + 0x1000\n  6087: u64 [a5 + 4294965248] = 0x4\n  6092: a4 = s1 + 0x1000\n  6096: u64 [a4 + 0xfffffffffffff830] = a2\n  6100: a2 = s1 + 0x1000\n  6104: u64 [a2 + 0xfffffffffffff838] = a3\n  6108: a2 = s1 + 0x1000\n  6112: u64 [a2 + 0xfffffffffffff828] = a1\n  6116: a1 = s1 + 0x1000\n  6120: u64 [a1 + 0xfffffffffffff820] = a0\n  6124: a0 = s1 + 0x1000\n  6128: u64 [a0 + 4294965272] = 0\n  6132: a0 = s1 + 0x1000\n  6136: u64 [a0 + 4294965264] = 0\n  6140: a0 = s1 + 0x1000\n  6144: u64 [a0 + 4294965256] = 0\n  6148: a0 = s1 + 0x7ff\n  6152: a0 = a0 + 0x1\n  6155: a1 = s1 + 0x7ff\n  6159: a1 = a1 + 0x21\n  6162: ra = 148, jump @22\n      : @165 [@dyn 74] (gas: 6)\n  6168: a0 = 0x300f0\n  6173: u64 [s1 + 0x118] = a0\n  6177: i32 a0 = a0 + 0\n  6179: u64 [s1 + 0x110] = a0\n  6183: ecalli 3 // 'caller'\n  6185: fallthrough\n      : @166 (gas: 7)\n  6186: a2 = u64 [s1 + 0x118]\n  6190: a0 = u32 [a2 + 0x10]\n  6193: a1 = u64 [a2]\n  6195: a2 = u64 [a2 + 0x8]\n  6198: a0 = a0 | a1\n  6201: a0 = a0 | a2\n  6204: jump @205 if a0 == 0\n      : @167 (gas: 12)\n  6208: a0 = s1 + 0x1000\n  6212: u64 [a0 + 4294965336] = 0\n  6216: a0 = s1 + 0x1000\n  6220: u64 [a0 + 4294965328] = 0\n  6224: a0 = s1 + 0x1000\n  6228: u64 [a0 + 4294965320] = 0\n  6232: a1 = s1 + 0x1000\n  6236: u64 [a1 + 4294965312] = 0x5\n  6241: a0 = s1 + 0x320\n  6245: a1 = s1 + 0x7ff\n  6249: a1 = a1 + 0x41\n  6252: ra = 150, jump @21\n      : @168 [@dyn 75] (gas: 14)\n  6258: a0 = u64 [s1 + 0x320]\n  6262: u64 [s1 + 0x100] = a0\n  6266: a0 = u64 [s1 + 0x328]\n  6270: u64 [s1 + 0xf8] = a0\n  6274: a0 = u64 [s1 + 0x338]\n  6278: u64 [s1 + 0xf0] = a0\n  6282: a0 = u64 [s1 + 0x330]\n  6286: u64 [s1 + 0x108] = a0\n  6290: a0 = u64 [s1 + 0x110]\n  6294: ra = 0x98\n  6298: ecalli 3 // 'caller'\n  6300: a2 = u64 [s1 + 0x118]\n  6304: t0 = 0x9a\n  6308: jump @736\n      : @169 [@dyn 76] (gas: 2)\n  6311: a2 = u64 [s1 + 0x118]\n  6315: t0 = 154, jump @736\n      : @170 [@dyn 77] (gas: 26)\n  6321: a3 = u64 [s1 + 0x108]\n  6325: a3 = a3 >> 0x20\n  6328: a3 = a3 << 0x20\n  6331: a2 = a2 | a3\n  6334: a3 = s1 + 0x1000\n  6338: u64 [a3 + 4294965368] = 0\n  6342: a3 = s1 + 0x1000\n  6346: u64 [a3 + 4294965360] = 0\n  6350: a3 = s1 + 0x1000\n  6354: u64 [a3 + 4294965352] = 0\n  6358: a4 = s1 + 0x1000\n  6362: u64 [a4 + 4294965344] = 0x5\n  6367: a3 = s1 + 0x7ff\n  6371: a3 = a3 + 0x99\n  6375: a4 = u64 [s1 + 0xf0]\n  6379: u64 [a3] = a4\n  6381: u64 [a3 + 0xfffffffffffffff8] = a2\n  6384: a2 = s1 + 0x1000\n  6388: u64 [a2 + 0xfffffffffffff888] = a0\n  6392: a0 = s1 + 0x1000\n  6396: u64 [a0 + 0xfffffffffffff880] = a1\n  6400: a0 = s1 + 0x7ff\n  6404: a0 = a0 + 0x61\n  6407: a1 = s1 + 0x7ff\n  6411: a1 = a1 + 0x81\n  6415: ra = 156, jump @22\n      : @171 [@dyn 78] (gas: 3)\n  6421: a0 = s1 + 0x300\n  6425: a1 = 0x40\n  6428: ra = 158, jump @17\n      : @172 [@dyn 79] (gas: 13)\n  6434: a1 = s1 + 0x300\n  6438: a0 = u64 [a1 + 0x18]\n  6441: u64 [s1 + 0xf0] = a0\n  6445: a0 = u64 [a1 + 0x10]\n  6448: u64 [s1 + 0xe8] = a0\n  6452: a0 = u64 [a1 + 0x8]\n  6455: u64 [s1 + 0xe0] = a0\n  6459: a0 = u64 [a1]\n  6461: u64 [s1 + 0xd8] = a0\n  6465: a0 = u64 [s1 + 0x110]\n  6469: ra = 0xa0\n  6473: ecalli 3 // 'caller'\n  6475: fallthrough\n      : @173 [@dyn 80] (gas: 3)\n  6476: a4 = s1 + 0x100\n  6480: a2 = u64 [a4 + 0x18]\n  6483: t0 = 162, jump @753\n      : @174 [@dyn 81] (gas: 34)\n  6489: t0 = a1 | a0\n  6492: a3 = a3 >> 0x20\n  6495: a2 = reverse a2\n  6497: a1 = a2 << 0x20\n  6500: a1 = a1 | a3\n  6503: a2 = a2 >> 0x20\n  6506: a3 = u64 [a4 + 0x8]\n  6509: a3 = a3 << 0x20\n  6512: a3 = a3 >> 0x20\n  6515: u64 [s1 + 696] = 0\n  6519: u64 [s1 + 728] = 0\n  6523: u64 [s1 + 0x2d0] = a3\n  6527: a0 = u64 [s1 + 0xf8]\n  6531: u64 [s1 + 0x2c8] = a0\n  6535: a0 = u64 [a4]\n  6537: u64 [s1 + 0x2c0] = a0\n  6541: a3 = u64 [0x20000]\n  6546: a4 = u64 [0x20008]\n  6551: a5 = u64 [0x20010]\n  6556: a0 = u64 [0x20018]\n  6561: u64 [s1 + 0x2f8] = a3\n  6565: a3 = s1 + 0x200\n  6569: u64 [a3 + 0xf0] = a4\n  6573: u64 [a3 + 0xe8] = a5\n  6577: u64 [a3 + 0xe0] = a0\n  6581: u64 [a3 + 0xb0] = a2\n  6585: u64 [a3 + 0xa8] = a1\n  6589: a2 = s1 + 0x2e0\n  6593: a3 = s1 + 0x2c0\n  6597: a4 = s1 + 0x2a0\n  6601: u64 [s1 + 0x2a0] = t0\n  6605: a0 = 0\n  6607: a1 = 0\n  6609: ra = 164, jump @23\n      : @175 [@dyn 82] (gas: 13)\n  6615: a0 = u64 [s1 + 0xf0]\n  6619: a1 = u64 [s1 + 0xe0]\n  6623: a0 = a0 | a1\n  6626: a1 = u64 [s1 + 0xd8]\n  6630: a2 = a1\n  6632: a3 = u64 [s1 + 0xe8]\n  6636: a1 = a1 | a3\n  6639: a1 = a1 | a0\n  6642: a1 = a1 >> 0x20\n  6645: a0 = a0 | a3\n  6648: a0 = a0 << 0x20\n  6651: a0 = a0 | a1\n  6654: jump @211 if a0 == 0\n      : @176 (gas: 1)\n  6658: trap\n      : @177 (gas: 6)\n  6659: a1 = 0x200f0\n  6664: i32 a1 = a1 + 0\n  6666: a0 = 0x1\n  6669: a2 = 0\n  6671: ecalli 7 // 'seal_return'\n  6673: jump @181\n      : @178 (gas: 6)\n  6675: a1 = 0x200f0\n  6680: i32 a1 = a1 + 0\n  6682: a0 = 0x1\n  6685: a2 = 0\n  6687: ecalli 7 // 'seal_return'\n  6689: jump @181\n      : @179 (gas: 6)\n  6691: a1 = 0x200f0\n  6696: i32 a1 = a1 + 0\n  6698: a0 = 0x1\n  6701: a2 = 0\n  6703: ecalli 7 // 'seal_return'\n  6705: jump @181\n      : @180 (gas: 6)\n  6707: a1 = 0x200f0\n  6712: i32 a1 = a1 + 0\n  6714: a0 = 0x1\n  6717: a2 = 0\n  6719: ecalli 7 // 'seal_return'\n  6721: fallthrough\n      : @181 (gas: 6)\n  6722: u64 [s1 + 336] = 0\n  6726: u64 [s1 + 328] = 0\n  6730: u64 [s1 + 320] = 0\n  6734: t0 = 0xa6\n  6738: a0 = 0x4e487b7100000000\n  6748: fallthrough\n      : @182 [@dyn 83] (gas: 4)\n  6749: a1 = s1 + 0x140\n  6753: u64 [s1 + 0x158] = a0\n  6757: a0 = 0\n  6759: ra = 168, jump @19\n      : @183 [@dyn 84] (gas: 7)\n  6765: u64 [s1 + 312] = 0\n  6769: u64 [s1 + 304] = 0\n  6773: u64 [s1 + 288] = 0x41\n  6778: a0 = 0x4\n  6781: a1 = s1 + 0x120\n  6785: u64 [s1 + 296] = 0\n  6789: ra = 170, jump @19\n      : @184 [@dyn 85] (gas: 2)\n  6795: a1 = i32 [0x200e4]\n  6800: jump @186 if a1 >u 63\n      : @185 (gas: 3)\n  6804: u32 [0x200e4] = 0x40\n  6810: a1 = 0x200f0\n  6815: jump @210\n      : @186 (gas: 2)\n  6818: a1 = 0x200f0\n  6823: jump @210\n      : @187 (gas: 6)\n  6826: u64 [s1 + 400] = 0\n  6830: u64 [s1 + 392] = 0\n  6834: u64 [s1 + 384] = 0\n  6838: t0 = 0xac\n  6842: a0 = 0x4e487b7100000000\n  6852: fallthrough\n      : @188 [@dyn 86] (gas: 4)\n  6853: a1 = s1 + 0x180\n  6857: u64 [s1 + 0x198] = a0\n  6861: a0 = 0\n  6863: ra = 174, jump @19\n      : @189 [@dyn 87] (gas: 7)\n  6869: u64 [s1 + 376] = 0\n  6873: u64 [s1 + 368] = 0\n  6877: u64 [s1 + 352] = 0x22\n  6882: a0 = 0x4\n  6885: a1 = s1 + 0x160\n  6889: u64 [s1 + 360] = 0\n  6893: ra = 176, jump @19\n      : @190 [@dyn 88] (gas: 2)\n  6899: a1 = i32 [0x200e4]\n  6904: jump @192 if a1 >u 63\n      : @191 (gas: 3)\n  6908: u32 [0x200e4] = 0x40\n  6914: a1 = 0x200f0\n  6919: jump @210\n      : @192 (gas: 2)\n  6922: a1 = 0x200f0\n  6927: jump @210\n      : @193 (gas: 6)\n  6930: u64 [s1 + 496] = 0\n  6934: u64 [s1 + 488] = 0\n  6938: u64 [s1 + 480] = 0\n  6942: t0 = 0xb2\n  6946: a0 = 0x4e487b7100000000\n  6956: fallthrough\n      : @194 [@dyn 89] (gas: 4)\n  6957: a1 = s1 + 0x1e0\n  6961: u64 [s1 + 0x1f8] = a0\n  6965: a0 = 0\n  6967: ra = 180, jump @19\n      : @195 [@dyn 90] (gas: 7)\n  6973: u64 [s1 + 472] = 0\n  6977: u64 [s1 + 464] = 0\n  6981: u64 [s1 + 448] = 0x41\n  6986: a0 = 0x4\n  6989: a1 = s1 + 0x1c0\n  6993: u64 [s1 + 456] = 0\n  6997: ra = 182, jump @19\n      : @196 [@dyn 91] (gas: 2)\n  7003: a1 = i32 [0x200e4]\n  7008: jump @198 if a1 >u 63\n      : @197 (gas: 3)\n  7012: u32 [0x200e4] = 0x40\n  7018: a1 = 0x200f0\n  7023: jump @210\n      : @198 (gas: 2)\n  7026: a1 = 0x200f0\n  7031: jump @210\n      : @199 (gas: 6)\n  7034: u64 [s1 + 560] = 0\n  7038: u64 [s1 + 552] = 0\n  7042: u64 [s1 + 544] = 0\n  7046: t0 = 0xb8\n  7050: a0 = 0x4e487b7100000000\n  7060: fallthrough\n      : @200 [@dyn 92] (gas: 4)\n  7061: a1 = s1 + 0x220\n  7065: u64 [s1 + 0x238] = a0\n  7069: a0 = 0\n  7071: ra = 186, jump @19\n      : @201 [@dyn 93] (gas: 7)\n  7077: u64 [s1 + 536] = 0\n  7081: u64 [s1 + 528] = 0\n  7085: u64 [s1 + 512] = 0x22\n  7090: a0 = 0x4\n  7093: a1 = s1 + 0x200\n  7097: u64 [s1 + 520] = 0\n  7101: ra = 188, jump @19\n      : @202 [@dyn 94] (gas: 2)\n  7107: a1 = i32 [0x200e4]\n  7112: jump @204 if a1 >u 63\n      : @203 (gas: 3)\n  7116: u32 [0x200e4] = 0x40\n  7122: a1 = 0x200f0\n  7127: jump @210\n      : @204 (gas: 2)\n  7129: a1 = 0x200f0\n  7134: jump @210\n      : @205 (gas: 8)\n  7136: u64 [s1 + 656] = 0\n  7140: u64 [s1 + 648] = 0\n  7144: u64 [s1 + 640] = 0\n  7148: a0 = 0x1e4fbdf700000000\n  7158: a1 = s1 + 0x280\n  7162: u64 [s1 + 0x298] = a0\n  7166: a0 = 0\n  7168: ra = 190, jump @19\n      : @206 [@dyn 95] (gas: 7)\n  7174: u64 [s1 + 632] = 0\n  7178: u64 [s1 + 624] = 0\n  7182: u64 [s1 + 616] = 0\n  7186: a0 = 0x4\n  7189: a1 = s1 + 0x260\n  7193: u64 [s1 + 608] = 0\n  7197: ra = 192, jump @19\n      : @207 [@dyn 96] (gas: 2)\n  7203: a1 = i32 [0x200e4]\n  7208: jump @209 if a1 >u 63\n      : @208 (gas: 3)\n  7212: u32 [0x200e4] = 0x40\n  7218: a1 = 0x200f0\n  7223: jump @210\n      : @209 (gas: 2)\n  7225: a1 = 0x200f0\n  7230: fallthrough\n      : @210 (gas: 5)\n  7231: i32 a1 = a1 + 0\n  7233: a0 = 0x1\n  7236: a2 = 0x24\n  7239: ecalli 7 // 'seal_return'\n  7241: fallthrough\n      : @211 (gas: 3)\n  7242: a0 = a2\n  7244: a1 = 0\n  7246: ra = 194, jump @26\n      : @212 [@dyn 97] (gas: 5)\n  7252: i32 a0 = a0 + 0\n  7254: a1 = 0\n  7256: a2 = 0\n  7258: ecalli 0 // 'call_data_copy'\n  7259: jump @15\n      : @213 (gas: 3)\n  7262: a0 = u64 [s1 + 0xd8]\n  7266: a1 = 0\n  7268: ra = 196, jump @26\n      : @214 [@dyn 98] (gas: 5)\n  7274: i32 a1 = a0 + 0\n  7276: a0 = 0\n  7278: a2 = 0\n  7280: ecalli 7 // 'seal_return'\n  7282: jump @181\n      : @215 [@dyn 99] (gas: 4)\n  7285: a0 = 0x200e0\n  7290: u64 [s1 + 0xf8] = a0\n  7294: a0 = i32 [0x200e0]\n  7299: jump @217 if a0 >=u 4\n      : @216 (gas: 1)\n  7303: jump @579\n      : @217 (gas: 6)\n  7306: a0 = s1 + 0x1000\n  7310: i32 a0 = a0 + 0x40\n  7313: a1 = 0\n  7315: ra = 0xc8\n  7319: ecalli 1 // 'call_data_load'\n  7321: fallthrough\n      : @218 [@dyn 100] (gas: 4)\n  7322: a0 = s1 + 0x7ff\n  7326: a0 = a0 + 0x79\n  7329: a0 = i32 [a0 + 0x7e4]\n  7333: jump @220 if a0 != 2376452955\n      : @219 (gas: 1)\n  7340: jump @442\n      : @220 (gas: 1)\n  7343: jump @272 if a0 == 2514000705\n      : @221 (gas: 2)\n  7351: a2 = s1 + 0x1078\n  7355: jump @223 if a0 != 2835717307\n      : @222 (gas: 1)\n  7362: jump @451\n      : @223 (gas: 1)\n  7365: jump @362 if a0 == 3714247998\n      : @224 (gas: 1)\n  7373: jump @226 if a0 != 117300739\n      : @225 (gas: 1)\n  7380: jump @433\n      : @226 (gas: 1)\n  7383: jump @228 if a0 != 157198259\n      : @227 (gas: 1)\n  7390: jump @403\n      : @228 (gas: 1)\n  7393: jump @262 if a0 == 404098525\n      : @229 (gas: 1)\n  7401: jump @314 if a0 == 599290589\n      : @230 (gas: 1)\n  7409: jump @302 if a0 == 826074471\n      : @231 (gas: 1)\n  7417: jump @233 if a0 == 1086394137\n      : @232 (gas: 1)\n  7424: jump @386\n      : @233 (gas: 10)\n  7427: u64 [a2 + 320] = 0\n  7431: u64 [a2 + 312] = 0\n  7435: u64 [a2 + 304] = 0\n  7439: u64 [a2 + 296] = 0\n  7443: a0 = s1 + 0x1000\n  7447: i32 a0 = a0 + 0x1a0\n  7451: ra = 0xca\n  7455: ecalli 10 // 'value_transferred'\n  7457: t0 = 0xcc\n  7461: jump @752\n      : @234 [@dyn 101] (gas: 1)\n  7464: t0 = 204, jump @752\n      : @235 [@dyn 102] (gas: 8)\n  7470: a0 = u64 [a4 + 0x38]\n  7473: a1 = u64 [a4 + 0x40]\n  7476: a2 = u64 [a4 + 0x30]\n  7479: a3 = u64 [a4 + 0x28]\n  7482: a1 = a1 | a2\n  7485: a0 = a0 | a3\n  7488: a0 = a0 | a1\n  7491: jump @237 if a0 == 0\n      : @236 (gas: 1)\n  7494: jump @487\n      : @237 (gas: 4)\n  7497: a0 = u64 [s1 + 0xf8]\n  7501: a0 = i32 [a0]\n  7503: a1 = 0x43\n  7506: jump @239 if a1 <u a0\n      : @238 (gas: 1)\n  7509: jump @488\n      : @239 (gas: 5)\n  7512: a0 = s1 + 0x7ff\n  7516: a0 = a0 + 0x1c1\n  7520: ra = 0xce\n  7524: t0 = 0x244\n  7528: jump @749\n      : @240 [@dyn 103] (gas: 23)\n  7531: a0 = s1 + 0x7ff\n  7535: a0 = a0 + 0x79\n  7538: a1 = u64 [a0 + 0x150]\n  7542: u64 [s1 + 0xf0] = a1\n  7546: a1 = u64 [a0 + 0x148]\n  7550: u64 [s1 + 0xf8] = a1\n  7554: a0 = u32 [a0 + 0x158]\n  7558: u64 [s1 + 0xe8] = a0\n  7562: a0 = s1 + 0x1000\n  7566: i32 a0 = a0 + 0x1c0\n  7570: a1 = 0x24\n  7573: ecalli 1 // 'call_data_load'\n  7575: a0 = s1 + 0x1078\n  7579: a2 = a0 + 0x100\n  7583: a1 = u64 [a2 + 0x60]\n  7586: u64 [s1 + 0xe0] = a1\n  7590: a1 = u64 [a2 + 0x58]\n  7593: u64 [s1 + 0xd8] = a1\n  7597: a1 = u64 [a2 + 0x50]\n  7600: u64 [s1 + 0xd0] = a1\n  7604: a0 = u64 [a2 + 0x48]\n  7607: u64 [s1 + 0xc8] = a0\n  7611: ra = 208, jump @719\n      : @241 [@dyn 104] (gas: 6)\n  7617: a0 = u64 [s1 + 0xf8]\n  7621: a1 = u64 [s1 + 0xe8]\n  7625: a0 = a0 | a1\n  7628: a1 = u64 [s1 + 0xf0]\n  7632: a0 = a0 | a1\n  7635: jump @243 if a0 != 0\n      : @242 (gas: 1)\n  7638: jump @489\n      : @243 (gas: 9)\n  7641: a0 = s1 + 0x1078\n  7645: u64 [a0 + 384] = 0\n  7649: u64 [a0 + 376] = 0\n  7653: u64 [a0 + 368] = 0\n  7657: u64 [a0 + 360] = 0x2\n  7662: a0 = s1 + 0x7ff\n  7666: a0 = a0 + 0x1a1\n  7670: a1 = s1 + 0x11e0\n  7674: ra = 210, jump @21\n      : @244 [@dyn 105] (gas: 40)\n  7680: a1 = s1 + 0x7ff\n  7684: a1 = a1 + 0x79\n  7687: t2 = u64 [a1 + 0x140]\n  7691: a2 = a1 + 0x100\n  7695: a0 = u64 [a2 + 0x38]\n  7698: a4 = u64 [a2 + 0x28]\n  7701: a5 = u64 [a2 + 0x30]\n  7704: a1 = sp + 0xffffffffffffffe0\n  7707: a1 = a1 & 0xffffffffffffffe0\n  7710: sp = a1\n  7712: a3 = u64 [s1 + 0xd0]\n  7716: a3 = a3 + a5\n  7719: t0 = u64 [s1 + 0xc8]\n  7723: t0 = t0 + a4\n  7726: a4 = t0 <u a4\n  7729: a3 = a3 + a4\n  7732: t1 = a3 ^ a5\n  7735: a2 = a3 <u a5\n  7738: a2 = a4 if t1 == 0\n  7741: a4 = u64 [s1 + 0xd8]\n  7745: a4 = a4 + a0\n  7748: a5 = a4 + a2\n  7751: t1 = a5 <u a4\n  7754: ra = u64 [s1 + 0xe0]\n  7758: ra = ra + t2\n  7761: a4 = a4 <u a0\n  7764: a4 = a4 + ra\n  7767: ra = a4 + t1\n  7770: t1 = a5 <u a0\n  7773: a4 = t2 ^ ra\n  7776: t2 = ra <u t2\n  7779: t2 = t1 if a4 == 0\n  7782: a0 = a0 ^ a5\n  7785: a0 = a0 | a4\n  7788: t2 = a2 if a0 == 0\n  7791: u64 [a1 + 0x10] = a5\n  7794: u64 [a1 + 0x8] = a3\n  7797: u64 [a1] = t0\n  7799: u64 [a1 + 0x18] = ra\n  7802: jump @246 if t2 == 0\n      : @245 (gas: 1)\n  7805: jump @494\n      : @246 (gas: 7)\n  7808: a0 = s1 + 0x1078\n  7812: u64 [a0 + 416] = 0\n  7816: u64 [a0 + 408] = 0\n  7820: u64 [a0 + 400] = 0\n  7824: u64 [a0 + 392] = 0x2\n  7829: a0 = s1 + 0x1200\n  7833: ra = 212, jump @22\n      : @247 [@dyn 106] (gas: 14)\n  7839: a2 = s1 + 0x7ff\n  7843: a2 = a2 + 0x79\n  7846: u64 [a2 + 288] = 0\n  7850: a0 = u64 [s1 + 0xe8]\n  7854: a3 = a2 + 0x100\n  7858: u64 [a3 + 0x18] = a0\n  7861: a0 = u64 [s1 + 0xf0]\n  7865: u64 [a3 + 0x10] = a0\n  7868: a1 = s1 + 0x7ff\n  7872: a1 = a1 + 0x181\n  7876: a0 = u64 [s1 + 0xf8]\n  7880: u64 [a3 + 0x8] = a0\n  7883: a0 = 0\n  7885: ra = 214, jump @19\n      : @248 [@dyn 107] (gas: 11)\n  7891: a0 = s1 + 0x7ff\n  7895: a0 = a0 + 0x79\n  7898: u64 [a0 + 256] = 0\n  7902: u64 [a0 + 248] = 0\n  7906: u64 [a0 + 240] = 0\n  7910: a2 = a0\n  7912: a0 = 0x20\n  7915: a1 = s1 + 0x7ff\n  7919: a1 = a1 + 0x161\n  7923: u64 [a2 + 232] = 0\n  7927: ra = 216, jump @19\n      : @249 [@dyn 108] (gas: 6)\n  7933: a0 = sp + 0xffffffffffffffe0\n  7936: a0 = a0 & 0xffffffffffffffe0\n  7939: u64 [s1 + 0xc0] = a0\n  7943: sp = a0\n  7945: a1 = i32 [0x200e4]\n  7950: jump @251 if a1 >u 63\n      : @250 (gas: 2)\n  7954: u32 [0x200e4] = 0x40\n  7960: fallthrough\n      : @251 (gas: 14)\n  7961: a0 = sp + 0xffffffffffffffe0\n  7964: a2 = a0 & 0xffffffffffffffe0\n  7967: u64 [s1 + 0xb8] = a2\n  7971: sp = a2\n  7973: a0 = 0x200f0\n  7978: i32 a0 = a0 + 0\n  7980: i32 a2 = a2 + 0\n  7982: a1 = 0x40\n  7985: u64 [s1 + 0xb0] = a0\n  7989: ra = 0xda\n  7993: ecalli 6 // 'hash_keccak_256'\n  7995: a3 = u64 [s1 + 0xb8]\n  7999: t0 = 0xdc\n  8003: jump @734\n      : @252 [@dyn 109] (gas: 2)\n  8006: a3 = u64 [s1 + 0xb8]\n  8010: t0 = 220, jump @734\n      : @253 [@dyn 110] (gas: 8)\n  8016: a1 = u64 [s1 + 0xc0]\n  8020: u64 [a1 + 0x18] = a3\n  8023: u64 [a1 + 0x10] = a2\n  8026: u64 [a1 + 0x8] = a4\n  8029: u64 [a1] = a0\n  8031: a0 = s1 + 0x7ff\n  8035: a0 = a0 + 0x141\n  8039: ra = 222, jump @21\n      : @254 [@dyn 111] (gas: 33)\n  8045: a2 = s1 + 0x7ff\n  8049: a2 = a2 + 0x79\n  8052: a0 = u64 [a2 + 0xd0]\n  8056: a1 = u64 [a2 + 0xc8]\n  8060: t0 = u64 [a2 + 0xe0]\n  8064: a3 = u64 [a2 + 0xd8]\n  8068: a4 = u64 [s1 + 0xd0]\n  8072: a4 = a4 + a0\n  8075: a5 = u64 [s1 + 0xc8]\n  8079: a5 = a5 + a1\n  8082: a1 = a5 <u a1\n  8085: a4 = a4 + a1\n  8088: a2 = a4 ^ a0\n  8091: a0 = a4 <u a0\n  8094: a0 = a1 if a2 == 0\n  8097: a1 = u64 [s1 + 0xd8]\n  8101: a1 = a1 + a3\n  8104: a2 = u64 [s1 + 0xe0]\n  8108: t0 = t0 + a2\n  8111: a2 = a1 <u a3\n  8114: a2 = a2 + t0\n  8117: a0 = a0 + a1\n  8120: a1 = a0 <u a1\n  8123: a1 = a1 + a2\n  8126: a2 = s1 + 0x1078\n  8130: a3 = a2 + 0x100\n  8134: u64 [a3 + 0xa8] = a5\n  8138: u64 [a3 + 0xb0] = a4\n  8142: u64 [a3 + 0xb8] = a0\n  8146: u64 [a3 + 0xc0] = a1\n  8150: a1 = s1 + 0x1220\n  8154: a0 = u64 [s1 + 0xc0]\n  8158: ra = 224, jump @22\n      : @255 [@dyn 112] (gas: 4)\n  8164: a0 = s1 + 0x7ff\n  8168: a0 = a0 + 0x121\n  8172: a1 = 0x40\n  8175: ra = 226, jump @17\n      : @256 [@dyn 113] (gas: 7)\n  8181: a3 = s1 + 0x7ff\n  8185: a3 = a3 + 0x79\n  8188: a4 = u64 [a3 + 0xc0]\n  8192: a1 = u64 [a3 + 0xb8]\n  8196: a2 = u64 [a3 + 0xb0]\n  8200: a0 = u64 [a3 + 0xa8]\n  8204: t0 = 228, jump @745\n      : @257 [@dyn 114] (gas: 1)\n  8210: jump @259 if a1 == 0\n      : @258 (gas: 1)\n  8213: jump @478\n      : @259 (gas: 12)\n  8216: a1 = u64 [s1 + 0xc8]\n  8220: u64 [a3 + 0x88] = a1\n  8224: a1 = u64 [s1 + 0xd0]\n  8228: u64 [a3 + 0x90] = a1\n  8232: a1 = u64 [s1 + 0xd8]\n  8236: u64 [a3 + 0x98] = a1\n  8240: a1 = s1 + 0x7ff\n  8244: a1 = a1 + 0x101\n  8248: a2 = u64 [s1 + 0xe0]\n  8252: u64 [a3 + 0xa0] = a2\n  8256: u64 [s1 + 0xe0] = a0\n  8260: ra = 230, jump @19\n      : @260 [@dyn 115] (gas: 30)\n  8266: a5 = s1 + 0x7ff\n  8270: a5 = a5 + 0x79\n  8273: u64 [a5 + 64] = 0\n  8276: a0 = u64 [s1 + 0xe8]\n  8280: u64 [a5 + 0x38] = a0\n  8283: a0 = u64 [s1 + 0xf0]\n  8287: u64 [a5 + 0x30] = a0\n  8290: a0 = u64 [s1 + 0xf8]\n  8294: u64 [a5 + 0x28] = a0\n  8297: u64 [a5 + 96] = 0\n  8300: u64 [a5 + 88] = 0\n  8303: u64 [a5 + 80] = 0\n  8306: a0 = u64 [0x20060]\n  8311: a1 = u64 [0x20068]\n  8316: a2 = u64 [0x20070]\n  8321: a3 = u64 [0x20078]\n  8326: u64 [a5 + 0x80] = a0\n  8330: u64 [a5 + 0x78] = a1\n  8333: u64 [a5 + 0x70] = a2\n  8336: u64 [a5 + 0x68] = a3\n  8339: a1 = 0x20\n  8342: a2 = s1 + 0x7ff\n  8346: a2 = a2 + 0xe1\n  8350: a3 = s1 + 0x7ff\n  8354: a3 = a3 + 0xc1\n  8358: a4 = s1 + 0x7ff\n  8362: a4 = a4 + 0xa1\n  8366: u64 [a5 + 72] = 0\n  8369: a0 = u64 [s1 + 0xe0]\n  8373: ra = 232, jump @23\n      : @261 [@dyn 116] (gas: 5)\n  8379: a0 = 0\n  8381: a1 = u64 [s1 + 0xb0]\n  8385: a2 = 0\n  8387: ecalli 7 // 'seal_return'\n  8389: jump @581\n      : @262 (gas: 8)\n  8392: u64 [a2 + 128] = 0\n  8396: u64 [a2 + 120] = 0\n  8399: u64 [a2 + 112] = 0\n  8402: u64 [a2 + 104] = 0\n  8405: a0 = s1 + 0x1000\n  8409: i32 a0 = a0 + 0xe0\n  8413: ecalli 10 // 'value_transferred'\n  8415: fallthrough\n      : @263 (gas: 9)\n  8416: a3 = s1 + 0x1078\n  8420: a0 = u64 [a3 + 0x78]\n  8423: a1 = u64 [a3 + 0x80]\n  8427: a2 = u64 [a3 + 0x70]\n  8430: a3 = u64 [a3 + 0x68]\n  8433: a1 = a1 | a2\n  8436: a0 = a0 | a3\n  8439: a0 = a0 | a1\n  8442: jump @265 if a0 == 0\n      : @264 (gas: 1)\n  8445: jump @500\n      : @265 (gas: 3)\n  8448: a0 = u64 [s1 + 0xf8]\n  8452: a0 = i32 [a0]\n  8454: jump @267 if a0 >u 3\n      : @266 (gas: 1)\n  8458: jump @501\n      : @267 (gas: 8)\n  8461: a1 = s1 + 0x1078\n  8465: u64 [a1 + 160] = 0\n  8469: u64 [a1 + 152] = 0\n  8473: u64 [a1 + 144] = 0\n  8477: u64 [a1 + 136] = 0x2\n  8482: a0 = s1 + 0x4c0\n  8486: a1 = s1 + 0x1100\n  8490: ra = 234, jump @21\n      : @268 [@dyn 117] (gas: 11)\n  8496: a0 = u64 [s1 + 0x4d8]\n  8500: u64 [s1 + 0xf8] = a0\n  8504: a0 = u64 [s1 + 0x4d0]\n  8508: u64 [s1 + 0xf0] = a0\n  8512: a0 = u64 [s1 + 0x4c8]\n  8516: u64 [s1 + 0xe8] = a0\n  8520: a0 = u64 [s1 + 0x4c0]\n  8524: u64 [s1 + 0xe0] = a0\n  8528: a0 = s1 + 0x4a0\n  8532: a1 = 0x40\n  8535: ra = 236, jump @17\n      : @269 [@dyn 118] (gas: 13)\n  8541: a4 = s1 + 0x400\n  8545: a0 = u64 [a4 + 0xb8]\n  8549: a1 = u64 [a4 + 0xb0]\n  8553: a2 = u64 [a4 + 0xa8]\n  8557: a3 = u64 [a4 + 0xa0]\n  8561: a0 = a0 | a2\n  8564: a2 = a3 | a1\n  8567: a2 = a2 | a0\n  8570: a2 = a2 >> 0x20\n  8573: a0 = a0 | a1\n  8576: a0 = a0 << 0x20\n  8579: a0 = a0 | a2\n  8582: jump @271 if a0 == 0\n      : @270 (gas: 1)\n  8585: jump @478\n      : @271 (gas: 14)\n  8588: a0 = u64 [s1 + 0xe0]\n  8592: a2 = s1 + 0x400\n  8596: u64 [a2 + 0x80] = a0\n  8600: a0 = u64 [s1 + 0xe8]\n  8604: u64 [a2 + 0x88] = a0\n  8608: a0 = u64 [s1 + 0xf0]\n  8612: u64 [a2 + 0x90] = a0\n  8616: a1 = s1 + 0x480\n  8620: a0 = u64 [s1 + 0xf8]\n  8624: u64 [a2 + 0x98] = a0\n  8628: a0 = a3\n  8630: u64 [s1 + 0xf8] = a3\n  8634: ra = 0x1a8\n  8638: jump @19\n      : @272 (gas: 11)\n  8641: a0 = s1 + 0x1078\n  8645: u64 [a0 + 736] = 0\n  8649: u64 [a0 + 728] = 0\n  8653: u64 [a0 + 720] = 0\n  8657: u64 [a0 + 712] = 0\n  8661: a0 = s1 + 0x1000\n  8665: i32 a0 = a0 + 0x340\n  8669: ra = 0xee\n  8673: ecalli 10 // 'value_transferred'\n  8675: t0 = 0xf0\n  8679: jump @750\n      : @273 [@dyn 119] (gas: 1)\n  8682: t0 = 240, jump @750\n      : @274 [@dyn 120] (gas: 8)\n  8688: a0 = u64 [a4 + 0xd8]\n  8692: a1 = u64 [a4 + 0xe0]\n  8696: a2 = u64 [a4 + 0xd0]\n  8700: a3 = u64 [a4 + 0xc8]\n  8704: a1 = a1 | a2\n  8707: a0 = a0 | a3\n  8710: a0 = a0 | a1\n  8713: jump @276 if a0 == 0\n      : @275 (gas: 1)\n  8716: jump @502\n      : @276 (gas: 3)\n  8719: a0 = u64 [s1 + 0xf8]\n  8723: a0 = i32 [a0]\n  8725: jump @278 if a0 >u 3\n      : @277 (gas: 1)\n  8729: jump @503\n      : @278 (gas: 4)\n  8732: a0 = s1 + 0x7ff\n  8736: a0 = a0 + 0x541\n  8740: a1 = 0x40\n  8743: ra = 242, jump @17\n      : @279 [@dyn 121] (gas: 20)\n  8749: a1 = s1 + 0x7ff\n  8753: a1 = a1 + 0x79\n  8756: a2 = a1 + 0x400\n  8760: a0 = u64 [a2 + 0xe0]\n  8764: u64 [s1 + 0x58] = a0\n  8767: a0 = u64 [a2 + 0xd8]\n  8771: u64 [s1 + 0x68] = a0\n  8774: a0 = u64 [a2 + 0xd0]\n  8778: u64 [s1 + 0x60] = a0\n  8781: a0 = u64 [a2 + 0xc8]\n  8785: u64 [s1 + 0x70] = a0\n  8788: a1 = s1 + 0x1078\n  8792: u64 [a1 + 768] = 0\n  8796: u64 [a1 + 760] = 0\n  8800: u64 [a1 + 752] = 0\n  8804: u64 [a1 + 744] = 0x4\n  8809: a0 = s1 + 0x7ff\n  8813: a0 = a0 + 0x521\n  8817: a1 = s1 + 0x1360\n  8821: ra = 244, jump @21\n      : @280 [@dyn 122] (gas: 36)\n  8827: a0 = s1 + 0x7ff\n  8831: a0 = a0 + 0x79\n  8834: t2 = u64 [a0 + 0x4b8]\n  8838: ra = u64 [a0 + 0x4b0]\n  8842: t1 = u64 [a0 + 0x4c0]\n  8846: a4 = u64 [a0 + 0x4a8]\n  8850: a0 = t2 << 0x3f\n  8853: a1 = ra >> 0x1\n  8856: a0 = a0 | a1\n  8859: a1 = t1 << 0x3f\n  8862: a2 = t2 >> 0x1\n  8865: a1 = a1 | a2\n  8868: a2 = ra << 0x3f\n  8871: a3 = a4 >> 0x1\n  8874: a5 = a3 | a2\n  8877: a2 = t1 >> 0x1\n  8880: u64 [s1 + 0xf0] = a4\n  8884: a4 = a4 & 0x1\n  8887: a3 = -a4\n  8889: a1 = a1 & a3\n  8892: t0 = a3 & a0\n  8895: a2 = a2 & a3\n  8898: a0 = a5 & 0x7f\n  8901: u64 [s1 + 0xe8] = a0\n  8905: a5 = a0 if a4 == 0\n  8908: u64 [s1 + 0xb0] = a5\n  8912: a0 = a5 <u 0x20\n  8915: u64 [s1 + 0xa0] = t0\n  8919: a0 = 0 if t0 != 0\n  8921: u64 [s1 + 0xa8] = a1\n  8925: u64 [s1 + 0x98] = a2\n  8929: a1 = a1 | a2\n  8932: a0 = 0 if a1 != 0\n  8934: u64 [s1 + 0xf8] = a4\n  8938: a1 = a4 <u 0x1\n  8941: jump @282 if a1 == a0\n      : @281 (gas: 1)\n  8944: jump @504\n      : @282 (gas: 12)\n  8947: a2 = u64 [s1 + 0x68]\n  8950: a3 = u64 [s1 + 0x70]\n  8953: a0 = a3 | a2\n  8956: a1 = u64 [s1 + 0x60]\n  8959: a4 = u64 [s1 + 0x58]\n  8962: a1 = a1 | a4\n  8965: a0 = a0 | a1\n  8968: a0 = a0 >> 0x20\n  8971: a1 = a1 | a2\n  8974: a1 = a1 << 0x20\n  8977: a1 = a1 | a0\n  8980: jump @284 if a1 == 0\n      : @283 (gas: 1)\n  8983: jump @478\n      : @284 (gas: 18)\n  8986: a0 = a3\n  8988: u64 [s1 + 0xd0] = ra\n  8992: u64 [s1 + 0xd8] = t2\n  8996: u64 [s1 + 0xe0] = t1\n  9000: a1 = u64 [s1 + 0xb0]\n  9004: a3 = s1 + 0x7ff\n  9008: a3 = a3 + 0x79\n  9011: a4 = a3 + 0x400\n  9015: u64 [a4 + 0x88] = a1\n  9019: a1 = u64 [s1 + 0xa0]\n  9023: u64 [a4 + 0x90] = a1\n  9027: a1 = u64 [s1 + 0xa8]\n  9031: u64 [a4 + 0x98] = a1\n  9035: a1 = s1 + 0x7ff\n  9039: a1 = a1 + 0x501\n  9043: a2 = u64 [s1 + 0x98]\n  9047: u64 [a4 + 0xa0] = a2\n  9051: ra = 246, jump @19\n      : @285 [@dyn 123] (gas: 2)\n  9057: a0 = u64 [s1 + 0xf8]\n  9061: jump @287 if a0 == 0\n      : @286 (gas: 1)\n  9064: jump @479\n      : @287 (gas: 10)\n  9067: a0 = u64 [s1 + 0x68]\n  9070: a1 = u64 [s1 + 0x58]\n  9073: a0 = a0 | a1\n  9076: a1 = 0xffffffe0\n  9086: a3 = u64 [s1 + 0x70]\n  9089: a1 = a3 <u a1\n  9092: a2 = u64 [s1 + 0x60]\n  9095: a1 = 0 if a2 != 0\n  9097: a1 = 0 if a0 != 0\n  9099: jump @289 if a1 != 0\n      : @288 (gas: 1)\n  9102: jump @478\n      : @289 (gas: 16)\n  9105: a1 = u64 [s1 + 0xf0]\n  9109: a1 = a1 & 0xffffffffffffff00\n  9113: i32 a0 = a3 + 0x20\n  9116: a2 = s1 + 0x7ff\n  9120: a2 = a2 + 0x79\n  9123: a3 = u64 [s1 + 0xd0]\n  9127: a4 = a2 + 0x400\n  9131: u64 [a4 + 0x10] = a3\n  9134: u64 [a4 + 0x8] = a1\n  9137: a1 = u64 [s1 + 0xd8]\n  9141: u64 [a4 + 0x18] = a1\n  9144: a1 = s1 + 0x7ff\n  9148: a1 = a1 + 0x481\n  9152: a3 = u64 [s1 + 0xe0]\n  9156: u64 [a4 + 0x20] = a3\n  9159: ra = 248, jump @19\n      : @290 [@dyn 124] (gas: 8)\n  9165: t2 = 0\n  9167: t1 = 0\n  9169: u64 [s1 + 240] = 0\n  9173: a0 = u64 [s1 + 0xe8]\n  9177: a0 = a0 >u 0\n  9179: a0 = a0 << 0x5\n  9182: u64 [s1 + 0xf8] = a0\n  9186: fallthrough\n      : @291 (gas: 37)\n  9187: a1 = u64 [s1 + 0xf8]\n  9191: a0 = a1 + 0x3f\n  9194: a1 = a0 <u a1\n  9197: a2 = t2 + a1\n  9200: a0 = a0 & 0xffffffffffffffe0\n  9203: ra = u64 [s1 + 0x70]\n  9206: ra = ra + a0\n  9209: u64 [s1 + 0xf8] = ra\n  9213: a0 = ra <u a0\n  9216: t0 = u64 [s1 + 0x60]\n  9219: a3 = a2 + t0\n  9222: ra = a3 + a0\n  9225: a3 = ra ^ a2\n  9228: a4 = ra <u a2\n  9231: a4 = a0 if a3 == 0\n  9234: a0 = a2 <u t2\n  9237: a0 = a1 if a1 == 0\n  9240: a0 = a0 + t1\n  9243: a1 = a0 <u t1\n  9246: a2 = u64 [s1 + 0x68]\n  9249: a2 = a2 + a0\n  9252: a4 = a4 + a2\n  9255: a0 = a2 <u a0\n  9258: a2 = a4 <u a2\n  9261: t1 = u64 [s1 + 0x58]\n  9264: a3 = u64 [s1 + 0xf0]\n  9268: a3 = a3 + t1\n  9271: a1 = a1 + a3\n  9274: a0 = a0 + a1\n  9277: a5 = a0 + a2\n  9280: a0 = a5 >u 0\n  9282: a1 = a4 >u 0\n  9284: a1 = a0 if a5 != 0\n  9287: a0 = a4 | a5\n  9290: a2 = ra >u 0\n  9292: a2 = a1 if a0 != 0\n  9295: jump @293 if a2 == 0\n      : @292 (gas: 1)\n  9298: jump @547\n      : @293 (gas: 15)\n  9301: a0 = u64 [s1 + 0x70]\n  9304: a1 = u64 [s1 + 0xf8]\n  9308: a0 = a1 <u a0\n  9311: a1 = ra ^ t0\n  9314: a2 = ra <u t0\n  9317: a2 = a0 if a1 == 0\n  9320: a0 = u64 [s1 + 0x68]\n  9323: t2 = a4 <u a0\n  9326: a1 = a5 ^ t1\n  9329: a3 = a5 <u t1\n  9332: a3 = t2 if a1 == 0\n  9335: a0 = a0 ^ a4\n  9338: a0 = a0 | a1\n  9341: a3 = a2 if a0 == 0\n  9344: jump @295 if a3 == 0\n      : @294 (gas: 1)\n  9347: jump @547\n      : @295 (gas: 14)\n  9350: a2 = s1 + 0x7ff\n  9354: a2 = a2 + 0x79\n  9357: a0 = u64 [s1 + 0xf8]\n  9361: u64 [a2 + 0x3e8] = a0\n  9365: u64 [a2 + 0x3f0] = ra\n  9369: u64 [a2 + 0x3f8] = a4\n  9373: a0 = 0x40\n  9376: a1 = s1 + 0x7ff\n  9380: a1 = a1 + 0x461\n  9384: u64 [a2 + 0x400] = a5\n  9388: u64 [s1 + 0xe8] = ra\n  9392: u64 [s1 + 0xe0] = a4\n  9396: u64 [s1 + 0xf0] = a5\n  9400: ra = 250, jump @19\n      : @296 [@dyn 125] (gas: 27)\n  9406: a1 = s1 + 0x7ff\n  9410: a1 = a1 + 0x79\n  9413: a0 = u64 [s1 + 0x58]\n  9416: a2 = a1 + 0x300\n  9420: u64 [a2 + 0xa0] = a0\n  9424: a0 = u64 [s1 + 0x68]\n  9427: u64 [a2 + 0x98] = a0\n  9431: a0 = u64 [s1 + 0x60]\n  9434: u64 [a2 + 0x90] = a0\n  9438: a0 = u64 [s1 + 0x70]\n  9441: u64 [a2 + 0x88] = a0\n  9445: a0 = u64 [s1 + 0xf0]\n  9449: u64 [a2 + 0xc0] = a0\n  9453: a0 = u64 [s1 + 0xe0]\n  9457: u64 [a2 + 0xb8] = a0\n  9461: a0 = u64 [s1 + 0xe8]\n  9465: u64 [a2 + 0xb0] = a0\n  9469: a4 = a1\n  9471: a0 = s1 + 0x7ff\n  9475: a0 = a0 + 0x441\n  9479: a1 = s1 + 0x7ff\n  9483: a1 = a1 + 0x421\n  9487: a2 = s1 + 0x7ff\n  9491: a2 = a2 + 0x401\n  9495: a3 = u64 [s1 + 0xf8]\n  9499: u64 [a4 + 0x3a8] = a3\n  9503: ra = 252, jump @640\n      : @297 [@dyn 126] (gas: 12)\n  9509: a3 = u64 [s1 + 0xe0]\n  9513: a4 = u64 [s1 + 0xe8]\n  9517: t0 = u64 [s1 + 0xf8]\n  9521: a0 = t0 | a3\n  9524: a1 = u64 [s1 + 0xf0]\n  9528: a1 = a1 | a4\n  9531: a0 = a0 | a1\n  9534: a0 = a0 >> 0x20\n  9537: a1 = a1 | a3\n  9540: a1 = a1 << 0x20\n  9543: a0 = a0 | a1\n  9546: jump @299 if a0 == 0\n      : @298 (gas: 1)\n  9549: jump @478\n      : @299 (gas: 33)\n  9552: a1 = s1 + 0x7ff\n  9556: a1 = a1 + 0x79\n  9559: a5 = a1 + 0x300\n  9563: a0 = u64 [a5 + 0xd0]\n  9567: a2 = u64 [a5 + 0xe0]\n  9571: u64 [s1 + 0xd8] = a2\n  9575: a2 = a3\n  9577: t1 = u64 [a1 + 0x3c8]\n  9581: a3 = u64 [a5 + 0xd8]\n  9585: t2 = a0 ^ a4\n  9588: a5 = a0 <u a4\n  9591: ra = t1 <u t0\n  9594: a5 = ra if t2 == 0\n  9597: a1 = a3 - a2\n  9600: t2 = a1 - a5\n  9603: a1 = a1 <u a5\n  9606: a3 = a3 <u a2\n  9609: a2 = u64 [s1 + 0xd8]\n  9613: a3 = a2 - a3\n  9616: a2 = u64 [s1 + 0xf0]\n  9620: a3 = a3 - a2\n  9623: a3 = a3 - a1\n  9626: a0 = a0 - a4\n  9629: a0 = a0 - ra\n  9632: a1 = t1 - t0\n  9635: a0 = a0 | a3\n  9638: a2 = a1 | t2\n  9641: a2 = a2 | a0\n  9644: a0 = a0 | t2\n  9647: a2 = a2 >> 0x20\n  9650: a0 = a0 << 0x20\n  9653: a0 = a0 | a2\n  9656: jump @301 if a0 == 0\n      : @300 (gas: 1)\n  9659: jump @478\n      : @301 (gas: 4)\n  9662: a0 = t0\n  9664: u64 [s1 + 0xf8] = a1\n  9668: ra = 0x1f6\n  9672: jump @26\n      : @302 (gas: 10)\n  9675: u64 [a2 + 288] = 0\n  9679: u64 [a2 + 280] = 0\n  9683: u64 [a2 + 272] = 0\n  9687: u64 [a2 + 264] = 0\n  9691: a0 = s1 + 0x1000\n  9695: i32 a0 = a0 + 0x180\n  9699: ra = 0xfe\n  9703: ecalli 10 // 'value_transferred'\n  9705: t0 = 0x100\n  9709: jump @752\n      : @303 [@dyn 127] (gas: 1)\n  9712: t0 = 256, jump @752\n      : @304 [@dyn 128] (gas: 1)\n  9718: t0 = 258, jump @757\n      : @305 [@dyn 129] (gas: 1)\n  9724: jump @307 if a0 == 0\n      : @306 (gas: 1)\n  9727: jump @510\n      : @307 (gas: 3)\n  9730: a0 = u64 [s1 + 0xf8]\n  9734: a0 = i32 [a0]\n  9736: jump @309 if a0 >u 3\n      : @308 (gas: 1)\n  9740: jump @511\n      : @309 (gas: 4)\n  9743: a0 = s1 + 0x7ff\n  9747: a0 = a0 + 0x1\n  9750: a1 = 0x40\n  9753: ra = 260, jump @17\n      : @310 [@dyn 130] (gas: 9)\n  9759: a0 = s1 + 0x1000\n  9763: a3 = u64 [a0 + 0xfffffffffffff818]\n  9767: a0 = s1 + 0x1000\n  9771: a1 = u64 [a0 + 0xfffffffffffff810]\n  9775: a0 = s1 + 0x1000\n  9779: a2 = u64 [a0 + 0xfffffffffffff808]\n  9783: a0 = s1 + 0x1000\n  9787: a0 = u64 [a0 + 0xfffffffffffff800]\n  9791: t0 = 262, jump @738\n      : @311 [@dyn 131] (gas: 1)\n  9797: jump @313 if a1 == 0\n      : @312 (gas: 1)\n  9800: jump @478\n      : @313 (gas: 8)\n  9803: u64 [s1 + 2040] = 0\n  9807: u64 [s1 + 2032] = 0\n  9811: u64 [s1 + 2024] = 0\n  9815: a1 = s1 + 0x7e0\n  9819: u64 [s1 + 2016] = 0x12\n  9824: u64 [s1 + 0xf8] = a0\n  9828: ra = 0x1a8\n  9832: jump @19\n      : @314 (gas: 8)\n  9835: u64 [a2 + 192] = 0\n  9839: u64 [a2 + 184] = 0\n  9843: u64 [a2 + 176] = 0\n  9847: u64 [a2 + 168] = 0\n  9851: a0 = s1 + 0x1000\n  9855: i32 a0 = a0 + 0x120\n  9859: ecalli 10 // 'value_transferred'\n  9861: fallthrough\n      : @315 (gas: 9)\n  9862: a3 = s1 + 0x1078\n  9866: a0 = u64 [a3 + 0xb8]\n  9870: a1 = u64 [a3 + 0xc0]\n  9874: a2 = u64 [a3 + 0xb0]\n  9878: a3 = u64 [a3 + 0xa8]\n  9882: a1 = a1 | a2\n  9885: a0 = a0 | a3\n  9888: a0 = a0 | a1\n  9891: jump @317 if a0 == 0\n      : @316 (gas: 1)\n  9894: jump @512\n      : @317 (gas: 4)\n  9897: a0 = u64 [s1 + 0xf8]\n  9901: a0 = i32 [a0]\n  9903: a1 = 0x63\n  9906: jump @319 if a1 <u a0\n      : @318 (gas: 1)\n  9909: jump @513\n      : @319 (gas: 4)\n  9912: a0 = s1 + 0x7c0\n  9916: ra = 0x108\n  9920: t0 = 0x244\n  9924: jump @749\n      : @320 [@dyn 132] (gas: 12)\n  9927: a0 = u64 [s1 + 0x7d8]\n  9931: u64 [s1 + 0xa8] = a0\n  9935: a0 = u64 [s1 + 0x7d0]\n  9939: u64 [s1 + 0xb8] = a0\n  9943: a0 = u64 [s1 + 0x7c8]\n  9947: u64 [s1 + 0xf8] = a0\n  9951: a0 = u64 [s1 + 0x7c0]\n  9955: u64 [s1 + 0xf0] = a0\n  9959: a0 = s1 + 0x7a0\n  9963: ra = 0x10a\n  9967: t0 = 0x24e\n  9971: jump @749\n      : @321 [@dyn 133] (gas: 34)\n  9974: a0 = u64 [s1 + 0x7b8]\n  9978: u64 [s1 + 0xa0] = a0\n  9982: a0 = u64 [s1 + 0x7b0]\n  9986: u64 [s1 + 0x98] = a0\n  9990: a0 = u64 [s1 + 0x7a8]\n  9994: u64 [s1 + 0x90] = a0\n  9998: a0 = u64 [s1 + 0x7a0]\n 10002: u64 [s1 + 0x88] = a0\n 10006: a0 = s1 + 0x1000\n 10010: i32 a0 = a0 + 0x140\n 10014: a1 = 0x44\n 10017: ecalli 1 // 'call_data_load'\n 10019: a0 = s1 + 0x1078\n 10023: a1 = u64 [a0 + 0xe0]\n 10027: u64 [s1 + 0xe8] = a1\n 10031: a1 = u64 [a0 + 0xd8]\n 10035: u64 [s1 + 0xd8] = a1\n 10039: a1 = u64 [a0 + 0xd0]\n 10043: u64 [s1 + 0xc8] = a1\n 10047: a0 = u64 [a0 + 0xc8]\n 10051: u64 [s1 + 0xd0] = a0\n 10055: a0 = u64 [s1 + 0xb8]\n 10059: a0 = a0 << 0x20\n 10062: a0 = a0 >> 0x20\n 10065: u64 [s1 + 1944] = 0\n 10069: u64 [s1 + 0x78] = a0\n 10072: u64 [s1 + 0x790] = a0\n 10076: a0 = u64 [s1 + 0xf8]\n 10080: u64 [s1 + 0x788] = a0\n 10084: a1 = s1 + 0x780\n 10088: a0 = u64 [s1 + 0xf0]\n 10092: u64 [s1 + 0x780] = a0\n 10096: a0 = 0\n 10098: ra = 268, jump @19\n      : @322 [@dyn 134] (gas: 7)\n 10104: u64 [s1 + 1912] = 0\n 10108: u64 [s1 + 1904] = 0\n 10112: u64 [s1 + 1888] = 0x1\n 10117: a0 = 0x20\n 10120: a1 = s1 + 0x760\n 10124: u64 [s1 + 1896] = 0\n 10128: ra = 270, jump @19\n      : @323 [@dyn 135] (gas: 3)\n 10134: a1 = 0x200e4\n 10139: a0 = i32 [0x200e4]\n 10144: jump @325 if a0 >u 63\n      : @324 (gas: 2)\n 10148: u32 [0x200e4] = 0x40\n 10154: fallthrough\n      : @325 (gas: 15)\n 10155: a0 = sp + 0xffffffffffffffe0\n 10158: a2 = a0 & 0xffffffffffffffe0\n 10161: u64 [s1 + 0xb0] = a2\n 10165: sp = a2\n 10167: a0 = 0x200f0\n 10172: i32 a0 = a0 + 0\n 10174: i32 a2 = a2 + 0\n 10176: u64 [s1 + 0xc0] = a1\n 10180: a1 = 0x40\n 10183: u64 [s1 + 0xe0] = a0\n 10187: ra = 0x110\n 10191: ecalli 6 // 'hash_keccak_256'\n 10193: a3 = u64 [s1 + 0xb0]\n 10197: t0 = 0x112\n 10201: jump @754\n      : @326 [@dyn 136] (gas: 2)\n 10204: a3 = u64 [s1 + 0xb0]\n 10208: t0 = 274, jump @754\n      : @327 [@dyn 137] (gas: 18)\n 10214: u64 [s1 + 0x68] = a0\n 10217: a0 = reverse a1\n 10219: u64 [s1 + 0x60] = a0\n 10222: a0 = reverse a2\n 10224: u64 [s1 + 0x58] = a0\n 10227: a0 = reverse a3\n 10229: u64 [s1 + 0x50] = a0\n 10232: a0 = sp + 0xffffffffffffffe0\n 10235: a0 = a0 & 0xffffffffffffffe0\n 10238: u64 [s1 + 0x70] = a0\n 10241: sp = a0\n 10243: a0 = 0x300f0\n 10248: u64 [s1 + 0xb0] = a0\n 10252: i32 a0 = a0 + 0\n 10254: u64 [s1 + 0x80] = a0\n 10258: ra = 0x114\n 10262: ecalli 3 // 'caller'\n 10264: fallthrough\n      : @328 [@dyn 138] (gas: 5)\n 10265: a2 = u64 [s1 + 0xb0]\n 10269: a0 = u64 [a2 + 0x8]\n 10272: a1 = i32 [a2 + 0x10]\n 10275: a2 = u64 [a2]\n 10277: t0 = 278, jump @732\n      : @329 [@dyn 139] (gas: 7)\n 10283: u64 [s1 + 1880] = 0\n 10287: u64 [s1 + 0x750] = a1\n 10291: u64 [s1 + 0x748] = a0\n 10295: a1 = s1 + 0x740\n 10299: u64 [s1 + 0x740] = a3\n 10303: a0 = 0\n 10305: ra = 280, jump @19\n      : @330 [@dyn 140] (gas: 12)\n 10311: a0 = u64 [s1 + 0x50]\n 10314: a3 = s1 + 0x700\n 10318: u64 [a3 + 0x38] = a0\n 10321: a0 = u64 [s1 + 0x58]\n 10324: u64 [a3 + 0x30] = a0\n 10327: a0 = u64 [s1 + 0x60]\n 10330: u64 [a3 + 0x28] = a0\n 10333: a0 = 0x20\n 10336: a1 = s1 + 0x720\n 10340: a2 = u64 [s1 + 0x68]\n 10343: u64 [a3 + 0x20] = a2\n 10346: ra = 282, jump @19\n      : @331 [@dyn 141] (gas: 3)\n 10352: a1 = u64 [s1 + 0xc0]\n 10356: a0 = i32 [a1]\n 10358: jump @333 if a0 >u 63\n      : @332 (gas: 2)\n 10362: u32 [a1 + 0] = 0x40\n 10365: fallthrough\n      : @333 (gas: 12)\n 10366: a0 = sp + 0xffffffffffffffe0\n 10369: a0 = a0 & 0xffffffffffffffe0\n 10372: u64 [s1 + 0x68] = a0\n 10375: sp = a0\n 10377: i32 a2 = a0 + 0\n 10379: a1 = 0x40\n 10382: a0 = u64 [s1 + 0xe0]\n 10386: ra = 0x11c\n 10390: ecalli 6 // 'hash_keccak_256'\n 10392: a3 = u64 [s1 + 0x68]\n 10395: t0 = 0x11e\n 10399: jump @734\n      : @334 [@dyn 142] (gas: 2)\n 10402: a3 = u64 [s1 + 0x68]\n 10405: t0 = 286, jump @734\n      : @335 [@dyn 143] (gas: 7)\n 10411: a1 = u64 [s1 + 0x70]\n 10414: u64 [a1 + 0x18] = a3\n 10417: u64 [a1 + 0x10] = a2\n 10420: u64 [a1 + 0x8] = a4\n 10423: u64 [a1] = a0\n 10425: a0 = s1 + 0x700\n 10429: ra = 288, jump @21\n      : @336 [@dyn 144] (gas: 8)\n 10435: t2 = u64 [s1 + 0x718]\n 10439: a3 = u64 [s1 + 0x710]\n 10443: a4 = u64 [s1 + 0x708]\n 10447: t0 = u64 [s1 + 0x700]\n 10451: a0 = a4 & t2\n 10454: a1 = t0 & a3\n 10457: a0 = a0 & a1\n 10460: jump @357 if a0 == 4294967295\n      : @337 (gas: 20)\n 10465: a0 = u64 [s1 + 0xd0]\n 10469: t1 = t0 <u a0\n 10472: a1 = u64 [s1 + 0xc8]\n 10476: a0 = a4 ^ a1\n 10479: a5 = a4 <u a1\n 10482: a5 = t1 if a0 == 0\n 10485: a2 = u64 [s1 + 0xd8]\n 10489: ra = a3 <u a2\n 10492: a1 = u64 [s1 + 0xe8]\n 10496: a0 = t2 ^ a1\n 10499: a1 = t2 <u a1\n 10502: a1 = ra if a0 == 0\n 10505: a2 = a2 ^ a3\n 10508: a0 = a0 | a2\n 10511: a1 = a5 if a0 == 0\n 10514: u64 [s1 + 0x70] = t0\n 10517: u64 [s1 + 0x68] = a4\n 10520: u64 [s1 + 0x60] = t2\n 10523: u64 [s1 + 0x58] = a3\n 10526: jump @339 if a1 == 0\n      : @338 (gas: 1)\n 10529: jump @554\n      : @339 (gas: 9)\n 10532: u64 [s1 + 0x40] = ra\n 10535: u64 [s1 + 0x48] = a5\n 10538: u64 [s1 + 0x50] = t1\n 10541: a0 = u64 [s1 + 0xf0]\n 10545: a1 = u64 [s1 + 0x78]\n 10548: a0 = a0 | a1\n 10551: a1 = u64 [s1 + 0xf8]\n 10555: a0 = a0 | a1\n 10558: jump @341 if a0 != 0\n      : @340 (gas: 1)\n 10561: jump @563\n      : @341 (gas: 3)\n 10564: a0 = u64 [s1 + 0x80]\n 10568: ecalli 3 // 'caller'\n 10570: fallthrough\n      : @342 (gas: 7)\n 10571: a2 = u64 [s1 + 0xb0]\n 10575: a0 = u32 [a2 + 0x10]\n 10578: a1 = u64 [a2]\n 10580: a2 = u64 [a2 + 0x8]\n 10583: a0 = a0 | a1\n 10586: a0 = a0 | a2\n 10589: jump @344 if a0 != 0\n      : @343 (gas: 1)\n 10592: jump @565\n      : @344 (gas: 10)\n 10595: u64 [s1 + 1784] = 0\n 10599: a0 = u64 [s1 + 0xf0]\n 10603: u64 [s1 + 0x6e0] = a0\n 10607: a0 = u64 [s1 + 0xf8]\n 10611: u64 [s1 + 0x6e8] = a0\n 10615: a1 = s1 + 0x6e0\n 10619: a0 = u64 [s1 + 0x78]\n 10622: u64 [s1 + 0x6f0] = a0\n 10626: a0 = 0\n 10628: ra = 290, jump @19\n      : @345 [@dyn 145] (gas: 7)\n 10634: u64 [s1 + 1752] = 0\n 10638: u64 [s1 + 1744] = 0\n 10642: u64 [s1 + 1728] = 0x1\n 10647: a0 = 0x20\n 10650: a1 = s1 + 0x6c0\n 10654: u64 [s1 + 1736] = 0\n 10658: ra = 292, jump @19\n      : @346 [@dyn 146] (gas: 3)\n 10664: a1 = u64 [s1 + 0xc0]\n 10668: a0 = i32 [a1]\n 10670: jump @348 if a0 >u 63\n      : @347 (gas: 2)\n 10674: u32 [a1 + 0] = 0x40\n 10677: fallthrough\n      : @348 (gas: 12)\n 10678: a0 = sp + 0xffffffffffffffe0\n 10681: a0 = a0 & 0xffffffffffffffe0\n 10684: u64 [s1 + 0x78] = a0\n 10687: sp = a0\n 10689: i32 a2 = a0 + 0\n 10691: a1 = 0x40\n 10694: a0 = u64 [s1 + 0xe0]\n 10698: ra = 0x126\n 10702: ecalli 6 // 'hash_keccak_256'\n 10704: a3 = u64 [s1 + 0x78]\n 10707: t0 = 0x128\n 10711: jump @754\n      : @349 [@dyn 147] (gas: 2)\n 10714: a3 = u64 [s1 + 0x78]\n 10717: t0 = 296, jump @754\n      : @350 [@dyn 148] (gas: 15)\n 10723: u64 [s1 + 0x38] = a0\n 10726: a0 = reverse a1\n 10728: u64 [s1 + 0x30] = a0\n 10731: a0 = reverse a2\n 10733: u64 [s1 + 0x28] = a0\n 10736: a0 = reverse a3\n 10738: u64 [s1 + 0x20] = a0\n 10741: a0 = sp + 0xffffffffffffffe0\n 10744: a0 = a0 & 0xffffffffffffffe0\n 10747: u64 [s1 + 0x78] = a0\n 10750: sp = a0\n 10752: a0 = u64 [s1 + 0x80]\n 10756: ra = 0x12a\n 10760: ecalli 3 // 'caller'\n 10762: fallthrough\n      : @351 [@dyn 149] (gas: 5)\n 10763: a2 = u64 [s1 + 0xb0]\n 10767: a0 = u64 [a2 + 0x8]\n 10770: a1 = i32 [a2 + 0x10]\n 10773: a2 = u64 [a2]\n 10775: t0 = 300, jump @732\n      : @352 [@dyn 150] (gas: 7)\n 10781: u64 [s1 + 1720] = 0\n 10785: u64 [s1 + 0x6b0] = a1\n 10789: u64 [s1 + 0x6a8] = a0\n 10793: a1 = s1 + 0x6a0\n 10797: u64 [s1 + 0x6a0] = a3\n 10801: a0 = 0\n 10803: ra = 302, jump @19\n      : @353 [@dyn 151] (gas: 12)\n 10809: a0 = u64 [s1 + 0x20]\n 10812: a3 = s1 + 0x600\n 10816: u64 [a3 + 0x98] = a0\n 10820: a0 = u64 [s1 + 0x28]\n 10823: u64 [a3 + 0x90] = a0\n 10827: a0 = u64 [s1 + 0x30]\n 10830: u64 [a3 + 0x88] = a0\n 10834: a0 = 0x20\n 10837: a1 = s1 + 0x680\n 10841: a2 = u64 [s1 + 0x38]\n 10844: u64 [a3 + 0x80] = a2\n 10848: ra = 304, jump @19\n      : @354 [@dyn 152] (gas: 3)\n 10854: a1 = u64 [s1 + 0xc0]\n 10858: a0 = i32 [a1]\n 10860: jump @356 if a0 >u 63\n      : @355 (gas: 2)\n 10864: u32 [a1 + 0] = 0x40\n 10867: fallthrough\n      : @356 (gas: 49)\n 10868: a0 = sp + 0xffffffffffffffe0\n 10871: a0 = a0 & 0xffffffffffffffe0\n 10874: u64 [s1 + 0xc0] = a0\n 10878: sp = a0\n 10880: i32 a2 = a0 + 0\n 10882: a1 = 0x40\n 10885: a0 = u64 [s1 + 0xe0]\n 10889: ecalli 6 // 'hash_keccak_256'\n 10891: a0 = u64 [s1 + 0xd8]\n 10895: a1 = u64 [s1 + 0x58]\n 10898: a0 = a1 - a0\n 10901: a2 = u64 [s1 + 0x48]\n 10904: a1 = a0 - a2\n 10907: a0 = a0 <u a2\n 10910: a2 = u64 [s1 + 0xe8]\n 10914: a3 = u64 [s1 + 0x60]\n 10917: a2 = a3 - a2\n 10920: a3 = u64 [s1 + 0x40]\n 10923: a2 = a2 - a3\n 10926: a2 = a2 - a0\n 10929: a0 = u64 [s1 + 0xc8]\n 10933: a3 = u64 [s1 + 0x68]\n 10936: a0 = a3 - a0\n 10939: a3 = u64 [s1 + 0x50]\n 10942: a0 = a0 - a3\n 10945: a3 = s1 + 0x1078\n 10949: u64 [a3 + 0x100] = a2\n 10953: u64 [a3 + 0xf8] = a1\n 10957: u64 [a3 + 0xf0] = a0\n 10961: a4 = u64 [s1 + 0xc0]\n 10965: a0 = u64 [a4]\n 10967: a1 = u64 [s1 + 0xd0]\n 10971: a2 = u64 [s1 + 0x70]\n 10974: a1 = a2 - a1\n 10977: u64 [a3 + 0xe8] = a1\n 10981: a1 = u64 [a4 + 0x8]\n 10984: a2 = reverse a0\n 10986: a0 = u64 [s1 + 0x78]\n 10989: u64 [a0 + 0x18] = a2\n 10992: a3 = u64 [a4 + 0x10]\n 10995: a2 = u64 [a4 + 0x18]\n 10998: a1 = reverse a1\n 11000: u64 [a0 + 0x10] = a1\n 11003: a1 = reverse a3\n 11005: u64 [a0 + 0x8] = a1\n 11008: a1 = reverse a2\n 11010: u64 [a0] = a1\n 11012: a1 = s1 + 0x1160\n 11016: ra = 306, jump @22\n      : @357 [@dyn 153] (gas: 28)\n 11022: a0 = u64 [s1 + 0xd0]\n 11026: u64 [s1 + 0x520] = a0\n 11030: a0 = u64 [s1 + 0x88]\n 11034: u64 [s1 + 0x540] = a0\n 11038: a0 = u64 [s1 + 0xf0]\n 11042: u64 [s1 + 0x560] = a0\n 11046: a0 = u64 [s1 + 0xc8]\n 11050: u64 [s1 + 0x528] = a0\n 11054: a0 = u64 [s1 + 0x90]\n 11058: u64 [s1 + 0x548] = a0\n 11062: a0 = u64 [s1 + 0xf8]\n 11066: u64 [s1 + 0x568] = a0\n 11070: a0 = u64 [s1 + 0xd8]\n 11074: u64 [s1 + 0x530] = a0\n 11078: a0 = u64 [s1 + 0x98]\n 11082: u64 [s1 + 0x550] = a0\n 11086: a0 = u64 [s1 + 0xb8]\n 11090: u64 [s1 + 0x570] = a0\n 11094: a0 = u64 [s1 + 0xe8]\n 11098: u64 [s1 + 0x538] = a0\n 11102: a0 = u64 [s1 + 0xa0]\n 11106: u64 [s1 + 0x558] = a0\n 11110: a0 = s1 + 0x560\n 11114: a1 = s1 + 0x540\n 11118: a2 = s1 + 0x520\n 11122: a3 = u64 [s1 + 0xa8]\n 11126: u64 [s1 + 0x578] = a3\n 11130: ra = 308, jump @669\n      : @358 [@dyn 154] (gas: 3)\n 11136: a0 = s1 + 0x500\n 11140: a1 = 0x40\n 11143: ra = 310, jump @17\n      : @359 [@dyn 155] (gas: 6)\n 11149: a4 = s1 + 0x500\n 11153: a3 = u64 [a4 + 0x18]\n 11156: a1 = u64 [a4 + 0x10]\n 11159: a2 = u64 [a4 + 0x8]\n 11162: a0 = u64 [a4]\n 11164: t0 = 312, jump @738\n      : @360 [@dyn 156] (gas: 1)\n 11170: jump @478 if a1 != 0\n      : @361 (gas: 8)\n 11174: u64 [s1 + 1272] = 0\n 11178: u64 [s1 + 1264] = 0\n 11182: u64 [s1 + 1256] = 0\n 11186: a1 = s1 + 0x4e0\n 11190: u64 [s1 + 1248] = 0x1\n 11195: u64 [s1 + 0xf8] = a0\n 11199: ra = 0x1a8\n 11203: jump @19\n      : @362 (gas: 10)\n 11206: u64 [a2 + 864] = 0\n 11210: u64 [a2 + 856] = 0\n 11214: u64 [a2 + 848] = 0\n 11218: u64 [a2 + 840] = 0\n 11222: a0 = s1 + 0x1000\n 11226: i32 a0 = a0 + 0x3c0\n 11230: ra = 0x13a\n 11234: ecalli 10 // 'value_transferred'\n 11236: t0 = 0x13c\n 11240: jump @751\n      : @363 [@dyn 157] (gas: 1)\n 11243: t0 = 316, jump @751\n      : @364 [@dyn 158] (gas: 8)\n 11249: a0 = u64 [a4 + 0x58]\n 11252: a1 = u64 [a4 + 0x60]\n 11255: a2 = u64 [a4 + 0x50]\n 11258: a3 = u64 [a4 + 0x48]\n 11261: a1 = a1 | a2\n 11264: a0 = a0 | a3\n 11267: a0 = a0 | a1\n 11270: jump @366 if a0 == 0\n      : @365 (gas: 1)\n 11273: jump @514\n      : @366 (gas: 4)\n 11276: a0 = u64 [s1 + 0xf8]\n 11280: a0 = i32 [a0]\n 11282: a1 = 0x43\n 11285: jump @368 if a1 <u a0\n      : @367 (gas: 1)\n 11288: jump @515\n      : @368 (gas: 7)\n 11291: a0 = 0xffffffff\n 11301: u64 [s1 + 0xf8] = a0\n 11305: a0 = s1 + 0x7ff\n 11309: a0 = a0 + 0x721\n 11313: ra = 0x13e\n 11317: t0 = 0x244\n 11321: jump @749\n      : @369 [@dyn 159] (gas: 13)\n 11324: a1 = s1 + 0x7ff\n 11328: a1 = a1 + 0x79\n 11331: a0 = u64 [a1 + 0x6a8]\n 11335: u64 [s1 + 0xf0] = a0\n 11339: a0 = u64 [a1 + 0x6b0]\n 11343: u64 [s1 + 0xd0] = a0\n 11347: a0 = u32 [a1 + 0x6b8]\n 11351: u64 [s1 + 0xc8] = a0\n 11355: a0 = s1 + 0x7ff\n 11359: a0 = a0 + 0x701\n 11363: ra = 0x140\n 11367: t0 = 0x24e\n 11371: jump @749\n      : @370 [@dyn 160] (gas: 21)\n 11374: a1 = s1 + 0x7ff\n 11378: a1 = a1 + 0x79\n 11381: a2 = a1 + 0x600\n 11385: a0 = u64 [a2 + 0x98]\n 11389: u64 [s1 + 0xe8] = a0\n 11393: a0 = u64 [a2 + 0x90]\n 11397: u64 [s1 + 0xe0] = a0\n 11401: a0 = u64 [a2 + 0x88]\n 11405: u64 [s1 + 0xd8] = a0\n 11409: u64 [a1 + 1664] = 0\n 11413: a0 = u64 [s1 + 0xc8]\n 11417: u64 [a2 + 0x78] = a0\n 11420: a0 = u64 [s1 + 0xd0]\n 11424: u64 [a2 + 0x70] = a0\n 11427: a2 = a1\n 11429: a1 = s1 + 0x7ff\n 11433: a1 = a1 + 0x6e1\n 11437: a0 = u64 [s1 + 0xf0]\n 11441: u64 [a2 + 0x668] = a0\n 11445: a0 = 0\n 11447: ra = 322, jump @19\n      : @371 [@dyn 161] (gas: 11)\n 11453: a1 = s1 + 0x7ff\n 11457: a1 = a1 + 0x79\n 11460: u64 [a1 + 1632] = 0\n 11464: u64 [a1 + 1624] = 0\n 11468: u64 [a1 + 1608] = 0x1\n 11473: a2 = a1\n 11475: a0 = 0x20\n 11478: a1 = s1 + 0x7ff\n 11482: a1 = a1 + 0x6c1\n 11486: u64 [a2 + 1616] = 0\n 11490: ra = 324, jump @19\n      : @372 [@dyn 162] (gas: 3)\n 11496: a1 = 0x200e4\n 11501: a0 = i32 [0x200e4]\n 11506: jump @374 if a0 >u 63\n      : @373 (gas: 2)\n 11510: u32 [0x200e4] = 0x40\n 11516: fallthrough\n      : @374 (gas: 15)\n 11517: a0 = sp + 0xffffffffffffffe0\n 11520: a2 = a0 & 0xffffffffffffffe0\n 11523: u64 [s1 + 0xc8] = a2\n 11527: sp = a2\n 11529: a0 = 0x200f0\n 11534: i32 a0 = a0 + 0\n 11536: i32 a2 = a2 + 0\n 11538: u64 [s1 + 0xf0] = a1\n 11542: a1 = 0x40\n 11545: u64 [s1 + 0xd0] = a0\n 11549: ra = 0x146\n 11553: ecalli 6 // 'hash_keccak_256'\n 11555: a3 = u64 [s1 + 0xc8]\n 11559: t0 = 0x148\n 11563: jump @754\n      : @375 [@dyn 163] (gas: 2)\n 11566: a3 = u64 [s1 + 0xc8]\n 11570: t0 = 328, jump @754\n      : @376 [@dyn 164] (gas: 29)\n 11576: u64 [s1 + 0xc0] = a0\n 11580: a0 = reverse a1\n 11582: u64 [s1 + 0xb8] = a0\n 11586: a0 = reverse a2\n 11588: u64 [s1 + 0xb0] = a0\n 11592: a0 = reverse a3\n 11594: u64 [s1 + 0xa8] = a0\n 11598: a0 = sp + 0xffffffffffffffe0\n 11601: a0 = a0 & 0xffffffffffffffe0\n 11604: u64 [s1 + 0xc8] = a0\n 11608: sp = a0\n 11610: a0 = u64 [s1 + 0xd8]\n 11614: a0 = a0 & 0xffffffffffffffff\n 11617: a2 = u64 [s1 + 0xe0]\n 11621: a1 = a2 & 0xffffffffffffffff\n 11624: a2 = u64 [s1 + 0xf8]\n 11628: a3 = u64 [s1 + 0xe8]\n 11632: a2 = a2 & a3\n 11635: a3 = s1 + 0x7ff\n 11639: a3 = a3 + 0x79\n 11642: u64 [a3 + 1600] = 0\n 11646: a4 = a3 + 0x600\n 11650: u64 [a4 + 0x38] = a2\n 11653: u64 [a4 + 0x30] = a1\n 11656: a1 = s1 + 0x7ff\n 11660: a1 = a1 + 0x6a1\n 11664: u64 [a4 + 0x28] = a0\n 11667: a0 = 0\n 11669: ra = 330, jump @19\n      : @377 [@dyn 165] (gas: 16)\n 11675: a0 = u64 [s1 + 0xa8]\n 11679: a1 = s1 + 0x7ff\n 11683: a1 = a1 + 0x79\n 11686: a2 = a1 + 0x600\n 11690: u64 [a2 + 0x20] = a0\n 11693: a0 = u64 [s1 + 0xb0]\n 11697: u64 [a2 + 0x18] = a0\n 11700: a0 = u64 [s1 + 0xb8]\n 11704: u64 [a2 + 0x10] = a0\n 11707: a3 = a1\n 11709: a0 = 0x20\n 11712: a1 = s1 + 0x7ff\n 11716: a1 = a1 + 0x681\n 11720: a2 = u64 [s1 + 0xc0]\n 11724: u64 [a3 + 0x608] = a2\n 11728: ra = 332, jump @19\n      : @378 [@dyn 166] (gas: 3)\n 11734: a1 = u64 [s1 + 0xf0]\n 11738: a0 = i32 [a1]\n 11740: jump @380 if a0 >u 63\n      : @379 (gas: 2)\n 11744: u32 [a1 + 0] = 0x40\n 11747: fallthrough\n      : @380 (gas: 12)\n 11748: a0 = sp + 0xffffffffffffffe0\n 11751: a0 = a0 & 0xffffffffffffffe0\n 11754: u64 [s1 + 0xf8] = a0\n 11758: sp = a0\n 11760: i32 a2 = a0 + 0\n 11762: a1 = 0x40\n 11765: a0 = u64 [s1 + 0xd0]\n 11769: ra = 0x14e\n 11773: ecalli 6 // 'hash_keccak_256'\n 11775: a3 = u64 [s1 + 0xf8]\n 11779: t0 = 0x150\n 11783: jump @734\n      : @381 [@dyn 167] (gas: 2)\n 11786: a3 = u64 [s1 + 0xf8]\n 11790: t0 = 336, jump @734\n      : @382 [@dyn 168] (gas: 8)\n 11796: a1 = u64 [s1 + 0xc8]\n 11800: u64 [a1 + 0x18] = a3\n 11803: u64 [a1 + 0x10] = a2\n 11806: u64 [a1 + 0x8] = a4\n 11809: u64 [a1] = a0\n 11811: a0 = s1 + 0x7ff\n 11815: a0 = a0 + 0x661\n 11819: ra = 338, jump @21\n      : @383 [@dyn 169] (gas: 15)\n 11825: a1 = s1 + 0x7ff\n 11829: a1 = a1 + 0x79\n 11832: a0 = u64 [a1 + 0x600]\n 11836: u64 [s1 + 0xf8] = a0\n 11840: a2 = a1 + 0x500\n 11844: a0 = u64 [a2 + 0xf8]\n 11848: u64 [s1 + 0xf0] = a0\n 11852: a0 = u64 [a2 + 0xf0]\n 11856: u64 [s1 + 0xe8] = a0\n 11860: a0 = u64 [a2 + 0xe8]\n 11864: u64 [s1 + 0xe0] = a0\n 11868: a0 = s1 + 0x7ff\n 11872: a0 = a0 + 0x641\n 11876: a1 = 0x40\n 11879: ra = 340, jump @17\n      : @384 [@dyn 170] (gas: 15)\n 11885: a3 = s1 + 0x7ff\n 11889: a3 = a3 + 0x79\n 11892: a5 = a3 + 0x500\n 11896: a0 = u64 [a5 + 0xe0]\n 11900: a1 = u64 [a5 + 0xd8]\n 11904: a2 = u64 [a5 + 0xd0]\n 11908: a4 = u64 [a5 + 0xc8]\n 11912: a0 = a0 | a2\n 11915: a2 = a4 | a1\n 11918: a2 = a2 | a0\n 11921: a2 = a2 >> 0x20\n 11924: a0 = a0 | a1\n 11927: a0 = a0 << 0x20\n 11930: a0 = a0 | a2\n 11933: jump @478 if a0 != 0\n      : @385 (gas: 15)\n 11937: a0 = u64 [s1 + 0xe0]\n 11941: a2 = a3 + 0x500\n 11945: u64 [a2 + 0xa8] = a0\n 11949: a0 = u64 [s1 + 0xe8]\n 11953: u64 [a2 + 0xb0] = a0\n 11957: a0 = u64 [s1 + 0xf0]\n 11961: u64 [a2 + 0xb8] = a0\n 11965: a1 = s1 + 0x7ff\n 11969: a1 = a1 + 0x621\n 11973: a0 = u64 [s1 + 0xf8]\n 11977: u64 [a2 + 0xc0] = a0\n 11981: a0 = a4\n 11983: u64 [s1 + 0xf8] = a4\n 11987: ra = 0x1a8\n 11991: jump @19\n      : @386 (gas: 1)\n 11994: jump @388 if a0 == 1889567281\n      : @387 (gas: 1)\n 12001: jump @516\n      : @388 (gas: 10)\n 12004: u64 [a2 + 480] = 0\n 12008: u64 [a2 + 472] = 0\n 12012: u64 [a2 + 464] = 0\n 12016: u64 [a2 + 456] = 0\n 12020: a0 = s1 + 0x1000\n 12024: i32 a0 = a0 + 0x240\n 12028: ra = 0x156\n 12032: ecalli 10 // 'value_transferred'\n 12034: t0 = 0x158\n 12038: jump @752\n      : @389 [@dyn 171] (gas: 1)\n 12041: t0 = 344, jump @752\n      : @390 [@dyn 172] (gas: 8)\n 12047: a0 = u64 [a4 + 0xd8]\n 12051: a1 = u64 [a4 + 0xe0]\n 12055: a2 = u64 [a4 + 0xd0]\n 12059: a3 = u64 [a4 + 0xc8]\n 12063: a1 = a1 | a2\n 12066: a0 = a0 | a3\n 12069: a0 = a0 | a1\n 12072: jump @392 if a0 == 0\n      : @391 (gas: 1)\n 12075: jump @521\n      : @392 (gas: 4)\n 12078: a0 = u64 [s1 + 0xf8]\n 12082: a0 = i32 [a0]\n 12084: a1 = 0x23\n 12087: jump @394 if a1 <u a0\n      : @393 (gas: 1)\n 12090: jump @522\n      : @394 (gas: 5)\n 12093: a0 = s1 + 0x7ff\n 12097: a0 = a0 + 0x281\n 12101: ra = 0x15a\n 12105: t0 = 0x244\n 12109: jump @749\n      : @395 [@dyn 173] (gas: 14)\n 12112: a3 = s1 + 0x7ff\n 12116: a3 = a3 + 0x79\n 12119: a0 = u64 [a3 + 0x208]\n 12123: a1 = u64 [a3 + 0x210]\n 12127: a2 = u32 [a3 + 0x218]\n 12131: u64 [a3 + 512] = 0\n 12135: a4 = a3 + 0x100\n 12139: u64 [a4 + 0xf8] = a2\n 12143: u64 [a4 + 0xf0] = a1\n 12147: a1 = s1 + 0x7ff\n 12151: a1 = a1 + 0x261\n 12155: u64 [a4 + 0xe8] = a0\n 12159: a0 = 0\n 12161: ra = 348, jump @19\n      : @396 [@dyn 174] (gas: 11)\n 12167: a0 = s1 + 0x7ff\n 12171: a0 = a0 + 0x79\n 12174: u64 [a0 + 480] = 0\n 12178: u64 [a0 + 472] = 0\n 12182: u64 [a0 + 464] = 0\n 12186: a2 = a0\n 12188: a0 = 0x20\n 12191: a1 = s1 + 0x7ff\n 12195: a1 = a1 + 0x241\n 12199: u64 [a2 + 456] = 0\n 12203: ra = 350, jump @19\n      : @397 [@dyn 175] (gas: 2)\n 12209: a1 = i32 [0x200e4]\n 12214: jump @399 if a1 >u 63\n      : @398 (gas: 2)\n 12218: u32 [0x200e4] = 0x40\n 12224: fallthrough\n      : @399 (gas: 28)\n 12225: a0 = sp + 0xffffffffffffffe0\n 12228: a2 = a0 & 0xffffffffffffffe0\n 12231: u64 [s1 + 0xf8] = a2\n 12235: sp = a2\n 12237: a0 = 0x200f0\n 12242: i32 a0 = a0 + 0\n 12244: i32 a2 = a2 + 0\n 12246: a1 = 0x40\n 12249: ecalli 6 // 'hash_keccak_256'\n 12251: a3 = u64 [s1 + 0xf8]\n 12255: a0 = u64 [a3 + 0x18]\n 12258: a1 = u64 [a3 + 0x10]\n 12261: a2 = u64 [a3 + 0x8]\n 12264: a3 = u64 [a3]\n 12266: a0 = reverse a0\n 12268: a1 = reverse a1\n 12270: a2 = reverse a2\n 12272: a3 = reverse a3\n 12274: a4 = s1 + 0x1078\n 12278: u64 [a4 + 0x200] = a3\n 12282: a3 = a4 + 0x100\n 12286: u64 [a3 + 0xf8] = a2\n 12290: u64 [a3 + 0xf0] = a1\n 12294: u64 [a3 + 0xe8] = a0\n 12298: a0 = s1 + 0x7ff\n 12302: a0 = a0 + 0x221\n 12306: a1 = s1 + 0x1260\n 12310: ra = 352, jump @21\n      : @400 [@dyn 176] (gas: 15)\n 12316: a1 = s1 + 0x7ff\n 12320: a1 = a1 + 0x79\n 12323: a2 = a1 + 0x100\n 12327: a0 = u64 [a2 + 0xc0]\n 12331: u64 [s1 + 0xf8] = a0\n 12335: a0 = u64 [a2 + 0xb8]\n 12339: u64 [s1 + 0xf0] = a0\n 12343: a0 = u64 [a2 + 0xb0]\n 12347: u64 [s1 + 0xe8] = a0\n 12351: a0 = u64 [a2 + 0xa8]\n 12355: u64 [s1 + 0xe0] = a0\n 12359: a0 = s1 + 0x7ff\n 12363: a0 = a0 + 0x201\n 12367: a1 = 0x40\n 12370: ra = 354, jump @17\n      : @401 [@dyn 177] (gas: 15)\n 12376: a3 = s1 + 0x7ff\n 12380: a3 = a3 + 0x79\n 12383: a5 = a3 + 0x100\n 12387: a0 = u64 [a5 + 0xa0]\n 12391: a1 = u64 [a5 + 0x98]\n 12395: a2 = u64 [a5 + 0x90]\n 12399: a4 = u64 [a5 + 0x88]\n 12403: a0 = a0 | a2\n 12406: a2 = a4 | a1\n 12409: a2 = a2 | a0\n 12412: a2 = a2 >> 0x20\n 12415: a0 = a0 | a1\n 12418: a0 = a0 << 0x20\n 12421: a0 = a0 | a2\n 12424: jump @478 if a0 != 0\n      : @402 (gas: 15)\n 12428: a0 = u64 [s1 + 0xe0]\n 12432: a2 = a3 + 0x100\n 12436: u64 [a2 + 0x68] = a0\n 12439: a0 = u64 [s1 + 0xe8]\n 12443: u64 [a2 + 0x70] = a0\n 12446: a0 = u64 [s1 + 0xf0]\n 12450: u64 [a2 + 0x78] = a0\n 12453: a1 = s1 + 0x7ff\n 12457: a1 = a1 + 0x1e1\n 12461: a0 = u64 [s1 + 0xf8]\n 12465: u64 [a2 + 0x80] = a0\n 12469: a0 = a4\n 12471: u64 [s1 + 0xf8] = a4\n 12475: ra = 0x1a8\n 12479: jump @19\n      : @403 (gas: 8)\n 12482: u64 [a2 + 64] = 0\n 12485: u64 [a2 + 56] = 0\n 12488: u64 [a2 + 48] = 0\n 12491: u64 [a2 + 40] = 0\n 12494: a0 = s1 + 0x1000\n 12498: i32 a0 = a0 + 0xa0\n 12502: ecalli 10 // 'value_transferred'\n 12504: fallthrough\n      : @404 (gas: 9)\n 12505: a3 = s1 + 0x1078\n 12509: a0 = u64 [a3 + 0x38]\n 12512: a1 = u64 [a3 + 0x40]\n 12515: a2 = u64 [a3 + 0x30]\n 12518: a3 = u64 [a3 + 0x28]\n 12521: a1 = a1 | a2\n 12524: a0 = a0 | a3\n 12527: a0 = a0 | a1\n 12530: jump @523 if a0 != 0\n      : @405 (gas: 4)\n 12534: a0 = u64 [s1 + 0xf8]\n 12538: a0 = i32 [a0]\n 12540: a1 = 0x43\n 12543: jump @524 if a1 >=u a0\n      : @406 (gas: 4)\n 12547: a0 = s1 + 0x460\n 12551: ra = 0x164\n 12555: t0 = 0x244\n 12559: jump @749\n      : @407 [@dyn 178] (gas: 35)\n 12562: a1 = s1 + 0x400\n 12566: a0 = u64 [a1 + 0x70]\n 12569: u64 [s1 + 0xd8] = a0\n 12573: a0 = u64 [a1 + 0x68]\n 12576: u64 [s1 + 0xf0] = a0\n 12580: a0 = u64 [a1 + 0x60]\n 12583: u64 [s1 + 0xf8] = a0\n 12587: a0 = sp + 0xffffffffffffffe0\n 12590: a0 = a0 & 0xffffffffffffffe0\n 12593: u64 [s1 + 0xe0] = a0\n 12597: sp = a0\n 12599: a0 = s1 + 0x1000\n 12603: i32 a0 = a0 + 0xc0\n 12607: a1 = 0x24\n 12610: ecalli 1 // 'call_data_load'\n 12612: a0 = s1 + 0x1078\n 12616: a1 = u64 [a0 + 0x60]\n 12619: a2 = u64 [a0 + 0x58]\n 12622: a3 = u64 [a0 + 0x50]\n 12625: a0 = u64 [a0 + 0x48]\n 12628: u64 [s1 + 0x90] = a1\n 12632: a4 = u64 [s1 + 0xe0]\n 12636: u64 [a4 + 0x18] = a1\n 12639: u64 [s1 + 0x88] = a2\n 12643: u64 [a4 + 0x10] = a2\n 12646: u64 [s1 + 0x80] = a3\n 12650: u64 [a4 + 0x8] = a3\n 12653: u64 [s1 + 0x78] = a0\n 12656: u64 [a4] = a0\n 12658: a0 = 0x300f0\n 12663: u64 [s1 + 0xe8] = a0\n 12667: i32 a0 = a0 + 0\n 12669: u64 [s1 + 0xd0] = a0\n 12673: ecalli 3 // 'caller'\n 12675: fallthrough\n      : @408 (gas: 7)\n 12676: a2 = u64 [s1 + 0xe8]\n 12680: a0 = u32 [a2 + 0x10]\n 12683: a1 = u64 [a2]\n 12685: a2 = u64 [a2 + 0x8]\n 12688: a0 = a0 | a1\n 12691: a0 = a0 | a2\n 12694: jump @525 if a0 == 0\n      : @409 (gas: 9)\n 12698: a0 = u64 [s1 + 0xd8]\n 12702: a0 = a0 << 0x20\n 12705: a1 = a0 >> 0x20\n 12708: a0 = u64 [s1 + 0xf0]\n 12712: a2 = u64 [s1 + 0xf8]\n 12716: a0 = a0 | a2\n 12719: u64 [s1 + 0xd8] = a1\n 12723: a0 = a0 | a1\n 12726: jump @530 if a0 == 0\n      : @410 (gas: 4)\n 12730: a0 = u64 [s1 + 0xd0]\n 12734: ra = 0x166\n 12738: ecalli 3 // 'caller'\n 12740: fallthrough\n      : @411 [@dyn 179] (gas: 5)\n 12741: a2 = u64 [s1 + 0xe8]\n 12745: a0 = u64 [a2 + 0x8]\n 12748: a1 = i32 [a2 + 0x10]\n 12751: a2 = u64 [a2]\n 12753: t0 = 360, jump @732\n      : @412 [@dyn 180] (gas: 7)\n 12759: u64 [s1 + 1112] = 0\n 12763: u64 [s1 + 0x450] = a1\n 12767: u64 [s1 + 0x448] = a0\n 12771: a1 = s1 + 0x440\n 12775: u64 [s1 + 0x440] = a3\n 12779: a0 = 0\n 12781: ra = 362, jump @19\n      : @413 [@dyn 181] (gas: 7)\n 12787: u64 [s1 + 1080] = 0\n 12791: u64 [s1 + 1072] = 0\n 12795: u64 [s1 + 1056] = 0x1\n 12800: a0 = 0x20\n 12803: a1 = s1 + 0x420\n 12807: u64 [s1 + 1064] = 0\n 12811: ra = 364, jump @19\n      : @414 [@dyn 182] (gas: 3)\n 12817: a1 = 0x200e4\n 12822: a0 = i32 [0x200e4]\n 12827: jump @416 if a0 >u 63\n      : @415 (gas: 2)\n 12831: u32 [0x200e4] = 0x40\n 12837: fallthrough\n      : @416 (gas: 15)\n 12838: a0 = sp + 0xffffffffffffffe0\n 12841: a2 = a0 & 0xffffffffffffffe0\n 12844: u64 [s1 + 0xb8] = a2\n 12848: sp = a2\n 12850: a0 = 0x200f0\n 12855: i32 a0 = a0 + 0\n 12857: i32 a2 = a2 + 0\n 12859: u64 [s1 + 0xc8] = a1\n 12863: a1 = 0x40\n 12866: u64 [s1 + 0xc0] = a0\n 12870: ra = 0x16e\n 12874: ecalli 6 // 'hash_keccak_256'\n 12876: a3 = u64 [s1 + 0xb8]\n 12880: t0 = 0x170\n 12884: jump @754\n      : @417 [@dyn 183] (gas: 2)\n 12887: a3 = u64 [s1 + 0xb8]\n 12891: t0 = 368, jump @754\n      : @418 [@dyn 184] (gas: 22)\n 12897: u64 [s1 + 0xb0] = a0\n 12901: a0 = reverse a1\n 12903: u64 [s1 + 0xa8] = a0\n 12907: a0 = reverse a2\n 12909: u64 [s1 + 0xa0] = a0\n 12913: a0 = reverse a3\n 12915: u64 [s1 + 0x98] = a0\n 12919: a0 = sp + 0xffffffffffffffe0\n 12922: a0 = a0 & 0xffffffffffffffe0\n 12925: u64 [s1 + 0xb8] = a0\n 12929: sp = a0\n 12931: u64 [s1 + 1048] = 0\n 12935: a0 = u64 [s1 + 0xd8]\n 12939: a2 = s1 + 0x400\n 12943: u64 [a2 + 0x10] = a0\n 12946: a0 = u64 [s1 + 0xf0]\n 12950: u64 [a2 + 0x8] = a0\n 12953: a1 = s1 + 0x400\n 12957: a0 = u64 [s1 + 0xf8]\n 12961: u64 [a2] = a0\n 12963: a0 = 0\n 12965: ra = 370, jump @19\n      : @419 [@dyn 185] (gas: 12)\n 12971: a0 = u64 [s1 + 0x98]\n 12975: a3 = s1 + 0x300\n 12979: u64 [a3 + 0xf8] = a0\n 12983: a0 = u64 [s1 + 0xa0]\n 12987: u64 [a3 + 0xf0] = a0\n 12991: a0 = u64 [s1 + 0xa8]\n 12995: u64 [a3 + 0xe8] = a0\n 12999: a0 = 0x20\n 13002: a1 = s1 + 0x3e0\n 13006: a2 = u64 [s1 + 0xb0]\n 13010: u64 [a3 + 0xe0] = a2\n 13014: ra = 372, jump @19\n      : @420 [@dyn 186] (gas: 3)\n 13020: a1 = u64 [s1 + 0xc8]\n 13024: a0 = i32 [a1]\n 13026: jump @422 if a0 >u 63\n      : @421 (gas: 2)\n 13030: u32 [a1 + 0] = 0x40\n 13033: fallthrough\n      : @422 (gas: 24)\n 13034: a0 = sp + 0xffffffffffffffe0\n 13037: a0 = a0 & 0xffffffffffffffe0\n 13040: u64 [s1 + 0xc8] = a0\n 13044: sp = a0\n 13046: i32 a2 = a0 + 0\n 13048: a1 = 0x40\n 13051: a0 = u64 [s1 + 0xc0]\n 13055: ecalli 6 // 'hash_keccak_256'\n 13057: a3 = u64 [s1 + 0xc8]\n 13061: a0 = u64 [a3 + 0x18]\n 13064: a1 = u64 [a3 + 0x10]\n 13067: a2 = u64 [a3 + 0x8]\n 13070: a3 = u64 [a3]\n 13072: a4 = reverse a0\n 13074: a1 = reverse a1\n 13076: a2 = reverse a2\n 13078: a3 = reverse a3\n 13080: a0 = u64 [s1 + 0xb8]\n 13084: u64 [a0 + 0x18] = a3\n 13087: u64 [a0 + 0x10] = a2\n 13090: u64 [a0 + 0x8] = a1\n 13093: u64 [a0] = a4\n 13095: a1 = u64 [s1 + 0xe0]\n 13099: ra = 374, jump @22\n      : @423 [@dyn 187] (gas: 3)\n 13105: a0 = s1 + 0x3c0\n 13109: a1 = 0x40\n 13112: ra = 376, jump @17\n      : @424 [@dyn 188] (gas: 13)\n 13118: a4 = s1 + 0x300\n 13122: a0 = u64 [a4 + 0xd8]\n 13126: a1 = u64 [a4 + 0xd0]\n 13130: a2 = u64 [a4 + 0xc8]\n 13134: a3 = u64 [a4 + 0xc0]\n 13138: a0 = a0 | a2\n 13141: a2 = a3 | a1\n 13144: a2 = a2 | a0\n 13147: a2 = a2 >> 0x20\n 13150: a0 = a0 | a1\n 13153: a0 = a0 << 0x20\n 13156: a0 = a0 | a2\n 13159: jump @478 if a0 != 0\n      : @425 (gas: 12)\n 13163: a0 = u64 [s1 + 0x78]\n 13166: u64 [s1 + 0x3a0] = a0\n 13170: a0 = u64 [s1 + 0x80]\n 13174: u64 [s1 + 0x3a8] = a0\n 13178: a0 = u64 [s1 + 0x88]\n 13182: u64 [s1 + 0x3b0] = a0\n 13186: a1 = s1 + 0x3a0\n 13190: a0 = u64 [s1 + 0x90]\n 13194: u64 [s1 + 0x3b8] = a0\n 13198: a0 = a3\n 13200: u64 [s1 + 0xe0] = a3\n 13204: ra = 378, jump @19\n      : @426 [@dyn 189] (gas: 6)\n 13210: a0 = u64 [s1 + 0xd0]\n 13214: ra = 0x17c\n 13218: ecalli 3 // 'caller'\n 13220: a2 = u64 [s1 + 0xe8]\n 13224: t0 = 0x17e\n 13228: jump @753\n      : @427 [@dyn 190] (gas: 2)\n 13231: a2 = u64 [s1 + 0xe8]\n 13235: t0 = 382, jump @753\n      : @428 [@dyn 191] (gas: 31)\n 13241: t0 = a1 | a0\n 13244: a3 = a3 >> 0x20\n 13247: a2 = reverse a2\n 13249: a1 = a2 << 0x20\n 13252: a1 = a1 | a3\n 13255: a2 = a2 >> 0x20\n 13258: u64 [s1 + 856] = 0\n 13262: a0 = u64 [s1 + 0xd8]\n 13266: u64 [s1 + 0x350] = a0\n 13270: a0 = u64 [s1 + 0xf0]\n 13274: u64 [s1 + 0x348] = a0\n 13278: a0 = u64 [s1 + 0xf8]\n 13282: u64 [s1 + 0x340] = a0\n 13286: u64 [s1 + 888] = 0\n 13290: a3 = u64 [0x20080]\n 13295: a4 = u64 [0x20088]\n 13300: a5 = u64 [0x20090]\n 13305: a0 = u64 [0x20098]\n 13310: u64 [s1 + 0x398] = a3\n 13314: u64 [s1 + 0x390] = a4\n 13318: u64 [s1 + 0x388] = a5\n 13322: u64 [s1 + 0x380] = a0\n 13326: u64 [s1 + 0x370] = a2\n 13330: u64 [s1 + 0x368] = a1\n 13334: a1 = 0x20\n 13337: a2 = s1 + 0x380\n 13341: a3 = s1 + 0x360\n 13345: a4 = s1 + 0x340\n 13349: u64 [s1 + 0x360] = t0\n 13353: a0 = u64 [s1 + 0xe0]\n 13357: ra = 384, jump @23\n      : @429 [@dyn 192] (gas: 3)\n 13363: a0 = s1 + 0x320\n 13367: a1 = 0x40\n 13370: ra = 386, jump @17\n      : @430 [@dyn 193] (gas: 6)\n 13376: a4 = s1 + 0x300\n 13380: a3 = u64 [a4 + 0x38]\n 13383: a1 = u64 [a4 + 0x30]\n 13386: a2 = u64 [a4 + 0x28]\n 13389: a0 = u64 [a4 + 0x20]\n 13392: t0 = 388, jump @738\n      : @431 [@dyn 194] (gas: 1)\n 13398: jump @478 if a1 != 0\n      : @432 (gas: 8)\n 13402: u64 [s1 + 792] = 0\n 13406: u64 [s1 + 784] = 0\n 13410: u64 [s1 + 776] = 0\n 13414: a1 = s1 + 0x300\n 13418: u64 [s1 + 768] = 0x1\n 13423: u64 [s1 + 0xf8] = a0\n 13427: ra = 0x1a8\n 13431: jump @19\n      : @433 (gas: 8)\n 13434: u64 [a2 + 0] = 0\n 13436: u64 [a2 + 4294967288] = 0\n 13439: u64 [a2 + 4294967280] = 0\n 13442: u64 [a2 + 4294967272] = 0\n 13445: a0 = s1 + 0x1000\n 13449: i32 a0 = a0 + 0x60\n 13452: ecalli 10 // 'value_transferred'\n 13454: fallthrough\n      : @434 (gas: 10)\n 13455: a3 = s1 + 0x1078\n 13459: a4 = a3 + 0xffffffffffffff00\n 13463: a0 = u64 [a4 + 0xf8]\n 13467: a1 = u64 [a3]\n 13469: a2 = u64 [a4 + 0xf0]\n 13473: a3 = u64 [a4 + 0xe8]\n 13477: a1 = a1 | a2\n 13480: a0 = a0 | a3\n 13483: a0 = a0 | a1\n 13486: jump @535 if a0 != 0\n      : @435 (gas: 3)\n 13490: a0 = u64 [s1 + 0xf8]\n 13494: a1 = i32 [a0]\n 13496: jump @536 if a1 <=u 3\n      : @436 (gas: 8)\n 13501: a1 = s1 + 0x1078\n 13505: u64 [a1 + 32] = 0\n 13508: u64 [a1 + 24] = 0\n 13511: u64 [a1 + 16] = 0\n 13514: u64 [a1 + 8] = 0x3\n 13518: a0 = s1 + 0x260\n 13522: a1 = s1 + 0x1080\n 13526: ra = 390, jump @21\n      : @437 [@dyn 195] (gas: 34)\n 13532: a1 = s1 + 0x200\n 13536: a2 = u64 [a1 + 0x70]\n 13539: a3 = u64 [a1 + 0x68]\n 13542: a5 = u64 [a1 + 0x78]\n 13545: a0 = u64 [a1 + 0x60]\n 13548: a4 = a2 << 0x3f\n 13551: a1 = a3 >> 0x1\n 13554: t0 = a1 | a4\n 13557: a1 = a5 << 0x3f\n 13560: u64 [s1 + 0xf0] = a2\n 13564: a2 = a2 >> 0x1\n 13567: a1 = a1 | a2\n 13570: u64 [s1 + 0xe0] = a3\n 13574: a2 = a3 << 0x3f\n 13577: a3 = a0 >> 0x1\n 13580: a4 = a3 | a2\n 13583: u64 [s1 + 0xe8] = a5\n 13587: t1 = a5 >> 0x1\n 13590: u64 [s1 + 0xd0] = a0\n 13594: a5 = a0 & 0x1\n 13597: a3 = -a5\n 13599: t2 = a3 & a1\n 13602: a2 = a3 & t0\n 13605: a3 = a3 & t1\n 13608: a0 = a4 & 0x7f\n 13611: u64 [s1 + 0xd8] = a0\n 13615: a4 = a0 if a5 == 0\n 13618: a0 = a4 <u 0x20\n 13621: a0 = 0 if a2 != 0\n 13623: a1 = t2 | a3\n 13626: a0 = 0 if a1 != 0\n 13628: u64 [s1 + 0xf8] = a5\n 13632: a1 = a5 <u 0x1\n 13635: jump @537 if a1 != a0\n      : @438 (gas: 12)\n 13639: u64 [s1 + 0xb8] = a4\n 13643: a5 = s1 + 0x200\n 13647: u64 [a5 + 0x40] = a4\n 13650: u64 [s1 + 0xa8] = a2\n 13654: u64 [a5 + 0x48] = a2\n 13657: u64 [s1 + 0xb0] = t2\n 13661: u64 [s1 + 0x250] = t2\n 13665: a0 = 0x80\n 13669: a1 = s1 + 0x240\n 13673: u64 [s1 + 0xa0] = a3\n 13677: u64 [a5 + 0x58] = a3\n 13680: ra = 392, jump @19\n      : @439 [@dyn 196] (gas: 2)\n 13686: a0 = u64 [s1 + 0xf8]\n 13690: jump @466 if a0 != 0\n      : @440 (gas: 13)\n 13694: a0 = u64 [s1 + 0xd0]\n 13698: a0 = a0 & 0xffffffffffffff00\n 13702: a1 = u64 [s1 + 0xe0]\n 13706: a2 = s1 + 0x100\n 13710: u64 [a2 + 0xc8] = a1\n 13714: u64 [a2 + 0xc0] = a0\n 13718: a0 = u64 [s1 + 0xf0]\n 13722: u64 [a2 + 0xd0] = a0\n 13726: a0 = u64 [s1 + 0xe8]\n 13730: u64 [a2 + 0xd8] = a0\n 13734: a0 = 0xa0\n 13738: a1 = s1 + 0x1c0\n 13742: ra = 394, jump @19\n      : @441 [@dyn 197] (gas: 7)\n 13748: a1 = 0\n 13750: a0 = 0\n 13752: t0 = 0\n 13754: a3 = 0xc0\n 13758: a2 = u64 [s1 + 0xd8]\n 13762: a3 = 0xa0 if a2 == 0\n 13766: jump @474\n      : @442 (gas: 11)\n 13769: a0 = s1 + 0x1078\n 13773: u64 [a0 + 672] = 0\n 13777: u64 [a0 + 664] = 0\n 13781: u64 [a0 + 656] = 0\n 13785: u64 [a0 + 648] = 0\n 13789: a0 = s1 + 0x1000\n 13793: i32 a0 = a0 + 0x300\n 13797: ra = 0x18c\n 13801: ecalli 10 // 'value_transferred'\n 13803: t0 = 0x18e\n 13807: jump @750\n      : @443 [@dyn 198] (gas: 1)\n 13810: t0 = 398, jump @750\n      : @444 [@dyn 199] (gas: 8)\n 13816: a0 = u64 [a4 + 0x98]\n 13820: a1 = u64 [a4 + 0xa0]\n 13824: a2 = u64 [a4 + 0x90]\n 13828: a3 = u64 [a4 + 0x88]\n 13832: a1 = a1 | a2\n 13835: a0 = a0 | a3\n 13838: a0 = a0 | a1\n 13841: jump @543 if a0 != 0\n      : @445 (gas: 3)\n 13845: a0 = u64 [s1 + 0xf8]\n 13849: a0 = i32 [a0]\n 13851: jump @544 if a0 <=u 3\n      : @446 (gas: 9)\n 13856: a1 = s1 + 0x1078\n 13860: u64 [a1 + 704] = 0\n 13864: u64 [a1 + 696] = 0\n 13868: u64 [a1 + 688] = 0\n 13872: u64 [a1 + 680] = 0x5\n 13877: a0 = s1 + 0x7ff\n 13881: a0 = a0 + 0x361\n 13885: a1 = s1 + 0x1320\n 13889: ra = 400, jump @21\n      : @447 [@dyn 200] (gas: 13)\n 13895: a1 = s1 + 0x7ff\n 13899: a1 = a1 + 0x79\n 13902: a2 = a1 + 0x200\n 13906: a0 = u64 [a2 + 0xf8]\n 13910: u64 [s1 + 0xe8] = a0\n 13914: a0 = u64 [a2 + 0xf0]\n 13918: u64 [s1 + 0xf8] = a0\n 13922: a0 = u64 [a2 + 0xe8]\n 13926: u64 [s1 + 0xf0] = a0\n 13930: a0 = s1 + 0x7ff\n 13934: a0 = a0 + 0x341\n 13938: a1 = 0x40\n 13941: ra = 402, jump @17\n      : @448 [@dyn 201] (gas: 8)\n 13947: a3 = s1 + 0x7ff\n 13951: a3 = a3 + 0x79\n 13954: a5 = a3 + 0x200\n 13958: a4 = u64 [a5 + 0xe0]\n 13962: a1 = u64 [a5 + 0xd8]\n 13966: a2 = u64 [a5 + 0xd0]\n 13970: a0 = u64 [a5 + 0xc8]\n 13974: t0 = 404, jump @745\n      : @449 [@dyn 202] (gas: 1)\n 13980: jump @478 if a1 != 0\n      : @450 (gas: 15)\n 13984: a1 = u64 [s1 + 0xe8]\n 13988: a1 = a1 << 0x20\n 13991: a2 = a1 >> 0x20\n 13994: u64 [a3 + 704] = 0\n 13998: a1 = u64 [s1 + 0xf0]\n 14002: a4 = a3 + 0x200\n 14006: u64 [a4 + 0xa8] = a1\n 14010: a1 = u64 [s1 + 0xf8]\n 14014: u64 [a4 + 0xb0] = a1\n 14018: a1 = s1 + 0x7ff\n 14022: a1 = a1 + 0x321\n 14026: u64 [a4 + 0xb8] = a2\n 14030: u64 [s1 + 0xf8] = a0\n 14034: ra = 0x1a8\n 14038: jump @19\n      : @451 (gas: 10)\n 14041: u64 [a2 + 800] = 0\n 14045: u64 [a2 + 792] = 0\n 14049: u64 [a2 + 784] = 0\n 14053: u64 [a2 + 776] = 0\n 14057: a0 = s1 + 0x1000\n 14061: i32 a0 = a0 + 0x380\n 14065: ra = 0x196\n 14069: ecalli 10 // 'value_transferred'\n 14071: t0 = 0x198\n 14075: jump @751\n      : @452 [@dyn 203] (gas: 1)\n 14078: t0 = 408, jump @751\n      : @453 [@dyn 204] (gas: 1)\n 14084: t0 = 410, jump @757\n      : @454 [@dyn 205] (gas: 1)\n 14090: jump @545 if a0 != 0\n      : @455 (gas: 4)\n 14094: a0 = u64 [s1 + 0xf8]\n 14098: a0 = i32 [a0]\n 14100: a1 = 0x43\n 14103: jump @546 if a1 >=u a0\n      : @456 (gas: 5)\n 14107: a0 = s1 + 0x7ff\n 14111: a0 = a0 + 0x601\n 14115: ra = 0x19c\n 14119: t0 = 0x244\n 14123: jump @749\n      : @457 [@dyn 206] (gas: 33)\n 14126: a1 = s1 + 0x7ff\n 14130: a1 = a1 + 0x79\n 14133: a2 = a1 + 0x500\n 14137: a0 = u64 [a2 + 0x88]\n 14141: u64 [s1 + 0xf8] = a0\n 14145: a0 = u64 [a2 + 0x90]\n 14149: u64 [s1 + 0xf0] = a0\n 14153: a0 = u64 [a2 + 0x98]\n 14157: u64 [s1 + 0xe8] = a0\n 14161: a0 = u64 [a2 + 0xa0]\n 14165: u64 [s1 + 0xe0] = a0\n 14169: a0 = s1 + 0x1000\n 14173: i32 a0 = a0 + 0x3a0\n 14177: a1 = 0x24\n 14180: ecalli 1 // 'call_data_load'\n 14182: a0 = s1 + 0x1078\n 14186: a2 = a0 + 0x300\n 14190: a1 = u64 [a2 + 0x28]\n 14193: u64 [s1 + 0xd8] = a1\n 14197: a1 = u64 [a2 + 0x30]\n 14200: u64 [s1 + 0xd0] = a1\n 14204: a1 = u64 [a2 + 0x38]\n 14207: u64 [s1 + 0xc8] = a1\n 14211: a0 = u64 [a2 + 0x40]\n 14214: u64 [s1 + 0xc0] = a0\n 14218: a0 = 0x300f0\n 14223: u64 [s1 + 0xb8] = a0\n 14227: i32 a0 = a0 + 0\n 14229: ra = 0x19e\n 14233: ecalli 3 // 'caller'\n 14235: a2 = u64 [s1 + 0xb8]\n 14239: t0 = 0x1a0\n 14243: jump @736\n      : @458 [@dyn 207] (gas: 2)\n 14246: a2 = u64 [s1 + 0xb8]\n 14250: t0 = 416, jump @736\n      : @459 [@dyn 208] (gas: 30)\n 14256: a3 = s1 + 0x7ff\n 14260: a3 = a3 + 0x79\n 14263: a4 = u64 [s1 + 0xc0]\n 14267: a5 = a3 + 0x500\n 14271: u64 [a5 + 0x40] = a4\n 14274: a4 = u64 [s1 + 0xc8]\n 14278: u64 [a5 + 0x38] = a4\n 14281: a4 = u64 [s1 + 0xd0]\n 14285: u64 [a5 + 0x30] = a4\n 14288: a4 = u64 [s1 + 0xd8]\n 14292: u64 [a5 + 0x28] = a4\n 14295: a4 = u64 [s1 + 0xe0]\n 14299: u64 [a5 + 0x60] = a4\n 14302: a4 = u64 [s1 + 0xe8]\n 14306: u64 [a5 + 0x58] = a4\n 14309: a4 = u64 [s1 + 0xf0]\n 14313: u64 [a5 + 0x50] = a4\n 14316: a4 = u64 [s1 + 0xf8]\n 14320: u64 [a5 + 0x48] = a4\n 14323: u64 [a5 + 0x78] = a2\n 14326: u64 [a5 + 0x70] = a0\n 14329: u64 [a5 + 0x68] = a1\n 14332: a0 = s1 + 0x7ff\n 14336: a0 = a0 + 0x5e1\n 14340: a1 = s1 + 0x7ff\n 14344: a1 = a1 + 0x5c1\n 14348: a2 = s1 + 0x7ff\n 14352: a2 = a2 + 0x5a1\n 14356: u64 [a3 + 1408] = 0\n 14360: ra = 418, jump @669\n      : @460 [@dyn 209] (gas: 4)\n 14366: a0 = s1 + 0x7ff\n 14370: a0 = a0 + 0x581\n 14374: a1 = 0x40\n 14377: ra = 420, jump @17\n      : @461 [@dyn 210] (gas: 8)\n 14383: a3 = s1 + 0x7ff\n 14387: a3 = a3 + 0x79\n 14390: a5 = a3 + 0x500\n 14394: a4 = u64 [a5 + 0x20]\n 14397: a1 = u64 [a5 + 0x18]\n 14400: a2 = u64 [a5 + 0x10]\n 14403: a0 = u64 [a5 + 0x8]\n 14406: t0 = 422, jump @745\n      : @462 [@dyn 211] (gas: 1)\n 14412: jump @478 if a1 != 0\n      : @463 (gas: 8)\n 14416: u64 [a3 + 1280] = 0\n 14420: u64 [a3 + 1272] = 0\n 14424: u64 [a3 + 1256] = 0x1\n 14429: a1 = s1 + 0x7ff\n 14433: a1 = a1 + 0x561\n 14437: u64 [a3 + 1264] = 0\n 14441: u64 [s1 + 0xf8] = a0\n 14445: ra = 424, jump @19\n      : @464 [@dyn 212] (gas: 3)\n 14451: a1 = 0x20\n 14454: a0 = u64 [s1 + 0xf8]\n 14458: ra = 426, jump @26\n      : @465 [@dyn 213] (gas: 5)\n 14464: i32 a1 = a0 + 0\n 14466: a2 = 0x20\n 14469: a0 = 0\n 14471: ecalli 7 // 'seal_return'\n 14473: fallthrough\n      : @466 (gas: 7)\n 14474: u64 [s1 + 568] = 0\n 14478: u64 [s1 + 560] = 0\n 14482: u64 [s1 + 552] = 0\n 14486: a1 = s1 + 0x220\n 14490: u64 [s1 + 544] = 0x3\n 14495: a0 = 0\n 14497: ra = 428, jump @19\n      : @467 [@dyn 214] (gas: 21)\n 14503: a0 = sp + 0xffffffffffffffe0\n 14506: a1 = a0 & 0xffffffffffffffe0\n 14509: sp = a1\n 14511: u64 [s1 + 248] = 0\n 14515: a5 = 0\n 14517: t2 = 0\n 14519: t0 = 0\n 14521: t1 = u64 [0x200a0]\n 14526: a2 = u64 [0x200a8]\n 14531: ra = u64 [0x200b0]\n 14536: a0 = u64 [0x200b8]\n 14541: u64 [a1 + 0x18] = t1\n 14544: u64 [s1 + 0xd0] = a2\n 14548: u64 [a1 + 0x10] = a2\n 14551: u64 [a1 + 0x8] = ra\n 14554: a2 = a0\n 14556: u64 [a1] = a0\n 14558: a0 = 0xffffff60\n 14568: u64 [s1 + 0x98] = a0\n 14572: u64 [s1 + 0x90] = a1\n 14576: fallthrough\n      : @468 (gas: 19)\n 14577: u64 [s1 + 0xd8] = a2\n 14581: a0 = u64 [s1 + 0xb8]\n 14585: a2 = u64 [s1 + 0xf8]\n 14589: a0 = a2 <u a0\n 14592: a2 = u64 [s1 + 0xa8]\n 14596: a3 = a5 ^ a2\n 14599: u64 [s1 + 0xf0] = a5\n 14603: a2 = a5 <u a2\n 14606: a2 = a0 if a3 == 0\n 14609: a4 = u64 [s1 + 0xb0]\n 14613: a0 = t2 <u a4\n 14616: a3 = u64 [s1 + 0xa0]\n 14620: a5 = t0 ^ a3\n 14623: a3 = t0 <u a3\n 14626: a3 = a0 if a5 == 0\n 14629: a0 = t2 ^ a4\n 14632: a0 = a0 | a5\n 14635: a3 = a2 if a0 == 0\n 14638: jump @473 if a3 == 0\n      : @469 (gas: 6)\n 14642: a0 = s1 + 0x200\n 14646: u64 [s1 + 0xe8] = t0\n 14650: u64 [s1 + 0xc8] = t1\n 14654: u64 [s1 + 0xe0] = t2\n 14658: u64 [s1 + 0xc0] = ra\n 14662: ra = 430, jump @21\n      : @470 [@dyn 215] (gas: 10)\n 14668: a5 = u64 [s1 + 0xe0]\n 14672: a0 = u64 [s1 + 0xe8]\n 14676: a0 = a0 | a5\n 14679: a1 = u64 [s1 + 0xf8]\n 14683: a2 = u64 [s1 + 0x98]\n 14687: a1 = a1 <u a2\n 14690: a2 = u64 [s1 + 0xf0]\n 14694: a1 = 0 if a2 != 0\n 14696: a1 = 0 if a0 != 0\n 14698: jump @478 if a1 == 0\n      : @471 (gas: 14)\n 14702: t0 = u64 [s1 + 0x218]\n 14706: a0 = s1 + 0x200\n 14710: a1 = u64 [a0 + 0x10]\n 14713: a3 = u64 [a0 + 0x8]\n 14716: a4 = u64 [a0]\n 14718: a0 = u64 [s1 + 0xf8]\n 14722: i32 a0 = a0 + 0xa0\n 14726: a2 = s1 + 0x100\n 14730: u64 [a2 + 0xe0] = a4\n 14734: u64 [a2 + 0xe8] = a3\n 14738: u64 [a2 + 0xf0] = a1\n 14742: a1 = s1 + 0x1e0\n 14746: u64 [s1 + 0x1f8] = t0\n 14750: ra = 432, jump @19\n      : @472 [@dyn 216] (gas: 36)\n 14756: t0 = u64 [s1 + 0xe8]\n 14760: a5 = u64 [s1 + 0xd8]\n 14764: a5 = a5 + 0x1\n 14767: a0 = a5 <u 0x1\n 14770: ra = u64 [s1 + 0xc0]\n 14774: ra = ra + a0\n 14777: a0 = a5 | ra\n 14780: a0 = a0 <u 0x1\n 14783: a1 = u64 [s1 + 0xd0]\n 14787: a0 = a0 + a1\n 14790: a1 = a0 <u a1\n 14793: a3 = u64 [s1 + 0xc8]\n 14797: a3 = a3 + a1\n 14800: a1 = u64 [s1 + 0xf8]\n 14804: t1 = a1 + 0x20\n 14807: a2 = t1 <u a1\n 14810: a4 = u64 [s1 + 0xf0]\n 14814: t2 = a4 + a2\n 14817: a4 = t2 <u a4\n 14820: a4 = a2 if a2 == 0\n 14823: a1 = u64 [s1 + 0xe0]\n 14827: a4 = a4 + a1\n 14830: a2 = a4 <u a1\n 14833: t0 = t0 + a2\n 14836: a1 = u64 [s1 + 0x90]\n 14840: u64 [a1 + 0x8] = ra\n 14843: a2 = a5\n 14845: u64 [a1] = a5\n 14847: u64 [a1 + 0x10] = a0\n 14850: u64 [a1 + 0x18] = a3\n 14853: u64 [s1 + 0xd0] = a0\n 14857: u64 [s1 + 0xf8] = t1\n 14861: a5 = t2\n 14863: t2 = a4\n 14865: t1 = a3\n 14867: jump @468\n      : @473 (gas: 11)\n 14870: a0 = u64 [s1 + 0xf8]\n 14874: a3 = a0 + 0xa0\n 14878: a0 = a3 <u a0\n 14881: a2 = u64 [s1 + 0xf0]\n 14885: a1 = a2 + a0\n 14888: a2 = a1 <u a2\n 14891: a2 = a0 if a0 == 0\n 14894: a0 = t2 + a2\n 14897: a2 = a0 <u t2\n 14900: t0 = t0 + a2\n 14903: fallthrough\n      : @474 (gas: 37)\n 14904: t1 = a3 + 0xffffffffffffff9f\n 14907: a3 = t1 <u a3\n 14910: a5 = a1 + a3\n 14913: a5 = a5 + 0xffffffffffffffff\n 14916: u64 [s1 + 0xd8] = a5\n 14920: a2 = a5 ^ a1\n 14923: a1 = a5 <u a1\n 14926: a1 = a3 if a2 == 0\n 14929: a3 = a0 + 0xffffffffffffffff\n 14932: a4 = a3 + a1\n 14935: a1 = a4 <u a3\n 14938: a0 = a0 <u 0x1\n 14941: a2 = t0 - a0\n 14944: t0 = a2 + a1\n 14947: u64 [s1 + 0xc0] = t0\n 14951: a0 = t1 & 0xffffffffffffffe0\n 14954: u64 [s1 + 0xd0] = a0\n 14958: a3 = a0 + 0x80\n 14962: u64 [s1 + 0xf8] = a3\n 14966: a0 = a3 <u a0\n 14969: a2 = a5 + a0\n 14972: u64 [s1 + 0xf0] = a2\n 14976: a1 = a2 <u a5\n 14979: a1 = a0 if a0 == 0\n 14982: u64 [s1 + 0xc8] = a4\n 14986: a1 = a1 + a4\n 14989: u64 [s1 + 0xe8] = a1\n 14993: a0 = a1 <u a4\n 14996: t0 = t0 + a0\n 14999: u64 [s1 + 0xe0] = t0\n 15003: u64 [s1 + 0x1a0] = a3\n 15007: u64 [s1 + 0x1a8] = a2\n 15011: u64 [s1 + 0x1b0] = a1\n 15015: a0 = 0x40\n 15018: a1 = s1 + 0x1a0\n 15022: u64 [s1 + 0x1b8] = t0\n 15026: ra = 434, jump @19\n      : @475 [@dyn 217] (gas: 17)\n 15032: u64 [s1 + 344] = 0\n 15036: u64 [s1 + 336] = 0\n 15040: u64 [s1 + 328] = 0\n 15044: a4 = s1 + 0x100\n 15048: u64 [a4 + 64] = 0x80\n 15053: a0 = u64 [s1 + 0xe0]\n 15057: u64 [a4 + 0x78] = a0\n 15060: a0 = u64 [s1 + 0xe8]\n 15064: u64 [a4 + 0x70] = a0\n 15067: a0 = u64 [s1 + 0xf0]\n 15071: u64 [a4 + 0x68] = a0\n 15074: a0 = s1 + 0x180\n 15078: a1 = s1 + 0x160\n 15082: a2 = s1 + 0x140\n 15086: a3 = u64 [s1 + 0xf8]\n 15090: u64 [a4 + 0x60] = a3\n 15093: ra = 436, jump @640\n      : @476 [@dyn 218] (gas: 10)\n 15099: a0 = u64 [s1 + 0xc8]\n 15103: a1 = u64 [s1 + 0xc0]\n 15107: a0 = a0 | a1\n 15110: a1 = 0xffffff80\n 15120: a2 = u64 [s1 + 0xd0]\n 15124: a1 = a2 <u a1\n 15127: a2 = u64 [s1 + 0xd8]\n 15131: a1 = 0 if a2 != 0\n 15133: a1 = 0 if a0 != 0\n 15135: jump @478 if a1 == 0\n      : @477 (gas: 30)\n 15138: ra = u64 [s1 + 0x190]\n 15142: a1 = u64 [s1 + 0x198]\n 15146: t1 = u64 [s1 + 0x180]\n 15150: a3 = u64 [s1 + 0x188]\n 15154: a2 = u64 [s1 + 0xe8]\n 15158: a4 = ra <u a2\n 15161: a1 = a1 - a4\n 15164: a0 = u64 [s1 + 0xe0]\n 15168: t0 = a1 - a0\n 15171: a1 = u64 [s1 + 0xf0]\n 15175: a4 = a3 ^ a1\n 15178: a5 = a3 <u a1\n 15181: a0 = u64 [s1 + 0xf8]\n 15185: t2 = t1 <u a0\n 15188: a5 = t2 if a4 == 0\n 15191: a2 = ra - a2\n 15194: a4 = a2 <u a5\n 15197: a4 = t0 - a4\n 15200: a5 = a2 - a5\n 15203: a3 = a3 - t2\n 15206: a3 = a3 - a1\n 15209: a1 = t1 - a0\n 15212: a2 = a1 | a5\n 15215: a3 = a3 | a4\n 15218: a2 = a2 | a3\n 15221: a2 = a2 >> 0x20\n 15224: a3 = a3 | a5\n 15227: a3 = a3 << 0x20\n 15230: a2 = a2 | a3\n 15233: jump @571 if a2 == 0\n      : @478 (gas: 1)\n 15237: trap\n      : @479 (gas: 10)\n 15238: a2 = s1 + 0x7ff\n 15242: a2 = a2 + 0x79\n 15245: u64 [a2 + 1152] = 0\n 15249: u64 [a2 + 1144] = 0\n 15253: u64 [a2 + 1136] = 0\n 15257: a1 = s1 + 0x7ff\n 15261: a1 = a1 + 0x4e1\n 15265: u64 [a2 + 1128] = 0x4\n 15270: a0 = 0\n 15272: ra = 438, jump @19\n      : @480 [@dyn 219] (gas: 37)\n 15278: a0 = sp + 0xffffffffffffffe0\n 15281: a4 = a0 & 0xffffffffffffffe0\n 15284: sp = a4\n 15286: u64 [s1 + 248] = 0\n 15290: t2 = 0\n 15292: t1 = 0\n 15294: u64 [s1 + 240] = 0\n 15298: t0 = u64 [0x20040]\n 15303: a3 = u64 [0x20048]\n 15308: a1 = u64 [s1 + 0x70]\n 15311: a0 = a1 + 0x20\n 15314: u64 [s1 + 0x90] = a0\n 15318: a0 = a0 <u a1\n 15321: a1 = u64 [s1 + 0x60]\n 15324: a2 = a1 + a0\n 15327: u64 [s1 + 0x88] = a2\n 15331: a1 = a2 <u a1\n 15334: a1 = a0 if a0 == 0\n 15337: a5 = u64 [0x20050]\n 15342: a0 = u64 [0x20058]\n 15347: ra = t0\n 15349: u64 [a4 + 0x18] = t0\n 15352: u64 [s1 + 0xb8] = a3\n 15356: u64 [a4 + 0x10] = a3\n 15359: t0 = a5\n 15361: u64 [a4 + 0x8] = a5\n 15364: u64 [s1 + 0xd8] = a4\n 15368: a2 = a0\n 15370: u64 [a4] = a0\n 15372: a0 = u64 [s1 + 0x68]\n 15375: a1 = a1 + a0\n 15378: u64 [s1 + 0x80] = a1\n 15382: a0 = a1 <u a0\n 15385: a1 = u64 [s1 + 0x58]\n 15388: a0 = a0 + a1\n 15391: u64 [s1 + 0x78] = a0\n 15394: fallthrough\n      : @481 (gas: 21)\n 15395: u64 [s1 + 0xc0] = a2\n 15399: u64 [s1 + 0xc8] = t0\n 15403: u64 [s1 + 0xd0] = ra\n 15407: a0 = u64 [s1 + 0xb0]\n 15411: a1 = u64 [s1 + 0xf8]\n 15415: a0 = a1 <u a0\n 15418: a2 = u64 [s1 + 0xa0]\n 15422: a1 = t2 ^ a2\n 15425: a2 = t2 <u a2\n 15428: a2 = a0 if a1 == 0\n 15431: a4 = u64 [s1 + 0xa8]\n 15435: a0 = t1 <u a4\n 15438: a3 = u64 [s1 + 0x98]\n 15442: a1 = u64 [s1 + 0xf0]\n 15446: a5 = a1 ^ a3\n 15449: a3 = a1 <u a3\n 15452: a3 = a0 if a5 == 0\n 15455: a0 = t1 ^ a4\n 15458: a0 = a0 | a5\n 15461: a3 = a2 if a0 == 0\n 15464: jump @483 if a3 != 0\n      : @482 (gas: 1)\n 15467: jump @291\n      : @483 (gas: 6)\n 15470: a0 = s1 + 0x7ff\n 15474: a0 = a0 + 0x4c1\n 15478: a1 = u64 [s1 + 0xd8]\n 15482: u64 [s1 + 0xe8] = t1\n 15486: u64 [s1 + 0xe0] = t2\n 15490: ra = 440, jump @21\n      : @484 [@dyn 220] (gas: 30)\n 15496: t2 = u64 [s1 + 0xf8]\n 15500: t1 = u64 [s1 + 0xe0]\n 15504: ra = u64 [s1 + 0xe8]\n 15508: a1 = u64 [s1 + 0x90]\n 15512: a0 = a1 + t2\n 15515: a1 = a0 <u a1\n 15518: a4 = u64 [s1 + 0x88]\n 15522: a2 = a4 + t1\n 15525: a2 = a2 + a1\n 15528: a5 = a2 ^ a4\n 15531: a4 = a2 <u a4\n 15534: a4 = a1 if a5 == 0\n 15537: a5 = u64 [s1 + 0x80]\n 15541: a1 = a5 + ra\n 15544: t0 = a1 <u a5\n 15547: a5 = u64 [s1 + 0xf0]\n 15551: a3 = u64 [s1 + 0x78]\n 15554: a5 = a5 + a3\n 15557: a5 = a5 + t0\n 15560: a4 = a4 + a1\n 15563: a1 = a4 <u a1\n 15566: a1 = a1 + a5\n 15569: a1 = a1 | a2\n 15572: a2 = a0 | a4\n 15575: a2 = a2 | a1\n 15578: a1 = a1 | a4\n 15581: a2 = a2 >> 0x20\n 15584: a1 = a1 << 0x20\n 15587: a1 = a1 | a2\n 15590: jump @478 if a1 != 0\n      : @485 (gas: 15)\n 15594: a5 = s1 + 0x7ff\n 15598: a5 = a5 + 0x79\n 15601: t0 = u64 [a5 + 0x460]\n 15605: a3 = a5 + 0x400\n 15609: a1 = u64 [a3 + 0x58]\n 15612: a2 = u64 [a3 + 0x50]\n 15615: a4 = u64 [a3 + 0x48]\n 15618: u64 [a3 + 0x28] = a4\n 15621: u64 [a3 + 0x30] = a2\n 15624: u64 [a3 + 0x38] = a1\n 15627: a1 = s1 + 0x7ff\n 15631: a1 = a1 + 0x4a1\n 15635: u64 [a5 + 0x440] = t0\n 15639: u64 [s1 + 0xf8] = t2\n 15643: ra = 442, jump @19\n      : @486 [@dyn 221] (gas: 39)\n 15649: a3 = u64 [s1 + 0xc0]\n 15653: a3 = a3 + 0x1\n 15656: a0 = a3 <u 0x1\n 15659: ra = u64 [s1 + 0xc8]\n 15663: ra = ra + a0\n 15666: a0 = a3 | ra\n 15669: a0 = a0 <u 0x1\n 15672: a1 = u64 [s1 + 0xb8]\n 15676: t2 = a1 + a0\n 15679: a1 = t2 <u a1\n 15682: a0 = u64 [s1 + 0xd0]\n 15686: a0 = a0 + a1\n 15689: a1 = u64 [s1 + 0xf8]\n 15693: t1 = a1 + 0x20\n 15696: a2 = t1 <u a1\n 15699: a4 = u64 [s1 + 0xe0]\n 15703: a1 = a4 + a2\n 15706: a4 = a1 <u a4\n 15709: a4 = a2 if a2 == 0\n 15712: a2 = u64 [s1 + 0xe8]\n 15716: a4 = a4 + a2\n 15719: a2 = a4 <u a2\n 15722: a5 = u64 [s1 + 0xf0]\n 15726: a5 = a5 + a2\n 15729: u64 [s1 + 0xf0] = a5\n 15733: t0 = ra\n 15735: a5 = u64 [s1 + 0xd8]\n 15739: u64 [a5 + 0x8] = ra\n 15742: a2 = a3\n 15744: u64 [a5] = a3\n 15746: a3 = t2\n 15748: u64 [a5 + 0x10] = a3\n 15751: ra = a0\n 15753: u64 [a5 + 0x18] = a0\n 15756: u64 [s1 + 0xb8] = a3\n 15760: u64 [s1 + 0xf8] = t1\n 15764: t2 = a1\n 15766: t1 = a4\n 15768: jump @481\n      : @487 (gas: 6)\n 15771: a1 = 0x200f0\n 15776: i32 a1 = a1 + 0\n 15778: a0 = 0x1\n 15781: a2 = 0\n 15783: ecalli 7 // 'seal_return'\n 15785: jump @581\n      : @488 (gas: 6)\n 15788: a1 = 0x200f0\n 15793: i32 a1 = a1 + 0\n 15795: a0 = 0x1\n 15798: a2 = 0\n 15800: ecalli 7 // 'seal_return'\n 15802: jump @581\n      : @489 (gas: 13)\n 15805: a0 = s1 + 0x1000\n 15809: u64 [a0 + 4294965328] = 0\n 15813: a0 = s1 + 0x1000\n 15817: u64 [a0 + 4294965320] = 0\n 15821: a0 = s1 + 0x1000\n 15825: u64 [a0 + 4294965312] = 0\n 15829: a0 = 0xec442f0500000000\n 15839: a1 = s1 + 0x7ff\n 15843: a1 = a1 + 0x41\n 15846: a2 = s1 + 0x1000\n 15850: u64 [a2 + 0xfffffffffffff858] = a0\n 15854: a0 = 0\n 15856: ra = 444, jump @19\n      : @490 [@dyn 222] (gas: 12)\n 15862: a0 = s1 + 0x1000\n 15866: u64 [a0 + 4294965304] = 0\n 15870: a0 = s1 + 0x1000\n 15874: u64 [a0 + 4294965296] = 0\n 15878: a0 = s1 + 0x1000\n 15882: u64 [a0 + 4294965288] = 0\n 15886: a0 = 0x4\n 15889: a1 = s1 + 0x7ff\n 15893: a1 = a1 + 0x21\n 15896: a2 = s1 + 0x1000\n 15900: u64 [a2 + 4294965280] = 0\n 15904: ra = 446, jump @19\n      : @491 [@dyn 223] (gas: 2)\n 15910: a1 = i32 [0x200e4]\n 15915: jump @493 if a1 >u 63\n      : @492 (gas: 3)\n 15919: u32 [0x200e4] = 0x40\n 15925: a1 = 0x200f0\n 15930: jump @553\n      : @493 (gas: 2)\n 15933: a1 = 0x200f0\n 15938: jump @553\n      : @494 (gas: 10)\n 15941: a0 = s1 + 0x7ff\n 15945: a0 = a0 + 0x79\n 15948: u64 [a0 + 24] = 0\n 15951: u64 [a0 + 16] = 0\n 15954: u64 [a0 + 8] = 0\n 15957: a2 = a0\n 15959: t0 = 0x1c0\n 15963: a0 = 0x4e487b7100000000\n 15973: a1 = s1 + 0x7ff\n 15977: fallthrough\n      : @495 [@dyn 224] (gas: 4)\n 15978: a1 = a1 + 0x81\n 15982: u64 [a2 + 0x20] = a0\n 15985: a0 = 0\n 15987: ra = 450, jump @19\n      : @496 [@dyn 225] (gas: 12)\n 15993: a0 = s1 + 0x7ff\n 15997: a0 = a0 + 0x79\n 16000: u64 [a0 + 0] = 0\n 16002: u64 [a0 + 4294967288] = 0\n 16005: a1 = s1 + 0x1000\n 16009: u64 [a1 + 4294965344] = 0x11\n 16014: a0 = 0x4\n 16017: a1 = s1 + 0x7ff\n 16021: a1 = a1 + 0x61\n 16024: a2 = s1 + 0x1000\n 16028: u64 [a2 + 4294965352] = 0\n 16032: ra = 452, jump @19\n      : @497 [@dyn 226] (gas: 2)\n 16038: a1 = i32 [0x200e4]\n 16043: jump @499 if a1 >u 63\n      : @498 (gas: 3)\n 16047: u32 [0x200e4] = 0x40\n 16053: a1 = 0x200f0\n 16058: jump @553\n      : @499 (gas: 2)\n 16061: a1 = 0x200f0\n 16066: jump @553\n      : @500 (gas: 6)\n 16069: a1 = 0x200f0\n 16074: i32 a1 = a1 + 0\n 16076: a0 = 0x1\n 16079: a2 = 0\n 16081: ecalli 7 // 'seal_return'\n 16083: jump @581\n      : @501 (gas: 6)\n 16086: a1 = 0x200f0\n 16091: i32 a1 = a1 + 0\n 16093: a0 = 0x1\n 16096: a2 = 0\n 16098: ecalli 7 // 'seal_return'\n 16100: jump @581\n      : @502 (gas: 6)\n 16103: a1 = 0x200f0\n 16108: i32 a1 = a1 + 0\n 16110: a0 = 0x1\n 16113: a2 = 0\n 16115: ecalli 7 // 'seal_return'\n 16117: jump @581\n      : @503 (gas: 6)\n 16120: a1 = 0x200f0\n 16125: i32 a1 = a1 + 0\n 16127: a0 = 0x1\n 16130: a2 = 0\n 16132: ecalli 7 // 'seal_return'\n 16134: jump @581\n      : @504 (gas: 9)\n 16137: a2 = s1 + 0x7ff\n 16141: a2 = a2 + 0x79\n 16144: u64 [a2 + 824] = 0\n 16148: u64 [a2 + 816] = 0\n 16152: u64 [a2 + 808] = 0\n 16156: t0 = 0x1c6\n 16160: a0 = 0x4e487b7100000000\n 16170: a1 = s1 + 0x7ff\n 16174: fallthrough\n      : @505 [@dyn 227] (gas: 4)\n 16175: a1 = a1 + 0x3a1\n 16179: u64 [a2 + 0x340] = a0\n 16183: a0 = 0\n 16185: ra = 456, jump @19\n      : @506 [@dyn 228] (gas: 11)\n 16191: a1 = s1 + 0x7ff\n 16195: a1 = a1 + 0x79\n 16198: u64 [a1 + 800] = 0\n 16202: u64 [a1 + 792] = 0\n 16206: u64 [a1 + 776] = 0x22\n 16211: a2 = a1\n 16213: a0 = 0x4\n 16216: a1 = s1 + 0x7ff\n 16220: a1 = a1 + 0x381\n 16224: u64 [a2 + 784] = 0\n 16228: ra = 458, jump @19\n      : @507 [@dyn 229] (gas: 2)\n 16234: a1 = i32 [0x200e4]\n 16239: jump @509 if a1 >u 63\n      : @508 (gas: 3)\n 16243: u32 [0x200e4] = 0x40\n 16249: a1 = 0x200f0\n 16254: jump @553\n      : @509 (gas: 2)\n 16257: a1 = 0x200f0\n 16262: jump @553\n      : @510 (gas: 6)\n 16265: a1 = 0x200f0\n 16270: i32 a1 = a1 + 0\n 16272: a0 = 0x1\n 16275: a2 = 0\n 16277: ecalli 7 // 'seal_return'\n 16279: jump @581\n      : @511 (gas: 6)\n 16282: a1 = 0x200f0\n 16287: i32 a1 = a1 + 0\n 16289: a0 = 0x1\n 16292: a2 = 0\n 16294: ecalli 7 // 'seal_return'\n 16296: jump @581\n      : @512 (gas: 6)\n 16299: a1 = 0x200f0\n 16304: i32 a1 = a1 + 0\n 16306: a0 = 0x1\n 16309: a2 = 0\n 16311: ecalli 7 // 'seal_return'\n 16313: jump @581\n      : @513 (gas: 6)\n 16316: a1 = 0x200f0\n 16321: i32 a1 = a1 + 0\n 16323: a0 = 0x1\n 16326: a2 = 0\n 16328: ecalli 7 // 'seal_return'\n 16330: jump @581\n      : @514 (gas: 6)\n 16333: a1 = 0x200f0\n 16338: i32 a1 = a1 + 0\n 16340: a0 = 0x1\n 16343: a2 = 0\n 16345: ecalli 7 // 'seal_return'\n 16347: jump @581\n      : @515 (gas: 6)\n 16350: a1 = 0x200f0\n 16355: i32 a1 = a1 + 0\n 16357: a0 = 0x1\n 16360: a2 = 0\n 16362: ecalli 7 // 'seal_return'\n 16364: jump @581\n      : @516 (gas: 1)\n 16367: jump @573 if a0 != 4076725131\n      : @517 (gas: 11)\n 16375: a0 = s1 + 0x1078\n 16379: u64 [a0 + 896] = 0\n 16383: u64 [a0 + 888] = 0\n 16387: u64 [a0 + 880] = 0\n 16391: u64 [a0 + 872] = 0\n 16395: a0 = s1 + 0x1000\n 16399: i32 a0 = a0 + 0x3e0\n 16403: ra = 0x1cc\n 16407: ecalli 10 // 'value_transferred'\n 16409: t0 = 0x1ce\n 16413: jump @751\n      : @518 [@dyn 230] (gas: 1)\n 16416: t0 = 462, jump @751\n      : @519 [@dyn 231] (gas: 8)\n 16422: a0 = u64 [a4 + 0x78]\n 16425: a1 = u64 [a4 + 0x80]\n 16429: a2 = u64 [a4 + 0x70]\n 16432: a3 = u64 [a4 + 0x68]\n 16435: a1 = a1 | a2\n 16438: a0 = a0 | a3\n 16441: a0 = a0 | a1\n 16444: jump @581 if a0 == 0\n      : @520 (gas: 6)\n 16448: a1 = 0x200f0\n 16453: i32 a1 = a1 + 0\n 16455: a0 = 0x1\n 16458: a2 = 0\n 16460: ecalli 7 // 'seal_return'\n 16462: jump @581\n      : @521 (gas: 6)\n 16465: a1 = 0x200f0\n 16470: i32 a1 = a1 + 0\n 16472: a0 = 0x1\n 16475: a2 = 0\n 16477: ecalli 7 // 'seal_return'\n 16479: jump @581\n      : @522 (gas: 6)\n 16482: a1 = 0x200f0\n 16487: i32 a1 = a1 + 0\n 16489: a0 = 0x1\n 16492: a2 = 0\n 16494: ecalli 7 // 'seal_return'\n 16496: jump @581\n      : @523 (gas: 6)\n 16499: a1 = 0x200f0\n 16504: i32 a1 = a1 + 0\n 16506: a0 = 0x1\n 16509: a2 = 0\n 16511: ecalli 7 // 'seal_return'\n 16513: jump @581\n      : @524 (gas: 6)\n 16516: a1 = 0x200f0\n 16521: i32 a1 = a1 + 0\n 16523: a0 = 0x1\n 16526: a2 = 0\n 16528: ecalli 7 // 'seal_return'\n 16530: jump @581\n      : @525 (gas: 8)\n 16533: u64 [s1 + 688] = 0\n 16537: u64 [s1 + 680] = 0\n 16541: u64 [s1 + 672] = 0\n 16545: a0 = 0xe602df0500000000\n 16555: a1 = s1 + 0x2a0\n 16559: u64 [s1 + 0x2b8] = a0\n 16563: a0 = 0\n 16565: ra = 464, jump @19\n      : @526 [@dyn 232] (gas: 7)\n 16571: u64 [s1 + 664] = 0\n 16575: u64 [s1 + 656] = 0\n 16579: u64 [s1 + 648] = 0\n 16583: a0 = 0x4\n 16586: a1 = s1 + 0x280\n 16590: u64 [s1 + 640] = 0\n 16594: ra = 466, jump @19\n      : @527 [@dyn 233] (gas: 2)\n 16600: a1 = i32 [0x200e4]\n 16605: jump @529 if a1 >u 63\n      : @528 (gas: 3)\n 16609: u32 [0x200e4] = 0x40\n 16615: a1 = 0x200f0\n 16620: jump @553\n      : @529 (gas: 2)\n 16623: a1 = 0x200f0\n 16628: jump @553\n      : @530 (gas: 8)\n 16631: u64 [s1 + 752] = 0\n 16635: u64 [s1 + 744] = 0\n 16639: u64 [s1 + 736] = 0\n 16643: a0 = 0x94280d6200000000\n 16653: a1 = s1 + 0x2e0\n 16657: u64 [s1 + 0x2f8] = a0\n 16661: a0 = 0\n 16663: ra = 468, jump @19\n      : @531 [@dyn 234] (gas: 7)\n 16669: u64 [s1 + 728] = 0\n 16673: u64 [s1 + 720] = 0\n 16677: u64 [s1 + 712] = 0\n 16681: a0 = 0x4\n 16684: a1 = s1 + 0x2c0\n 16688: u64 [s1 + 704] = 0\n 16692: ra = 470, jump @19\n      : @532 [@dyn 235] (gas: 2)\n 16698: a1 = i32 [0x200e4]\n 16703: jump @534 if a1 >u 63\n      : @533 (gas: 3)\n 16707: u32 [0x200e4] = 0x40\n 16713: a1 = 0x200f0\n 16718: jump @553\n      : @534 (gas: 2)\n 16721: a1 = 0x200f0\n 16726: jump @553\n      : @535 (gas: 6)\n 16729: a1 = 0x200f0\n 16734: i32 a1 = a1 + 0\n 16736: a0 = 0x1\n 16739: a2 = 0\n 16741: ecalli 7 // 'seal_return'\n 16743: jump @581\n      : @536 (gas: 6)\n 16746: a1 = 0x200f0\n 16751: i32 a1 = a1 + 0\n 16753: a0 = 0x1\n 16756: a2 = 0\n 16758: ecalli 7 // 'seal_return'\n 16760: jump @581\n      : @537 (gas: 6)\n 16763: u64 [s1 + 304] = 0\n 16767: u64 [s1 + 296] = 0\n 16771: u64 [s1 + 288] = 0\n 16775: t0 = 0x1d8\n 16779: a0 = 0x4e487b7100000000\n 16789: fallthrough\n      : @538 [@dyn 236] (gas: 4)\n 16790: a1 = s1 + 0x120\n 16794: u64 [s1 + 0x138] = a0\n 16798: a0 = 0\n 16800: ra = 474, jump @19\n      : @539 [@dyn 237] (gas: 7)\n 16806: u64 [s1 + 280] = 0\n 16810: u64 [s1 + 272] = 0\n 16814: u64 [s1 + 256] = 0x22\n 16819: a0 = 0x4\n 16822: a1 = s1 + 0x100\n 16826: u64 [s1 + 264] = 0\n 16830: ra = 476, jump @19\n      : @540 [@dyn 238] (gas: 2)\n 16836: a1 = i32 [0x200e4]\n 16841: jump @542 if a1 >u 63\n      : @541 (gas: 3)\n 16845: u32 [0x200e4] = 0x40\n 16851: a1 = 0x200f0\n 16856: jump @553\n      : @542 (gas: 2)\n 16859: a1 = 0x200f0\n 16864: jump @553\n      : @543 (gas: 6)\n 16867: a1 = 0x200f0\n 16872: i32 a1 = a1 + 0\n 16874: a0 = 0x1\n 16877: a2 = 0\n 16879: ecalli 7 // 'seal_return'\n 16881: jump @581\n      : @544 (gas: 6)\n 16884: a1 = 0x200f0\n 16889: i32 a1 = a1 + 0\n 16891: a0 = 0x1\n 16894: a2 = 0\n 16896: ecalli 7 // 'seal_return'\n 16898: jump @581\n      : @545 (gas: 6)\n 16901: a1 = 0x200f0\n 16906: i32 a1 = a1 + 0\n 16908: a0 = 0x1\n 16911: a2 = 0\n 16913: ecalli 7 // 'seal_return'\n 16915: jump @581\n      : @546 (gas: 6)\n 16918: a1 = 0x200f0\n 16923: i32 a1 = a1 + 0\n 16925: a0 = 0x1\n 16928: a2 = 0\n 16930: ecalli 7 // 'seal_return'\n 16932: jump @581\n      : @547 (gas: 10)\n 16935: a0 = s1 + 0x7ff\n 16939: a0 = a0 + 0x79\n 16942: u64 [a0 + 888] = 0\n 16946: u64 [a0 + 880] = 0\n 16950: u64 [a0 + 872] = 0\n 16954: a2 = a0\n 16956: t0 = 0x1de\n 16960: a0 = 0x4e487b7100000000\n 16970: a1 = s1 + 0x7ff\n 16974: fallthrough\n      : @548 [@dyn 239] (gas: 4)\n 16975: a1 = a1 + 0x3e1\n 16979: u64 [a2 + 0x380] = a0\n 16983: a0 = 0\n 16985: ra = 480, jump @19\n      : @549 [@dyn 240] (gas: 11)\n 16991: a1 = s1 + 0x7ff\n 16995: a1 = a1 + 0x79\n 16998: u64 [a1 + 864] = 0\n 17002: u64 [a1 + 856] = 0\n 17006: u64 [a1 + 840] = 0x41\n 17011: a2 = a1\n 17013: a0 = 0x4\n 17016: a1 = s1 + 0x7ff\n 17020: a1 = a1 + 0x3c1\n 17024: u64 [a2 + 848] = 0\n 17028: ra = 482, jump @19\n      : @550 [@dyn 241] (gas: 2)\n 17034: a1 = i32 [0x200e4]\n 17039: jump @552 if a1 >u 63\n      : @551 (gas: 3)\n 17043: u32 [0x200e4] = 0x40\n 17049: a1 = 0x200f0\n 17054: jump @553\n      : @552 (gas: 2)\n 17056: a1 = 0x200f0\n 17061: fallthrough\n      : @553 (gas: 5)\n 17062: i32 a1 = a1 + 0\n 17064: a0 = 0x1\n 17067: a2 = 0x24\n 17070: ecalli 7 // 'seal_return'\n 17072: fallthrough\n      : @554 (gas: 8)\n 17073: u64 [s1 + 1520] = 0\n 17077: u64 [s1 + 1512] = 0\n 17081: u64 [s1 + 1504] = 0\n 17085: a0 = 0xfb8f41b200000000\n 17095: a1 = s1 + 0x5e0\n 17099: u64 [s1 + 0x5f8] = a0\n 17103: a0 = 0\n 17105: ra = 484, jump @19\n      : @555 [@dyn 242] (gas: 4)\n 17111: a0 = u64 [s1 + 0x80]\n 17115: ra = 0x1e6\n 17119: ecalli 3 // 'caller'\n 17121: fallthrough\n      : @556 [@dyn 243] (gas: 5)\n 17122: a2 = u64 [s1 + 0xb0]\n 17126: a0 = u64 [a2 + 0x8]\n 17129: a1 = i32 [a2 + 0x10]\n 17132: a2 = u64 [a2]\n 17134: t0 = 488, jump @732\n      : @557 [@dyn 244] (gas: 7)\n 17140: u64 [s1 + 1496] = 0\n 17144: u64 [s1 + 0x5d0] = a1\n 17148: u64 [s1 + 0x5c8] = a0\n 17152: a0 = 0x4\n 17155: a1 = s1 + 0x5c0\n 17159: u64 [s1 + 0x5c0] = a3\n 17163: ra = 490, jump @19\n      : @558 [@dyn 245] (gas: 11)\n 17169: a0 = u64 [s1 + 0x60]\n 17172: u64 [s1 + 0x5b8] = a0\n 17176: a0 = u64 [s1 + 0x58]\n 17179: u64 [s1 + 0x5b0] = a0\n 17183: a0 = u64 [s1 + 0x68]\n 17186: u64 [s1 + 0x5a8] = a0\n 17190: a0 = 0x24\n 17193: a1 = s1 + 0x5a0\n 17197: a2 = u64 [s1 + 0x70]\n 17200: u64 [s1 + 0x5a0] = a2\n 17204: ra = 492, jump @19\n      : @559 [@dyn 246] (gas: 12)\n 17210: a0 = u64 [s1 + 0xe8]\n 17214: a3 = s1 + 0x500\n 17218: u64 [a3 + 0x98] = a0\n 17222: a0 = u64 [s1 + 0xd8]\n 17226: u64 [a3 + 0x90] = a0\n 17230: a0 = u64 [s1 + 0xc8]\n 17234: u64 [a3 + 0x88] = a0\n 17238: a0 = 0x44\n 17241: a1 = s1 + 0x580\n 17245: a2 = u64 [s1 + 0xd0]\n 17249: u64 [a3 + 0x80] = a2\n 17253: ra = 494, jump @19\n      : @560 [@dyn 247] (gas: 3)\n 17259: a0 = u64 [s1 + 0xc0]\n 17263: a0 = i32 [a0]\n 17265: jump @562 if a0 >u 127\n      : @561 (gas: 5)\n 17269: a1 = u64 [s1 + 0xc0]\n 17273: u32 [a1 + 0] = 0x80\n 17277: a0 = 0x1\n 17280: a2 = 0x64\n 17283: jump @570\n      : @562 (gas: 7)\n 17286: a0 = 0x1\n 17289: a2 = 0x64\n 17292: a1 = u64 [s1 + 0xe0]\n 17296: ecalli 7 // 'seal_return'\n 17298: u64 [s1 + 0xf8] = a1\n 17302: ra = 0x1f6\n 17306: jump @26\n      : @563 (gas: 8)\n 17309: u64 [s1 + 1584] = 0\n 17313: u64 [s1 + 1576] = 0\n 17317: u64 [s1 + 1568] = 0\n 17321: a0 = 0xe602df0500000000\n 17331: a1 = s1 + 0x620\n 17335: u64 [s1 + 0x638] = a0\n 17339: a0 = 0\n 17341: ra = 496, jump @19\n      : @564 [@dyn 248] (gas: 8)\n 17347: u64 [s1 + 1560] = 0\n 17351: u64 [s1 + 1552] = 0\n 17355: u64 [s1 + 1544] = 0\n 17359: a0 = 0x4\n 17362: a1 = s1 + 0x600\n 17366: u64 [s1 + 1536] = 0\n 17370: ra = 0x1f4\n 17374: jump @19\n      : @565 (gas: 8)\n 17377: u64 [s1 + 1648] = 0\n 17381: u64 [s1 + 1640] = 0\n 17385: u64 [s1 + 1632] = 0\n 17389: a0 = 0x94280d6200000000\n 17399: a1 = s1 + 0x660\n 17403: u64 [s1 + 0x678] = a0\n 17407: a0 = 0\n 17409: ra = 498, jump @19\n      : @566 [@dyn 249] (gas: 7)\n 17415: u64 [s1 + 1624] = 0\n 17419: u64 [s1 + 1616] = 0\n 17423: u64 [s1 + 1608] = 0\n 17427: a0 = 0x4\n 17430: a1 = s1 + 0x640\n 17434: u64 [s1 + 1600] = 0\n 17438: ra = 500, jump @19\n      : @567 [@dyn 250] (gas: 3)\n 17444: a0 = u64 [s1 + 0xc0]\n 17448: a0 = i32 [a0]\n 17450: jump @569 if a0 >u 63\n      : @568 (gas: 5)\n 17454: a1 = u64 [s1 + 0xc0]\n 17458: u32 [a1 + 0] = 0x40\n 17461: a0 = 0x1\n 17464: a2 = 0x24\n 17467: jump @570\n      : @569 (gas: 7)\n 17469: a0 = 0x1\n 17472: a2 = 0x24\n 17475: a1 = u64 [s1 + 0xe0]\n 17479: ecalli 7 // 'seal_return'\n 17481: u64 [s1 + 0xf8] = a1\n 17485: ra = 0x1f6\n 17489: jump @26\n      : @570 (gas: 5)\n 17492: a1 = u64 [s1 + 0xe0]\n 17496: ecalli 7 // 'seal_return'\n 17498: u64 [s1 + 0xf8] = a1\n 17502: ra = 0x1f6\n 17506: jump @26\n      : @571 (gas: 2)\n 17509: u64 [s1 + 0xf8] = a1\n 17513: ra = 502, jump @26\n      : @572 [@dyn 251] (gas: 5)\n 17519: i32 a1 = a0 + 0\n 17521: a2 = i32 [s1 + 0xf8]\n 17525: a0 = 0\n 17527: ecalli 7 // 'seal_return'\n 17529: jump @466\n      : @573 (gas: 1)\n 17532: jump @579 if a0 != 1901074598\n      : @574 (gas: 11)\n 17539: a0 = s1 + 0x1078\n 17543: u64 [a0 + 544] = 0\n 17547: u64 [a0 + 536] = 0\n 17551: u64 [a0 + 528] = 0\n 17555: u64 [a0 + 520] = 0\n 17559: a0 = s1 + 0x1000\n 17563: i32 a0 = a0 + 0x280\n 17567: ra = 0x1f8\n 17571: ecalli 10 // 'value_transferred'\n 17573: t0 = 0x1fa\n 17577: jump @750\n      : @575 [@dyn 252] (gas: 1)\n 17580: t0 = 506, jump @750\n      : @576 [@dyn 253] (gas: 1)\n 17586: t0 = 508, jump @757\n      : @577 [@dyn 254] (gas: 1)\n 17592: jump @583 if a0 == 0\n      : @578 (gas: 6)\n 17595: a1 = 0x200f0\n 17600: i32 a1 = a1 + 0\n 17602: a0 = 0x1\n 17605: a2 = 0\n 17607: ecalli 7 // 'seal_return'\n 17609: jump @581\n      : @579 (gas: 6)\n 17611: a1 = 0x200f0\n 17616: i32 a1 = a1 + 0\n 17618: a0 = 0x1\n 17621: a2 = 0\n 17623: ecalli 7 // 'seal_return'\n 17625: jump @581\n      : @580 (gas: 5)\n 17627: i32 a1 = a1 + 0\n 17629: a0 = 0x1\n 17632: a2 = 0\n 17634: ecalli 7 // 'seal_return'\n 17636: fallthrough\n      : @581 (gas: 4)\n 17637: a0 = u64 [s1 + 0xf8]\n 17641: a0 = i32 [a0]\n 17643: a1 = 0x23\n 17646: jump @585 if a1 <u a0\n      : @582 (gas: 2)\n 17649: a1 = 0x200f0\n 17654: jump @580\n      : @583 (gas: 3)\n 17656: a0 = u64 [s1 + 0xf8]\n 17660: a0 = i32 [a0]\n 17662: jump @592 if a0 >u 3\n      : @584 (gas: 2)\n 17667: a1 = 0x200f0\n 17672: jump @580\n      : @585 (gas: 4)\n 17674: a0 = s1 + 0x1000\n 17678: ra = 0x1fe\n 17682: t0 = 0x244\n 17686: jump @749\n      : @586 [@dyn 255] (gas: 9)\n 17689: a0 = s1 + 0x7ff\n 17693: a0 = a0 + 0x79\n 17696: a1 = u64 [a0 + 0x790]\n 17700: u64 [s1 + 0xf0] = a1\n 17704: a1 = u64 [a0 + 0x788]\n 17708: u64 [s1 + 0xf8] = a1\n 17712: a0 = u32 [a0 + 0x798]\n 17716: u64 [s1 + 0xe8] = a0\n 17720: ra = 512, jump @719\n      : @587 [@dyn 256] (gas: 6)\n 17726: a0 = u64 [s1 + 0xf8]\n 17730: a1 = u64 [s1 + 0xe8]\n 17734: a0 = a0 | a1\n 17737: a1 = u64 [s1 + 0xf0]\n 17741: a0 = a0 | a1\n 17744: jump @597 if a0 == 0\n      : @588 (gas: 11)\n 17748: a0 = 0xffffffff\n 17758: u64 [s1 + 0xe0] = a0\n 17762: a0 = s1 + 0x1078\n 17766: u64 [a0 + 928] = 0\n 17770: u64 [a0 + 920] = 0\n 17774: u64 [a0 + 912] = 0\n 17778: u64 [a0 + 904] = 0x5\n 17783: a0 = s1 + 0x7ff\n 17787: a0 = a0 + 0x7e1\n 17791: a1 = s1 + 0x1400\n 17795: ra = 514, jump @21\n      : @589 [@dyn 257] (gas: 29)\n 17801: a1 = s1 + 0x7ff\n 17805: a1 = a1 + 0x79\n 17808: a3 = a1 + 0x700\n 17812: a0 = u64 [a3 + 0x70]\n 17815: u64 [s1 + 0xd8] = a0\n 17819: a0 = u64 [a3 + 0x80]\n 17823: a2 = u64 [a3 + 0x78]\n 17826: u64 [s1 + 0xc8] = a2\n 17830: a1 = u64 [a3 + 0x68]\n 17833: u64 [s1 + 0xd0] = a1\n 17837: a1 = s1 + 0x1078\n 17841: a4 = a1 + 0x300\n 17845: u64 [a4 + 168] = 0x5\n 17850: u64 [a4 + 0xe0] = a0\n 17854: a0 = a2 >> 0x20\n 17857: a0 = a0 << 0x20\n 17860: a2 = u64 [s1 + 0xe8]\n 17864: a0 = a0 | a2\n 17867: u64 [a4 + 0xd8] = a0\n 17871: u64 [a1 + 960] = 0\n 17875: u64 [a1 + 952] = 0\n 17879: u64 [a1 + 944] = 0\n 17883: a0 = u64 [s1 + 0xf0]\n 17887: u64 [a4 + 0xd0] = a0\n 17891: a0 = u64 [s1 + 0xf8]\n 17895: u64 [a4 + 0xc8] = a0\n 17899: a0 = s1 + 0x1420\n 17903: a1 = s1 + 0x1440\n 17907: ra = 516, jump @22\n      : @590 [@dyn 258] (gas: 39)\n 17913: a0 = u64 [s1 + 0xd0]\n 17917: a0 = a0 & 0xffffffffffffffff\n 17920: a2 = u64 [s1 + 0xd8]\n 17924: a1 = a2 & 0xffffffffffffffff\n 17927: a2 = u64 [s1 + 0xe0]\n 17931: a3 = u64 [s1 + 0xc8]\n 17935: a2 = a2 & a3\n 17938: a4 = s1 + 0x7ff\n 17942: a4 = a4 + 0x79\n 17945: u64 [a4 + 1824] = 0\n 17949: a3 = u64 [s1 + 0xe8]\n 17953: a5 = a4 + 0x700\n 17957: u64 [a5 + 0x18] = a3\n 17960: a3 = u64 [s1 + 0xf0]\n 17964: u64 [a5 + 0x10] = a3\n 17967: a3 = u64 [s1 + 0xf8]\n 17971: u64 [a5 + 0x8] = a3\n 17974: u64 [a4 + 1856] = 0\n 17978: u64 [a5 + 0x38] = a2\n 17981: u64 [a5 + 0x30] = a1\n 17984: a1 = u64 [0x20020]\n 17989: a2 = u64 [0x20028]\n 17994: a3 = u64 [0x20030]\n 17999: u64 [a5 + 0x28] = a0\n 18002: u64 [a5 + 0x60] = a1\n 18005: u64 [a5 + 0x58] = a2\n 18008: u64 [a5 + 0x50] = a3\n 18011: a1 = a4\n 18013: a0 = u64 [0x20038]\n 18018: a2 = s1 + 0x7ff\n 18022: a2 = a2 + 0x7c1\n 18026: a3 = s1 + 0x7ff\n 18030: a3 = a3 + 0x7a1\n 18034: a4 = s1 + 0x7ff\n 18038: a4 = a4 + 0x781\n 18042: u64 [a1 + 0x748] = a0\n 18046: a0 = 0\n 18048: a1 = 0\n 18050: ra = 518, jump @23\n      : @591 [@dyn 259] (gas: 6)\n 18056: a1 = 0x200f0\n 18061: i32 a1 = a1 + 0\n 18063: a0 = 0\n 18065: a2 = 0\n 18067: ecalli 7 // 'seal_return'\n 18069: jump @581\n      : @592 (gas: 1)\n 18072: ra = 520, jump @719\n      : @593 [@dyn 260] (gas: 9)\n 18078: a1 = s1 + 0x1078\n 18082: u64 [a1 + 576] = 0\n 18086: u64 [a1 + 568] = 0\n 18090: u64 [a1 + 560] = 0\n 18094: u64 [a1 + 552] = 0x5\n 18099: a0 = s1 + 0x7ff\n 18103: a0 = a0 + 0x301\n 18107: a1 = s1 + 0x12a0\n 18111: ra = 522, jump @21\n      : @594 [@dyn 261] (gas: 25)\n 18117: a1 = s1 + 0x7ff\n 18121: a1 = a1 + 0x79\n 18124: a3 = a1 + 0x200\n 18128: a2 = u64 [a3 + 0x98]\n 18132: u64 [s1 + 0xe8] = a2\n 18136: a0 = u64 [a3 + 0x88]\n 18140: u64 [s1 + 0xf8] = a0\n 18144: a0 = u64 [a3 + 0x90]\n 18148: u64 [s1 + 0xf0] = a0\n 18152: a0 = u64 [a3 + 0xa0]\n 18156: a1 = a2 >> 0x20\n 18159: a1 = a1 << 0x20\n 18162: a2 = s1 + 0x1078\n 18166: u64 [a2 + 608] = 0\n 18170: u64 [a2 + 600] = 0\n 18174: u64 [a2 + 592] = 0\n 18178: a4 = a2 + 0x200\n 18182: u64 [a4 + 72] = 0x5\n 18186: u64 [a2 + 624] = 0\n 18190: u64 [a2 + 616] = 0\n 18194: u64 [a4 + 0x80] = a0\n 18198: u64 [a4 + 0x78] = a1\n 18201: a0 = s1 + 0x12c0\n 18205: a1 = s1 + 0x12e0\n 18209: ra = 524, jump @22\n      : @595 [@dyn 262] (gas: 34)\n 18215: a0 = u64 [s1 + 0xe8]\n 18219: a0 = a0 << 0x20\n 18222: a0 = a0 >> 0x20\n 18225: a3 = s1 + 0x7ff\n 18229: a3 = a3 + 0x79\n 18232: u64 [a3 + 576] = 0\n 18236: u64 [a3 + 568] = 0\n 18240: u64 [a3 + 560] = 0\n 18244: u64 [a3 + 552] = 0\n 18248: u64 [a3 + 608] = 0\n 18252: a5 = a3 + 0x200\n 18256: u64 [a5 + 0x58] = a0\n 18259: a0 = u64 [s1 + 0xf0]\n 18263: u64 [a5 + 0x50] = a0\n 18266: a0 = u64 [0x20020]\n 18271: a1 = u64 [0x20028]\n 18276: a2 = u64 [0x20030]\n 18281: a4 = u64 [s1 + 0xf8]\n 18285: u64 [a5 + 0x48] = a4\n 18288: u64 [a5 + 0x80] = a0\n 18292: u64 [a5 + 0x78] = a1\n 18295: u64 [a5 + 0x70] = a2\n 18298: a1 = a3\n 18300: a0 = u64 [0x20038]\n 18305: a2 = s1 + 0x7ff\n 18309: a2 = a2 + 0x2e1\n 18313: a3 = s1 + 0x7ff\n 18317: a3 = a3 + 0x2c1\n 18321: a4 = s1 + 0x7ff\n 18325: a4 = a4 + 0x2a1\n 18329: u64 [a1 + 0x268] = a0\n 18333: a0 = 0\n 18335: a1 = 0\n 18337: ra = 526, jump @23\n      : @596 [@dyn 263] (gas: 6)\n 18343: a1 = 0x200f0\n 18348: i32 a1 = a1 + 0\n 18350: a0 = 0\n 18352: a2 = 0\n 18354: ecalli 7 // 'seal_return'\n 18356: jump @581\n      : @597 (gas: 12)\n 18359: a0 = s1 + 0x7ff\n 18363: a0 = a0 + 0x79\n 18366: u64 [a0 + 1784] = 0\n 18370: u64 [a0 + 1776] = 0\n 18374: u64 [a0 + 1768] = 0\n 18378: a2 = a0\n 18380: a0 = 0x1e4fbdf700000000\n 18390: a1 = s1 + 0x7ff\n 18394: a1 = a1 + 0x761\n 18398: u64 [a2 + 0x700] = a0\n 18402: a0 = 0\n 18404: ra = 528, jump @19\n      : @598 [@dyn 264] (gas: 11)\n 18410: a0 = s1 + 0x7ff\n 18414: a0 = a0 + 0x79\n 18417: u64 [a0 + 1760] = 0\n 18421: u64 [a0 + 1752] = 0\n 18425: u64 [a0 + 1744] = 0\n 18429: a2 = a0\n 18431: a0 = 0x4\n 18434: a1 = s1 + 0x7ff\n 18438: a1 = a1 + 0x741\n 18442: u64 [a2 + 1736] = 0\n 18446: ra = 530, jump @19\n      : @599 [@dyn 265] (gas: 2)\n 18452: a1 = i32 [0x200e4]\n 18457: jump @601 if a1 >u 63\n      : @600 (gas: 3)\n 18461: u32 [0x200e4] = 0x40\n 18467: a1 = 0x200f0\n 18472: jump @553\n      : @601 (gas: 2)\n 18475: a1 = 0x200f0\n 18480: jump @553\n      : @602 (gas: 17)\n 18483: sp = sp + 0xffffffffffffff30\n 18487: u64 [sp + 0xc8] = ra\n 18491: u64 [sp + 0xc0] = s0\n 18495: u64 [sp + 0xb8] = s1\n 18499: s0 = sp + 0xd0\n 18503: sp = sp & 0xfffffffffffffff0\n 18506: a2 = u64 [a1 + 0x18]\n 18509: u64 [sp + 0x10] = a2\n 18512: a2 = u64 [a1 + 0x10]\n 18515: u64 [sp + 0x8] = a2\n 18518: a2 = u64 [a1 + 0x8]\n 18521: u64 [sp] = a2\n 18523: s1 = u64 [a1]\n 18525: u64 [sp + 0x28] = a0\n 18528: a0 = sp + 0x90\n 18532: a1 = 0x40\n 18535: ra = 532, jump @17\n      : @603 [@dyn 266] (gas: 39)\n 18541: a1 = u64 [sp + 0x98]\n 18545: a2 = u64 [sp + 0x90]\n 18549: a0 = s1 + 0x1f\n 18552: ra = a0 <u s1\n 18555: a3 = u64 [sp]\n 18557: a4 = a3 + ra\n 18560: a0 = a0 & 0xffffffffffffffe0\n 18563: t1 = a1 + a4\n 18566: t0 = a2 + a0\n 18569: u64 [sp + 0x20] = a2\n 18572: a5 = t0 <u a2\n 18575: t1 = t1 + a5\n 18578: s1 = t1 ^ a1\n 18581: u64 [sp + 0x18] = a1\n 18584: a2 = t1 <u a1\n 18587: a2 = a5 if s1 == 0\n 18590: t2 = u64 [sp + 0xa8]\n 18594: a4 = a4 <u a3\n 18597: s1 = u64 [sp + 0xa0]\n 18601: a4 = ra if ra == 0\n 18604: a0 = u64 [sp + 0x8]\n 18607: a4 = a4 + a0\n 18610: a5 = a4 <u a0\n 18613: a4 = a4 + s1\n 18616: a3 = a4 + a2\n 18619: a0 = u64 [sp + 0x10]\n 18622: a0 = a0 + t2\n 18625: a0 = a0 + a5\n 18628: a5 = a3 <u a4\n 18631: a4 = a4 <u s1\n 18634: a0 = a0 + a4\n 18637: a4 = a0 + a5\n 18640: a0 = a4 >u 0\n 18642: a5 = a3 >u 0\n 18644: a5 = a0 if a4 != 0\n 18647: a0 = a3 | a4\n 18650: a1 = t1 >u 0\n 18652: a1 = a5 if a0 != 0\n 18655: jump @607 if a1 != 0\n      : @604 (gas: 8)\n 18658: a0 = a3 <u s1\n 18661: a1 = a4 ^ t2\n 18664: a5 = a4 <u t2\n 18667: a5 = a0 if a1 == 0\n 18670: a0 = a3 ^ s1\n 18673: a0 = a0 | a1\n 18676: a2 = a5 if a0 != 0\n 18679: jump @607 if a2 != 0\n      : @605 (gas: 8)\n 18682: u64 [sp + 0x70] = t0\n 18685: u64 [sp + 0x78] = t1\n 18688: u64 [sp + 0x80] = a3\n 18692: a0 = 0x40\n 18695: a1 = sp + 0x70\n 18698: u64 [sp + 0x88] = a4\n 18702: u64 [sp + 0x10] = t2\n 18705: ra = 534, jump @19\n      : @606 [@dyn 267] (gas: 14)\n 18711: a0 = u64 [sp + 0x28]\n 18714: a1 = u64 [sp + 0x10]\n 18717: u64 [a0 + 0x18] = a1\n 18720: u64 [a0 + 0x10] = s1\n 18723: a1 = u64 [sp + 0x18]\n 18726: u64 [a0 + 0x8] = a1\n 18729: a1 = u64 [sp + 0x20]\n 18732: u64 [a0] = a1\n 18734: sp = s0 + 0xffffffffffffff30\n 18738: ra = u64 [sp + 0xc8]\n 18742: s0 = u64 [sp + 0xc0]\n 18746: s1 = u64 [sp + 0xb8]\n 18750: sp = sp + 0xd0\n 18754: ret\n      : @607 (gas: 6)\n 18756: u64 [sp + 96] = 0\n 18759: u64 [sp + 88] = 0\n 18762: u64 [sp + 80] = 0\n 18765: t0 = 0x218\n 18769: a0 = 0x4e487b7100000000\n 18779: fallthrough\n      : @608 [@dyn 268] (gas: 4)\n 18780: a1 = sp + 0x50\n 18783: u64 [sp + 0x68] = a0\n 18786: a0 = 0\n 18788: ra = 538, jump @19\n      : @609 [@dyn 269] (gas: 7)\n 18794: u64 [sp + 72] = 0\n 18797: u64 [sp + 64] = 0\n 18800: u64 [sp + 48] = 0x41\n 18804: a0 = 0x4\n 18807: a1 = sp + 0x30\n 18810: u64 [sp + 56] = 0\n 18813: ra = 540, jump @19\n      : @610 [@dyn 270] (gas: 2)\n 18819: a1 = i32 [0x200e4]\n 18824: jump @612 if a1 >u 63\n      : @611 (gas: 2)\n 18828: u32 [0x200e4] = 0x40\n 18834: fallthrough\n      : @612 (gas: 7)\n 18835: a1 = 0x200f0\n 18840: i32 a1 = a1 + 0\n 18842: a0 = 0x1\n 18845: a2 = 0x24\n 18848: ra = 0x21e\n 18852: ecalli 7 // 'seal_return'\n 18854: fallthrough\n      : @613 [@dyn 271] (gas: 37)\n 18855: sp = sp + 0xfffffffffffffe70\n 18859: u64 [sp + 0x188] = ra\n 18863: u64 [sp + 0x180] = s0\n 18867: u64 [sp + 0x178] = s1\n 18871: s0 = sp + 0x190\n 18875: sp = sp & 0xfffffffffffffff0\n 18878: t2 = u64 [a1]\n 18880: a4 = u64 [a2 + 0x8]\n 18883: ra = u64 [a1 + 0x8]\n 18886: s1 = u64 [a2]\n 18888: a3 = t2 + 0x1f\n 18891: t0 = a3 <u t2\n 18894: a5 = ra + t0\n 18897: u64 [sp + 0x20] = s1\n 18900: t1 = a3 <u s1\n 18903: a3 = a5 ^ a4\n 18906: u64 [sp + 0x28] = a4\n 18909: a4 = a5 <u a4\n 18912: a4 = t1 if a3 == 0\n 18915: s1 = u64 [a1 + 0x10]\n 18918: a3 = a5 <u ra\n 18921: a3 = t0 if t0 == 0\n 18924: a5 = u64 [a2 + 0x18]\n 18927: t0 = u64 [a1 + 0x18]\n 18930: t1 = u64 [a2 + 0x10]\n 18933: a3 = a3 + s1\n 18936: a1 = a3 <u s1\n 18939: a1 = a1 + t0\n 18942: a2 = a1 ^ a5\n 18945: u64 [sp + 0x10] = a5\n 18948: a1 = a1 <s a5\n 18951: a5 = a3 <u t1\n 18954: a1 = a5 if a2 == 0\n 18957: a3 = a3 ^ t1\n 18960: a2 = a2 | a3\n 18963: a4 = a1 if a2 != 0\n 18966: jump @631 if a4 == 0\n      : @614 (gas: 13)\n 18970: u64 [sp + 0x8] = a0\n 18973: u64 [sp + 0x18] = t1\n 18976: a0 = t2 | s1\n 18979: u64 [sp + 0x38] = ra\n 18982: u64 [sp + 0x30] = t0\n 18985: a1 = ra | t0\n 18988: a0 = a0 | a1\n 18991: a0 = a0 >> 0x20\n 18994: u64 [sp + 0x58] = s1\n 18997: a1 = a1 | s1\n 19000: a1 = a1 << 0x20\n 19003: a0 = a0 | a1\n 19006: jump @630 if a0 != 0\n      : @615 (gas: 4)\n 19010: a0 = sp + 0x150\n 19014: u64 [sp + 0x50] = t2\n 19017: a1 = t2\n 19019: ra = 544, jump @17\n      : @616 [@dyn 272] (gas: 12)\n 19025: a3 = u64 [sp + 0x168]\n 19029: a2 = u64 [sp + 0x160]\n 19033: a4 = u64 [sp + 0x158]\n 19037: a0 = a3 >u 0\n 19039: a1 = a2 >u 0\n 19041: a1 = a0 if a3 != 0\n 19044: u64 [sp + 0x80] = a2\n 19048: u64 [sp + 0x88] = a3\n 19052: a0 = a2 | a3\n 19055: a2 = a4 >u 0\n 19057: a2 = a1 if a0 != 0\n 19060: jump @632 if a2 != 0\n      : @617 (gas: 20)\n 19064: a1 = u64 [sp + 0x150]\n 19068: a0 = a1 + 0x1f\n 19071: u64 [sp + 0x48] = a1\n 19074: a1 = a0 <u a1\n 19077: u64 [sp + 0x78] = a4\n 19080: a1 = a1 + a4\n 19083: a1 = a1 & 0x1\n 19086: a0 = a0 & 0xffffffffffffffe0\n 19089: a2 = a0 + 0x20\n 19092: a0 = a2 <u a0\n 19095: a3 = a1 + a0\n 19098: a4 = a3 <u a1\n 19101: a4 = a0 if a0 == 0\n 19104: u64 [sp + 296] = 0\n 19108: u64 [sp + 0x110] = a2\n 19112: u64 [sp + 0x118] = a3\n 19116: a0 = sp + 0x130\n 19120: a1 = sp + 0x110\n 19124: u64 [sp + 0x120] = a4\n 19128: ra = 546, jump @602\n      : @618 [@dyn 273] (gas: 15)\n 19134: a2 = u64 [sp + 0x148]\n 19138: a3 = u64 [sp + 0x140]\n 19142: a1 = u64 [sp + 0x138]\n 19146: a0 = u64 [sp + 0x130]\n 19150: u64 [sp + 0x40] = a1\n 19153: u64 [sp + 0x68] = a2\n 19156: a2 = a2 | a1\n 19159: a1 = a0 | a3\n 19162: a1 = a1 | a2\n 19165: a1 = a1 >> 0x20\n 19168: u64 [sp + 0x70] = a3\n 19171: a2 = a2 | a3\n 19174: a2 = a2 << 0x20\n 19177: a1 = a1 | a2\n 19180: jump @630 if a1 != 0\n      : @619 (gas: 11)\n 19184: s1 = u64 [sp + 0x48]\n 19187: u64 [sp + 0xf0] = s1\n 19191: a1 = u64 [sp + 0x78]\n 19194: u64 [sp + 0xf8] = a1\n 19198: a1 = u64 [sp + 0x80]\n 19202: u64 [sp + 0x100] = a1\n 19206: a1 = sp + 0xf0\n 19210: a2 = u64 [sp + 0x88]\n 19214: u64 [sp + 0x108] = a2\n 19218: u64 [sp + 0x60] = a0\n 19221: ra = 548, jump @19\n      : @620 [@dyn 274] (gas: 45)\n 19227: a0 = u64 [sp + 0x50]\n 19230: a3 = a0 + s1\n 19233: a2 = a3 <u a0\n 19236: t2 = u64 [sp + 0x38]\n 19239: a0 = u64 [sp + 0x78]\n 19242: a0 = a0 + t2\n 19245: a0 = a0 + a2\n 19248: a4 = a0 ^ t2\n 19251: a1 = a0 <u t2\n 19254: a1 = a2 if a4 == 0\n 19257: t1 = u64 [sp + 0x58]\n 19260: a2 = u64 [sp + 0x80]\n 19264: a2 = a2 + t1\n 19267: a5 = a3 + 0x20\n 19270: t0 = a5 <u a3\n 19273: a4 = a0 + t0\n 19276: a3 = u64 [sp + 0x20]\n 19279: a5 = a3 <u a5\n 19282: a3 = u64 [sp + 0x28]\n 19285: s1 = a4 ^ a3\n 19288: a3 = a3 <u a4\n 19291: a5 = a3 if s1 != 0\n 19294: a3 = a2 <u t1\n 19297: t1 = u64 [sp + 0x30]\n 19300: s1 = u64 [sp + 0x88]\n 19304: s1 = s1 + t1\n 19307: a3 = a3 + s1\n 19310: a1 = a1 + a2\n 19313: a2 = a1 <u a2\n 19316: a2 = a2 + a3\n 19319: a0 = a4 <u a0\n 19322: a0 = t0 if t0 == 0\n 19325: a0 = a0 + a1\n 19328: a1 = a0 <u a1\n 19331: a1 = a1 + a2\n 19334: a3 = u64 [sp + 0x10]\n 19337: a2 = a1 ^ a3\n 19340: a1 = a3 <u a1\n 19343: a4 = u64 [sp + 0x18]\n 19346: a3 = a4 <u a0\n 19349: a1 = a3 if a2 == 0\n 19352: a0 = a0 ^ a4\n 19355: a0 = a0 | a2\n 19358: a5 = a1 if a0 != 0\n 19361: jump @638 if a5 != 0\n      : @621 (gas: 10)\n 19365: a0 = u64 [sp + 0x70]\n 19368: a1 = u64 [sp + 0x68]\n 19371: a1 = a1 | a0\n 19374: a0 = 0xffffffe0\n 19384: a4 = u64 [sp + 0x60]\n 19387: a2 = a4 <u a0\n 19390: a3 = u64 [sp + 0x40]\n 19393: a2 = 0 if a3 != 0\n 19395: a2 = 0 if a1 != 0\n 19397: jump @630 if a2 == 0\n      : @622 (gas: 12)\n 19401: a3 = a4\n 19403: a1 = u64 [sp + 0x58]\n 19406: a1 = a1 | t1\n 19409: a5 = u64 [sp + 0x50]\n 19412: a0 = a5 <u a0\n 19415: a0 = 0 if t2 != 0\n 19417: a0 = 0 if a1 != 0\n 19419: ra = u64 [sp + 0x88]\n 19423: a2 = u64 [sp + 0x80]\n 19427: a4 = u64 [sp + 0x78]\n 19430: s1 = u64 [sp + 0x48]\n 19433: jump @630 if a0 == 0\n      : @623 (gas: 8)\n 19437: a0 = s1 | a2\n 19440: a1 = a4 | ra\n 19443: a0 = a0 | a1\n 19446: a0 = a0 >> 0x20\n 19449: a1 = a1 | a2\n 19452: a1 = a1 << 0x20\n 19455: a0 = a0 | a1\n 19458: jump @630 if a0 != 0\n      : @624 (gas: 5)\n 19462: i32 a0 = a3 + 0x20\n 19465: i32 a1 = a5 + 0x20\n 19468: u64 [sp + 0x58] = a1\n 19471: a1 = s1\n 19473: ra = 550, jump @26\n      : @625 [@dyn 275] (gas: 4)\n 19479: u64 [sp + 0x50] = a0\n 19482: a0 = u64 [sp + 0x58]\n 19485: a1 = s1\n 19487: ra = 552, jump @26\n      : @626 [@dyn 276] (gas: 4)\n 19493: a1 = a0\n 19495: a0 = u64 [sp + 0x50]\n 19498: a2 = s1\n 19500: ra = 554, jump @0\n      : @627 [@dyn 277] (gas: 27)\n 19506: a1 = u64 [sp + 0x60]\n 19509: a0 = a1 + s1\n 19512: a1 = a0 <u a1\n 19515: s1 = u64 [sp + 0x40]\n 19518: a2 = u64 [sp + 0x78]\n 19521: a2 = a2 + s1\n 19524: a2 = a2 + a1\n 19527: a3 = a2 ^ s1\n 19530: a4 = a2 <u s1\n 19533: a4 = a1 if a3 == 0\n 19536: a5 = u64 [sp + 0x70]\n 19539: a1 = u64 [sp + 0x80]\n 19543: a1 = a1 + a5\n 19546: a4 = a4 + a1\n 19549: t0 = a4 <u a1\n 19552: a1 = a1 <u a5\n 19555: a5 = u64 [sp + 0x88]\n 19559: a3 = u64 [sp + 0x68]\n 19562: a5 = a5 + a3\n 19565: a1 = a1 + a5\n 19568: a1 = a1 + t0\n 19571: a1 = a1 | a4\n 19574: a3 = 0xffffffe0\n 19584: a3 = a0 <u a3\n 19587: a3 = 0 if a2 != 0\n 19589: a3 = 0 if a1 != 0\n 19591: jump @630 if a3 == 0\n      : @628 (gas: 7)\n 19594: i32 a0 = a0 + 0x20\n 19597: u64 [sp + 232] = 0\n 19601: u64 [sp + 224] = 0\n 19605: u64 [sp + 216] = 0\n 19609: a1 = sp + 0xd0\n 19613: u64 [sp + 208] = 0\n 19617: ra = 556, jump @19\n      : @629 [@dyn 278] (gas: 14)\n 19623: a0 = u64 [sp + 0x8]\n 19626: a1 = u64 [sp + 0x68]\n 19629: u64 [a0 + 0x18] = a1\n 19632: a1 = u64 [sp + 0x70]\n 19635: u64 [a0 + 0x10] = a1\n 19638: u64 [a0 + 0x8] = s1\n 19641: a1 = u64 [sp + 0x60]\n 19644: u64 [a0] = a1\n 19646: sp = s0 + 0xfffffffffffffe70\n 19650: ra = u64 [sp + 0x188]\n 19654: s0 = u64 [sp + 0x180]\n 19658: s1 = u64 [sp + 0x178]\n 19662: sp = sp + 0x190\n 19666: ret\n      : @630 (gas: 1)\n 19668: trap\n      : @631 (gas: 2)\n 19669: a1 = 0x200f0\n 19674: jump @639\n      : @632 (gas: 6)\n 19676: u64 [sp + 192] = 0\n 19680: u64 [sp + 184] = 0\n 19684: u64 [sp + 176] = 0\n 19688: t0 = 0x22e\n 19692: a0 = 0x4e487b7100000000\n 19702: fallthrough\n      : @633 [@dyn 279] (gas: 4)\n 19703: a1 = sp + 0xb0\n 19707: u64 [sp + 0xc8] = a0\n 19711: a0 = 0\n 19713: ra = 560, jump @19\n      : @634 [@dyn 280] (gas: 7)\n 19719: u64 [sp + 168] = 0\n 19723: u64 [sp + 160] = 0\n 19727: u64 [sp + 144] = 0x41\n 19732: a0 = 0x4\n 19735: a1 = sp + 0x90\n 19739: u64 [sp + 152] = 0\n 19743: ra = 562, jump @19\n      : @635 [@dyn 281] (gas: 2)\n 19749: a1 = i32 [0x200e4]\n 19754: jump @637 if a1 >u 63\n      : @636 (gas: 2)\n 19758: u32 [0x200e4] = 0x40\n 19764: fallthrough\n      : @637 (gas: 7)\n 19765: a1 = 0x200f0\n 19770: i32 a1 = a1 + 0\n 19772: a0 = 0x1\n 19775: a2 = 0x24\n 19778: ecalli 7 // 'seal_return'\n 19780: a1 = 0x200f0\n 19785: jump @639\n      : @638 (gas: 2)\n 19787: a1 = 0x200f0\n 19792: fallthrough\n      : @639 (gas: 6)\n 19793: i32 a1 = a1 + 0\n 19795: a0 = 0x1\n 19798: a2 = 0\n 19800: ra = 0x234\n 19804: ecalli 7 // 'seal_return'\n 19806: fallthrough\n      : @640 [@dyn 282] (gas: 22)\n 19807: sp = sp + 0xfffffffffffffee0\n 19811: u64 [sp + 0x118] = ra\n 19815: u64 [sp + 0x110] = s0\n 19819: u64 [sp + 0x108] = s1\n 19823: s0 = sp + 0x120\n 19827: sp = sp & 0xfffffffffffffff0\n 19830: a4 = u64 [a1 + 0x10]\n 19833: a3 = u64 [a1 + 0x18]\n 19836: a5 = u64 [a1 + 0x8]\n 19839: t0 = u64 [a1]\n 19841: u64 [sp + 0x68] = a3\n 19844: u64 [sp + 0x78] = a5\n 19847: a1 = a5 | a3\n 19850: a3 = t0 | a4\n 19853: a3 = a3 | a1\n 19856: a3 = a3 >> 0x20\n 19859: u64 [sp + 0x70] = a4\n 19862: a1 = a1 | a4\n 19865: a1 = a1 << 0x20\n 19868: a1 = a1 | a3\n 19871: u64 [sp + 0x8] = a0\n 19874: jump @655 if a1 != 0\n      : @641 (gas: 15)\n 19878: a0 = u64 [a2 + 0x18]\n 19881: u64 [sp + 0x48] = a0\n 19884: s1 = u64 [a2 + 0x10]\n 19887: a0 = u64 [a2 + 0x8]\n 19890: u64 [sp + 0x50] = a0\n 19893: a0 = u64 [a2]\n 19895: u64 [sp + 0x58] = a0\n 19898: u64 [sp + 248] = 0\n 19902: u64 [sp + 240] = 0\n 19906: u64 [sp + 232] = 0\n 19910: a1 = sp + 0xe0\n 19914: u64 [sp + 224] = 0x20\n 19919: a0 = t0\n 19921: u64 [sp + 0x60] = t0\n 19924: ra = 566, jump @19\n      : @642 [@dyn 283] (gas: 12)\n 19930: a1 = u64 [sp + 0x58]\n 19933: a0 = a1 | s1\n 19936: a2 = u64 [sp + 0x48]\n 19939: a3 = u64 [sp + 0x50]\n 19942: a2 = a2 | a3\n 19945: a0 = a0 | a2\n 19948: a0 = a0 >> 0x20\n 19951: u64 [sp + 0x20] = s1\n 19954: a2 = a2 | s1\n 19957: a2 = a2 << 0x20\n 19960: a0 = a0 | a2\n 19963: jump @655 if a0 != 0\n      : @643 (gas: 2)\n 19967: a0 = sp + 0xc0\n 19971: ra = 568, jump @17\n      : @644 [@dyn 284] (gas: 13)\n 19977: a0 = u64 [sp + 0x70]\n 19980: a1 = u64 [sp + 0x68]\n 19983: a1 = a1 | a0\n 19986: a0 = 0x100000000\n 19996: u64 [sp + 0x10] = a0\n 19999: a0 = 0xffffffe0\n 20009: a2 = u64 [sp + 0x60]\n 20012: a0 = a2 <u a0\n 20015: a3 = u64 [sp + 0x78]\n 20018: a0 = 0 if a3 != 0\n 20020: u64 [sp + 0x18] = a1\n 20023: a0 = 0 if a1 != 0\n 20025: jump @655 if a0 == 0\n      : @645 (gas: 16)\n 20029: a3 = u64 [sp + 0xd8]\n 20033: a4 = u64 [sp + 0xd0]\n 20037: a5 = u64 [sp + 0xc8]\n 20041: a1 = u64 [sp + 0xc0]\n 20045: i32 a0 = a2 + 0x20\n 20048: u64 [sp + 0x28] = a1\n 20051: u64 [sp + 0xa0] = a1\n 20055: u64 [sp + 0x30] = a5\n 20058: u64 [sp + 0xa8] = a5\n 20062: u64 [sp + 0x38] = a4\n 20065: u64 [sp + 0xb0] = a4\n 20069: a1 = sp + 0xa0\n 20073: u64 [sp + 0x40] = a3\n 20076: u64 [sp + 0xb8] = a3\n 20080: s1 = a2\n 20082: ra = 570, jump @19\n      : @646 [@dyn 285] (gas: 8)\n 20088: a0 = u64 [sp + 0x10]\n 20091: a0 = a0 + 0xffffffffffffffc0\n 20094: a0 = s1 <u a0\n 20097: a1 = u64 [sp + 0x78]\n 20100: a0 = 0 if a1 != 0\n 20102: a1 = u64 [sp + 0x18]\n 20105: a0 = 0 if a1 != 0\n 20107: jump @655 if a0 == 0\n      : @647 (gas: 10)\n 20111: a0 = u64 [sp + 0x48]\n 20114: a1 = u64 [sp + 0x20]\n 20117: a0 = a0 | a1\n 20120: a1 = 0xffffffe0\n 20130: a3 = u64 [sp + 0x58]\n 20133: a1 = a3 <u a1\n 20136: a4 = u64 [sp + 0x50]\n 20139: a1 = 0 if a4 != 0\n 20141: a1 = 0 if a0 != 0\n 20143: jump @655 if a1 == 0\n      : @648 (gas: 13)\n 20147: a2 = s1\n 20149: a1 = u64 [sp + 0x28]\n 20152: a5 = u64 [sp + 0x38]\n 20155: a0 = a1 | a5\n 20158: a4 = u64 [sp + 0x40]\n 20161: s1 = u64 [sp + 0x30]\n 20164: a4 = a4 | s1\n 20167: a0 = a0 | a4\n 20170: a0 = a0 >> 0x20\n 20173: a4 = a4 | a5\n 20176: a4 = a4 << 0x20\n 20179: a0 = a0 | a4\n 20182: jump @655 if a0 != 0\n      : @649 (gas: 5)\n 20186: i32 a0 = a2 + 0x40\n 20189: i32 a3 = a3 + 0x20\n 20192: u64 [sp + 0x58] = a3\n 20195: s1 = a1\n 20197: ra = 572, jump @26\n      : @650 [@dyn 286] (gas: 4)\n 20203: u64 [sp + 0x50] = a0\n 20206: a0 = u64 [sp + 0x58]\n 20209: a1 = s1\n 20211: ra = 574, jump @26\n      : @651 [@dyn 287] (gas: 4)\n 20217: a1 = a0\n 20219: a0 = u64 [sp + 0x50]\n 20222: a2 = s1\n 20224: ra = 576, jump @0\n      : @652 [@dyn 288] (gas: 27)\n 20230: a0 = u64 [sp + 0x60]\n 20233: a0 = a0 + s1\n 20236: a1 = a0 <u s1\n 20239: a2 = u64 [sp + 0x78]\n 20242: a4 = u64 [sp + 0x30]\n 20245: a2 = a2 + a4\n 20248: a2 = a2 + a1\n 20251: a3 = a2 ^ a4\n 20254: a4 = a2 <u a4\n 20257: a4 = a1 if a3 == 0\n 20260: a1 = u64 [sp + 0x70]\n 20263: a3 = u64 [sp + 0x38]\n 20266: a1 = a1 + a3\n 20269: a3 = a1 <u a3\n 20272: a5 = u64 [sp + 0x68]\n 20275: s1 = u64 [sp + 0x40]\n 20278: a5 = a5 + s1\n 20281: a3 = a3 + a5\n 20284: a4 = a4 + a1\n 20287: a1 = a4 <u a1\n 20290: a1 = a1 + a3\n 20293: a1 = a1 | a4\n 20296: a3 = 0xffffffc0\n 20306: a3 = a0 <u a3\n 20309: a3 = 0 if a2 != 0\n 20311: a3 = 0 if a1 != 0\n 20313: jump @655 if a3 == 0\n      : @653 (gas: 7)\n 20317: i32 a0 = a0 + 0x40\n 20320: u64 [sp + 152] = 0\n 20324: u64 [sp + 144] = 0\n 20328: u64 [sp + 136] = 0\n 20332: a1 = sp + 0x80\n 20336: u64 [sp + 128] = 0\n 20340: ra = 578, jump @19\n      : @654 [@dyn 289] (gas: 35)\n 20346: s1 = u64 [sp + 0x28]\n 20349: s1 = s1 + 0x1f\n 20352: a0 = 0x1ffffffe0\n 20362: a0 = a0 & s1\n 20365: a1 = u64 [sp + 0x60]\n 20368: a0 = a0 + a1\n 20371: a1 = a0 <u a1\n 20374: a3 = u64 [sp + 0x78]\n 20377: a2 = a3 + a1\n 20380: a3 = a2 <u a3\n 20383: a3 = a1 if a1 == 0\n 20386: a1 = u64 [sp + 0x70]\n 20389: a3 = a3 + a1\n 20392: a1 = a3 <u a1\n 20395: a4 = u64 [sp + 0x68]\n 20398: a1 = a1 + a4\n 20401: a4 = a0 + 0x40\n 20404: a0 = a4 <u a0\n 20407: a5 = a2 + a0\n 20410: a2 = a5 <u a2\n 20413: a2 = a0 if a0 == 0\n 20416: a2 = a2 + a3\n 20419: a0 = a2 <u a3\n 20422: a0 = a0 + a1\n 20425: a1 = u64 [sp + 0x8]\n 20428: u64 [a1] = a4\n 20430: u64 [a1 + 0x8] = a5\n 20433: u64 [a1 + 0x10] = a2\n 20436: u64 [a1 + 0x18] = a0\n 20439: sp = s0 + 0xfffffffffffffee0\n 20443: ra = u64 [sp + 0x118]\n 20447: s0 = u64 [sp + 0x110]\n 20451: s1 = u64 [sp + 0x108]\n 20455: sp = sp + 0x120\n 20459: ret\n      : @655 (gas: 1)\n 20461: trap\n      : @656 [@dyn 290] (gas: 5)\n 20462: a1 = 0x4\n 20465: ra = 0x246\n 20469: ecalli 1 // 'call_data_load'\n 20471: t0 = 0x248\n 20475: jump @739\n      : @657 [@dyn 291] (gas: 1)\n 20478: t0 = 584, jump @739\n      : @658 [@dyn 292] (gas: 1)\n 20484: jump @661 if a3 == 0\n      : @659 (gas: 1)\n 20487: t0 = 586, jump @744\n      : @660 [@dyn 293] (gas: 1)\n 20493: ret\n      : @661 (gas: 8)\n 20495: a1 = 0x200f0\n 20500: i32 a1 = a1 + 0\n 20502: a0 = 0x1\n 20505: a2 = 0\n 20507: ra = 0x24c\n 20511: ecalli 7 // 'seal_return'\n 20513: t0 = 0x24e\n 20517: jump @749\n      : @662 [@dyn 294] (gas: 1)\n 20520: t0 = 590, jump @749\n      : @663 [@dyn 295] (gas: 5)\n 20526: a1 = 0x24\n 20529: ra = 0x250\n 20533: ecalli 1 // 'call_data_load'\n 20535: t0 = 0x252\n 20539: jump @739\n      : @664 [@dyn 296] (gas: 1)\n 20542: t0 = 594, jump @739\n      : @665 [@dyn 297] (gas: 1)\n 20548: jump @668 if a3 == 0\n      : @666 (gas: 1)\n 20551: t0 = 596, jump @744\n      : @667 [@dyn 298] (gas: 1)\n 20557: ret\n      : @668 (gas: 7)\n 20559: a1 = 0x200f0\n 20564: i32 a1 = a1 + 0\n 20566: a0 = 0x1\n 20569: a2 = 0\n 20571: ra = 0x256\n 20575: ecalli 7 // 'seal_return'\n 20577: fallthrough\n      : @669 [@dyn 299] (gas: 14)\n 20578: sp = sp + 0xfffffffffffffc20\n 20582: a3 = sp + 0x300\n 20586: u64 [a3 + 0xd8] = ra\n 20590: u64 [a3 + 0xd0] = s0\n 20594: u64 [a3 + 0xc8] = s1\n 20598: s0 = sp + 0x3e0\n 20602: sp = sp & 0xffffffffffffffe0\n 20605: s1 = sp\n 20607: t2 = u32 [a0 + 0x10]\n 20610: a3 = u64 [a0]\n 20612: a4 = u64 [a0 + 0x8]\n 20615: a0 = a3 | t2\n 20618: a0 = a0 | a4\n 20621: jump @701 if a0 == 0\n      : @670 (gas: 13)\n 20625: t0 = u64 [a1 + 0x10]\n 20628: t1 = u64 [a1 + 0x8]\n 20631: ra = u64 [a1]\n 20633: a5 = 0xffffffff\n 20643: a1 = t1 & 0xffffffffffffffff\n 20646: a0 = ra & 0xffffffffffffffff\n 20649: a5 = t0 & a5\n 20652: u64 [s1 + 0x48] = a0\n 20655: u64 [s1 + 0x38] = a5\n 20658: a0 = a0 | a5\n 20661: u64 [s1 + 0x40] = a1\n 20664: a0 = a0 | a1\n 20667: jump @706 if a0 == 0\n      : @671 (gas: 18)\n 20671: a0 = u64 [a2 + 0x18]\n 20674: u64 [s1 + 0x98] = a0\n 20678: a0 = u64 [a2 + 0x10]\n 20681: u64 [s1 + 0x88] = a0\n 20685: a0 = u64 [a2 + 0x8]\n 20688: u64 [s1 + 0x80] = a0\n 20692: a0 = u64 [a2]\n 20694: u64 [s1 + 0x90] = a0\n 20698: u64 [s1 + 824] = 0\n 20702: u64 [s1 + 0x60] = a3\n 20705: u64 [s1 + 0x320] = a3\n 20709: u64 [s1 + 0x58] = a4\n 20712: u64 [s1 + 0x328] = a4\n 20716: a1 = s1 + 0x320\n 20720: u64 [s1 + 0x50] = t2\n 20723: u64 [s1 + 0x330] = t2\n 20727: a0 = 0\n 20729: ra = 600, jump @19\n      : @672 [@dyn 300] (gas: 7)\n 20735: u64 [s1 + 792] = 0\n 20739: u64 [s1 + 784] = 0\n 20743: u64 [s1 + 776] = 0\n 20747: a0 = 0x20\n 20750: a1 = s1 + 0x300\n 20754: u64 [s1 + 768] = 0\n 20758: ra = 602, jump @19\n      : @673 [@dyn 301] (gas: 3)\n 20764: a2 = 0x200e4\n 20769: a0 = i32 [0x200e4]\n 20774: jump @675 if a0 >u 63\n      : @674 (gas: 2)\n 20778: u32 [0x200e4] = 0x40\n 20784: fallthrough\n      : @675 (gas: 15)\n 20785: u64 [s1 + 0x70] = a2\n 20788: a0 = sp + 0xffffffffffffffe0\n 20791: a2 = a0 & 0xffffffffffffffe0\n 20794: u64 [s1 + 0x68] = a2\n 20797: sp = a2\n 20799: a0 = 0x200f0\n 20804: i32 a0 = a0 + 0\n 20806: i32 a2 = a2 + 0\n 20808: a1 = 0x40\n 20811: u64 [s1 + 0x78] = a0\n 20814: ra = 0x25c\n 20818: ecalli 6 // 'hash_keccak_256'\n 20820: a3 = u64 [s1 + 0x68]\n 20823: t0 = 0x25e\n 20827: jump @741\n      : @676 [@dyn 302] (gas: 2)\n 20830: a3 = u64 [s1 + 0x68]\n 20833: t0 = 606, jump @741\n      : @677 [@dyn 303] (gas: 7)\n 20839: u64 [a4 + 0x58] = a3\n 20842: u64 [a4 + 0x50] = a2\n 20845: u64 [a4 + 0x48] = a1\n 20848: u64 [a4 + 0x40] = a0\n 20851: a0 = s1 + 0x2e0\n 20855: a1 = s1 + 0x340\n 20859: ra = 608, jump @21\n      : @678 [@dyn 304] (gas: 28)\n 20865: a1 = s1 + 0x200\n 20869: a2 = u64 [a1 + 0xf8]\n 20873: a0 = u64 [a1 + 0xf0]\n 20877: a5 = u64 [a1 + 0xe8]\n 20881: a4 = u64 [a1 + 0xe0]\n 20885: a1 = u64 [s1 + 0x98]\n 20889: t1 = a2 ^ a1\n 20892: u64 [s1 + 0x28] = a2\n 20895: a1 = a2 <u a1\n 20898: a2 = u64 [s1 + 0x88]\n 20902: a3 = a0 <u a2\n 20905: u64 [s1 + 0x10] = a3\n 20908: a1 = a3 if t1 == 0\n 20911: a3 = u64 [s1 + 0x80]\n 20915: t0 = a5 ^ a3\n 20918: u64 [s1 + 0x30] = a5\n 20921: a5 = a5 <u a3\n 20924: a3 = u64 [s1 + 0x90]\n 20928: u64 [s1 + 0x68] = a4\n 20931: a3 = a4 <u a3\n 20934: u64 [s1 + 0x18] = a3\n 20937: a5 = a3 if t0 == 0\n 20940: u64 [s1 + 0x20] = a0\n 20943: a2 = a2 ^ a0\n 20946: a0 = a2 | t1\n 20949: u64 [s1 + 0x8] = a5\n 20952: a1 = a5 if a0 == 0\n 20955: jump @712 if a1 != 0\n      : @679 (gas: 11)\n 20959: u64 [s1 + 728] = 0\n 20963: a0 = u64 [s1 + 0x60]\n 20966: a2 = s1 + 0x200\n 20970: u64 [a2 + 0xc0] = a0\n 20974: a0 = u64 [s1 + 0x58]\n 20977: u64 [a2 + 0xc8] = a0\n 20981: a1 = s1 + 0x2c0\n 20985: a0 = u64 [s1 + 0x50]\n 20988: u64 [a2 + 0xd0] = a0\n 20992: a0 = 0\n 20994: ra = 610, jump @19\n      : @680 [@dyn 305] (gas: 7)\n 21000: u64 [s1 + 696] = 0\n 21004: u64 [s1 + 688] = 0\n 21008: u64 [s1 + 680] = 0\n 21012: a0 = 0x20\n 21015: a1 = s1 + 0x2a0\n 21019: u64 [s1 + 672] = 0\n 21023: ra = 612, jump @19\n      : @681 [@dyn 306] (gas: 27)\n 21029: a0 = u64 [s1 + 0x88]\n 21033: a1 = u64 [s1 + 0x20]\n 21036: a0 = a1 - a0\n 21039: a2 = u64 [s1 + 0x8]\n 21042: a1 = a0 - a2\n 21045: u64 [s1 + 0x20] = a1\n 21048: a0 = a0 <u a2\n 21051: a1 = u64 [s1 + 0x98]\n 21055: a2 = u64 [s1 + 0x28]\n 21058: a1 = a2 - a1\n 21061: a2 = u64 [s1 + 0x10]\n 21064: a1 = a1 - a2\n 21067: a1 = a1 - a0\n 21070: u64 [s1 + 0x28] = a1\n 21073: a2 = u64 [s1 + 0x70]\n 21076: a0 = i32 [a2]\n 21078: a1 = u64 [s1 + 0x80]\n 21082: a3 = u64 [s1 + 0x30]\n 21085: a1 = a3 - a1\n 21088: a3 = u64 [s1 + 0x18]\n 21091: a1 = a1 - a3\n 21094: u64 [s1 + 0x30] = a1\n 21097: a1 = u64 [s1 + 0x90]\n 21101: a3 = u64 [s1 + 0x68]\n 21104: a3 = a3 - a1\n 21107: u64 [s1 + 0x68] = a3\n 21110: jump @683 if a0 >u 63\n      : @682 (gas: 2)\n 21114: u32 [a2 + 0] = 0x40\n 21117: fallthrough\n      : @683 (gas: 12)\n 21118: a0 = sp + 0xffffffffffffffe0\n 21121: a0 = a0 & 0xffffffffffffffe0\n 21124: u64 [s1 + 0x18] = a0\n 21127: sp = a0\n 21129: i32 a2 = a0 + 0\n 21131: a1 = 0x40\n 21134: a0 = u64 [s1 + 0x78]\n 21137: ra = 0x266\n 21141: ecalli 6 // 'hash_keccak_256'\n 21143: a3 = u64 [s1 + 0x18]\n 21146: t0 = 0x268\n 21150: jump @741\n      : @684 [@dyn 307] (gas: 2)\n 21153: a3 = u64 [s1 + 0x18]\n 21156: t0 = 616, jump @741\n      : @685 [@dyn 308] (gas: 15)\n 21162: u64 [a4 + 0x78] = a3\n 21165: u64 [a4 + 0x70] = a2\n 21168: u64 [a4 + 0x68] = a1\n 21171: u64 [a4 + 0x60] = a0\n 21174: a0 = u64 [s1 + 0x28]\n 21177: u64 [a4 + 0x98] = a0\n 21181: a0 = u64 [s1 + 0x20]\n 21184: u64 [a4 + 0x90] = a0\n 21188: a0 = u64 [s1 + 0x30]\n 21191: u64 [a4 + 0x88] = a0\n 21195: a0 = u64 [s1 + 0x68]\n 21198: u64 [a4 + 0x80] = a0\n 21202: a0 = s1 + 0x360\n 21206: a1 = s1 + 0x380\n 21210: ra = 618, jump @22\n      : @686 [@dyn 309] (gas: 11)\n 21216: u64 [s1 + 664] = 0\n 21220: a0 = u64 [s1 + 0x38]\n 21223: a2 = s1 + 0x200\n 21227: u64 [a2 + 0x90] = a0\n 21231: a0 = u64 [s1 + 0x40]\n 21234: u64 [a2 + 0x88] = a0\n 21238: a1 = s1 + 0x280\n 21242: a0 = u64 [s1 + 0x48]\n 21245: u64 [a2 + 0x80] = a0\n 21249: a0 = 0\n 21251: ra = 620, jump @19\n      : @687 [@dyn 310] (gas: 7)\n 21257: u64 [s1 + 632] = 0\n 21261: u64 [s1 + 624] = 0\n 21265: u64 [s1 + 616] = 0\n 21269: a0 = 0x20\n 21272: a1 = s1 + 0x260\n 21276: u64 [s1 + 608] = 0\n 21280: ra = 622, jump @19\n      : @688 [@dyn 311] (gas: 7)\n 21286: a1 = u64 [s1 + 0x70]\n 21289: a0 = sp + 0xffffffffffffffe0\n 21292: a0 = a0 & 0xffffffffffffffe0\n 21295: u64 [s1 + 0x68] = a0\n 21298: sp = a0\n 21300: a0 = i32 [a1]\n 21302: jump @690 if a0 >u 63\n      : @689 (gas: 2)\n 21306: u32 [a1 + 0] = 0x40\n 21309: fallthrough\n      : @690 (gas: 12)\n 21310: a0 = sp + 0xffffffffffffffe0\n 21313: a0 = a0 & 0xffffffffffffffe0\n 21316: u64 [s1 + 0x70] = a0\n 21319: sp = a0\n 21321: i32 a2 = a0 + 0\n 21323: a1 = 0x40\n 21326: a0 = u64 [s1 + 0x78]\n 21329: ra = 0x270\n 21333: ecalli 6 // 'hash_keccak_256'\n 21335: a3 = u64 [s1 + 0x70]\n 21338: t0 = 0x272\n 21342: jump @734\n      : @691 [@dyn 312] (gas: 2)\n 21345: a3 = u64 [s1 + 0x70]\n 21348: t0 = 626, jump @734\n      : @692 [@dyn 313] (gas: 7)\n 21354: a1 = u64 [s1 + 0x68]\n 21357: u64 [a1 + 0x18] = a3\n 21360: u64 [a1 + 0x10] = a2\n 21363: u64 [a1 + 0x8] = a4\n 21366: u64 [a1] = a0\n 21368: a0 = s1 + 0x240\n 21372: ra = 628, jump @21\n      : @693 [@dyn 314] (gas: 30)\n 21378: a0 = u64 [s1 + 0x248]\n 21382: a1 = u64 [s1 + 0x240]\n 21386: t0 = u64 [s1 + 0x258]\n 21390: a3 = u64 [s1 + 0x250]\n 21394: a4 = u64 [s1 + 0x80]\n 21398: a4 = a4 + a0\n 21401: a5 = u64 [s1 + 0x90]\n 21405: a5 = a5 + a1\n 21408: a1 = a5 <u a1\n 21411: a4 = a4 + a1\n 21414: a2 = a4 ^ a0\n 21417: a0 = a4 <u a0\n 21420: a0 = a1 if a2 == 0\n 21423: a1 = u64 [s1 + 0x88]\n 21427: a1 = a1 + a3\n 21430: a2 = u64 [s1 + 0x98]\n 21434: t0 = t0 + a2\n 21437: a2 = a1 <u a3\n 21440: a2 = a2 + t0\n 21443: a0 = a0 + a1\n 21446: a1 = a0 <u a1\n 21449: a1 = a1 + a2\n 21452: a2 = s1 + 0x300\n 21456: u64 [a2 + 0xa0] = a5\n 21460: u64 [a2 + 0xa8] = a4\n 21464: u64 [a2 + 0xb0] = a0\n 21468: u64 [a2 + 0xb8] = a1\n 21472: a1 = s1 + 0x3a0\n 21476: a0 = u64 [s1 + 0x68]\n 21479: ra = 630, jump @22\n      : @694 [@dyn 315] (gas: 3)\n 21485: a0 = s1 + 0x220\n 21489: a1 = 0x40\n 21492: ra = 632, jump @17\n      : @695 [@dyn 316] (gas: 6)\n 21498: a4 = s1 + 0x200\n 21502: a3 = u64 [a4 + 0x38]\n 21505: a1 = u64 [a4 + 0x30]\n 21508: a2 = u64 [a4 + 0x28]\n 21511: a0 = u64 [a4 + 0x20]\n 21514: t0 = 634, jump @738\n      : @696 [@dyn 317] (gas: 1)\n 21520: jump @700 if a1 != 0\n      : @697 (gas: 12)\n 21524: a1 = u64 [s1 + 0x90]\n 21528: a3 = s1 + 0x200\n 21532: u64 [a3] = a1\n 21534: a1 = u64 [s1 + 0x80]\n 21538: u64 [a3 + 0x8] = a1\n 21541: a1 = u64 [s1 + 0x88]\n 21545: u64 [a3 + 0x10] = a1\n 21548: a1 = s1 + 0x200\n 21552: a2 = u64 [s1 + 0x98]\n 21556: u64 [a3 + 0x18] = a2\n 21559: u64 [s1 + 0x98] = a0\n 21563: ra = 636, jump @19\n      : @698 [@dyn 318] (gas: 29)\n 21569: u64 [s1 + 440] = 0\n 21573: a0 = u64 [s1 + 0x38]\n 21576: a5 = s1 + 0x100\n 21580: u64 [a5 + 0xb0] = a0\n 21584: a0 = u64 [s1 + 0x40]\n 21587: u64 [a5 + 0xa8] = a0\n 21591: a0 = u64 [s1 + 0x48]\n 21594: u64 [a5 + 0xa0] = a0\n 21598: u64 [s1 + 472] = 0\n 21602: a0 = u64 [s1 + 0x50]\n 21605: u64 [a5 + 0xd0] = a0\n 21609: a0 = u64 [s1 + 0x58]\n 21612: u64 [a5 + 0xc8] = a0\n 21616: a0 = u64 [0x200c0]\n 21621: a1 = u64 [0x200c8]\n 21626: a2 = u64 [0x200d0]\n 21631: a3 = u64 [s1 + 0x60]\n 21634: u64 [a5 + 0xc0] = a3\n 21638: u64 [a5 + 0xf8] = a0\n 21642: u64 [a5 + 0xf0] = a1\n 21646: u64 [a5 + 0xe8] = a2\n 21650: a0 = u64 [0x200d8]\n 21655: a1 = 0x20\n 21658: a2 = s1 + 0x1e0\n 21662: a3 = s1 + 0x1c0\n 21666: a4 = s1 + 0x1a0\n 21670: u64 [a5 + 0xe0] = a0\n 21674: a0 = u64 [s1 + 0x98]\n 21678: ra = 638, jump @23\n      : @699 [@dyn 319] (gas: 7)\n 21684: sp = s0 + 0xfffffffffffffc20\n 21688: a0 = sp + 0x300\n 21692: ra = u64 [a0 + 0xd8]\n 21696: s0 = u64 [a0 + 0xd0]\n 21700: s1 = u64 [a0 + 0xc8]\n 21704: sp = sp + 0x3e0\n 21708: ret\n      : @700 (gas: 1)\n 21710: trap\n      : @701 (gas: 8)\n 21711: u64 [s1 + 208] = 0\n 21715: u64 [s1 + 200] = 0\n 21719: u64 [s1 + 192] = 0\n 21723: a0 = 0x96c6fd1e00000000\n 21733: a1 = s1 + 0xc0\n 21737: u64 [s1 + 0xd8] = a0\n 21741: a0 = 0\n 21743: ra = 640, jump @19\n      : @702 [@dyn 320] (gas: 7)\n 21749: u64 [s1 + 184] = 0\n 21753: u64 [s1 + 176] = 0\n 21757: u64 [s1 + 168] = 0\n 21761: a0 = 0x4\n 21764: a1 = s1 + 0xa0\n 21768: u64 [s1 + 160] = 0\n 21772: ra = 642, jump @19\n      : @703 [@dyn 321] (gas: 2)\n 21778: a1 = i32 [0x200e4]\n 21783: jump @705 if a1 >u 63\n      : @704 (gas: 3)\n 21787: u32 [0x200e4] = 0x40\n 21793: a1 = 0x200f0\n 21798: jump @711\n      : @705 (gas: 2)\n 21800: a1 = 0x200f0\n 21805: jump @711\n      : @706 (gas: 8)\n 21807: u64 [s1 + 272] = 0\n 21811: u64 [s1 + 264] = 0\n 21815: u64 [s1 + 256] = 0\n 21819: a0 = 0xec442f0500000000\n 21829: a1 = s1 + 0x100\n 21833: u64 [s1 + 0x118] = a0\n 21837: a0 = 0\n 21839: ra = 644, jump @19\n      : @707 [@dyn 322] (gas: 7)\n 21845: u64 [s1 + 248] = 0\n 21849: u64 [s1 + 240] = 0\n 21853: u64 [s1 + 232] = 0\n 21857: a0 = 0x4\n 21860: a1 = s1 + 0xe0\n 21864: u64 [s1 + 224] = 0\n 21868: ra = 646, jump @19\n      : @708 [@dyn 323] (gas: 2)\n 21874: a1 = i32 [0x200e4]\n 21879: jump @710 if a1 >u 63\n      : @709 (gas: 3)\n 21883: u32 [0x200e4] = 0x40\n 21889: a1 = 0x200f0\n 21894: jump @711\n      : @710 (gas: 2)\n 21896: a1 = 0x200f0\n 21901: fallthrough\n      : @711 (gas: 5)\n 21902: i32 a1 = a1 + 0\n 21904: a0 = 0x1\n 21907: a2 = 0x24\n 21910: ecalli 7 // 'seal_return'\n 21912: fallthrough\n      : @712 (gas: 8)\n 21913: u64 [s1 + 400] = 0\n 21917: u64 [s1 + 392] = 0\n 21921: u64 [s1 + 384] = 0\n 21925: a0 = 0xe450d38c00000000\n 21935: a1 = s1 + 0x180\n 21939: u64 [s1 + 0x198] = a0\n 21943: a0 = 0\n 21945: ra = 648, jump @19\n      : @713 [@dyn 324] (gas: 10)\n 21951: u64 [s1 + 376] = 0\n 21955: a0 = u64 [s1 + 0x50]\n 21958: u64 [s1 + 0x170] = a0\n 21962: a0 = u64 [s1 + 0x58]\n 21965: u64 [s1 + 0x168] = a0\n 21969: a0 = 0x4\n 21972: a1 = s1 + 0x160\n 21976: a2 = u64 [s1 + 0x60]\n 21979: u64 [s1 + 0x160] = a2\n 21983: ra = 650, jump @19\n      : @714 [@dyn 325] (gas: 11)\n 21989: a0 = u64 [s1 + 0x28]\n 21992: u64 [s1 + 0x158] = a0\n 21996: a0 = u64 [s1 + 0x20]\n 21999: u64 [s1 + 0x150] = a0\n 22003: a0 = u64 [s1 + 0x30]\n 22006: u64 [s1 + 0x148] = a0\n 22010: a0 = 0x24\n 22013: a1 = s1 + 0x140\n 22017: a2 = u64 [s1 + 0x68]\n 22020: u64 [s1 + 0x140] = a2\n 22024: ra = 652, jump @19\n      : @715 [@dyn 326] (gas: 12)\n 22030: a0 = u64 [s1 + 0x98]\n 22034: a3 = s1 + 0x100\n 22038: u64 [a3 + 0x38] = a0\n 22041: a0 = u64 [s1 + 0x88]\n 22045: u64 [a3 + 0x30] = a0\n 22048: a0 = u64 [s1 + 0x80]\n 22052: u64 [a3 + 0x28] = a0\n 22055: a0 = 0x44\n 22058: a1 = s1 + 0x120\n 22062: a2 = u64 [s1 + 0x90]\n 22066: u64 [a3 + 0x20] = a2\n 22069: ra = 654, jump @19\n      : @716 [@dyn 327] (gas: 3)\n 22075: a0 = u64 [s1 + 0x70]\n 22078: a0 = i32 [a0]\n 22080: jump @718 if a0 >u 127\n      : @717 (gas: 3)\n 22084: a1 = u64 [s1 + 0x70]\n 22087: u32 [a1 + 0] = 0x80\n 22091: fallthrough\n      : @718 (gas: 6)\n 22092: a0 = 0x1\n 22095: a2 = 0x64\n 22098: a1 = u64 [s1 + 0x78]\n 22101: ra = 0x290\n 22105: ecalli 7 // 'seal_return'\n 22107: fallthrough\n      : @719 [@dyn 328] (gas: 13)\n 22108: sp = sp + 0xffffffffffffff40\n 22112: u64 [sp + 0xb8] = ra\n 22116: u64 [sp + 0xb0] = s0\n 22120: u64 [sp + 0xa8] = s1\n 22124: s0 = sp + 0xc0\n 22128: sp = sp & 0xffffffffffffffe0\n 22131: u64 [sp + 152] = 0\n 22135: u64 [sp + 144] = 0\n 22139: u64 [sp + 136] = 0\n 22143: u64 [sp + 128] = 0x5\n 22148: a0 = sp + 0x60\n 22151: a1 = sp + 0x80\n 22155: ra = 658, jump @21\n      : @720 [@dyn 329] (gas: 11)\n 22161: a0 = u64 [sp + 0x68]\n 22164: u64 [sp + 0x18] = a0\n 22167: a0 = u64 [sp + 0x60]\n 22170: u64 [sp + 0x10] = a0\n 22173: a0 = u32 [sp + 0x70]\n 22176: u64 [sp + 0x8] = a0\n 22179: s1 = 0x300f0\n 22184: i32 a0 = s1 + 0\n 22186: u64 [sp] = a0\n 22188: ecalli 3 // 'caller'\n 22190: fallthrough\n      : @721 (gas: 22)\n 22191: a0 = u64 [0x300f8]\n 22196: a1 = u64 [0x300f0]\n 22201: a2 = i32 [0x30100]\n 22206: a0 = reverse a0\n 22208: a3 = a0 >> 0x20\n 22211: a1 = reverse a1\n 22213: a4 = a1 << 0x20\n 22216: a3 = a3 | a4\n 22219: a0 = a0 << 0x20\n 22222: a2 = reverse a2\n 22224: a2 = a2 >> 0x20\n 22227: a0 = a0 | a2\n 22230: a1 = a1 >> 0x20\n 22233: a2 = u64 [sp + 0x8]\n 22236: a1 = a1 ^ a2\n 22239: a2 = u64 [sp + 0x10]\n 22242: a0 = a0 ^ a2\n 22245: a0 = a0 | a1\n 22248: a1 = u64 [sp + 0x18]\n 22251: a1 = a1 ^ a3\n 22254: a0 = a0 | a1\n 22257: jump @723 if a0 != 0\n      : @722 (gas: 6)\n 22260: sp = s0 + 0xffffffffffffff40\n 22264: ra = u64 [sp + 0xb8]\n 22268: s0 = u64 [sp + 0xb0]\n 22272: s1 = u64 [sp + 0xa8]\n 22276: sp = sp + 0xc0\n 22280: ret\n      : @723 (gas: 8)\n 22282: u64 [sp + 80] = 0\n 22285: u64 [sp + 72] = 0\n 22288: u64 [sp + 64] = 0\n 22291: a0 = 0x118cdaa700000000\n 22301: a1 = sp + 0x40\n 22304: u64 [sp + 0x58] = a0\n 22307: a0 = 0\n 22309: ra = 660, jump @19\n      : @724 [@dyn 330] (gas: 4)\n 22315: a0 = u64 [sp]\n 22317: ra = 0x296\n 22321: ecalli 3 // 'caller'\n 22323: fallthrough\n      : @725 [@dyn 331] (gas: 4)\n 22324: a0 = u64 [s1 + 0x8]\n 22327: a1 = i32 [s1 + 0x10]\n 22330: a2 = u64 [s1]\n 22332: t0 = 664, jump @732\n      : @726 [@dyn 332] (gas: 7)\n 22337: u64 [sp + 56] = 0\n 22340: u64 [sp + 0x30] = a1\n 22343: u64 [sp + 0x28] = a0\n 22346: a0 = 0x4\n 22349: a1 = sp + 0x20\n 22352: u64 [sp + 0x20] = a3\n 22355: ra = 666, jump @19\n      : @727 [@dyn 333] (gas: 2)\n 22361: a1 = i32 [0x200e4]\n 22366: jump @729 if a1 >u 63\n      : @728 (gas: 2)\n 22370: u32 [0x200e4] = 0x40\n 22376: fallthrough\n      : @729 (gas: 8)\n 22377: a1 = 0x200f0\n 22382: i32 a1 = a1 + 0\n 22384: a0 = 0x1\n 22387: a2 = 0x24\n 22390: ecalli 7 // 'seal_return'\n 22392: a0 = 0\n 22394: ra = 0x29c\n 22398: jump @32\n      : @730 [export #0: 'call'] (gas: 2)\n 22401: a0 = 0\n 22403: ra = 668, jump @32\n      : @731 [@dyn 334] [export #1: 'deploy'] (gas: 2)\n 22409: a0 = 0x1\n 22412: ra = 670, jump @32\n      : @732 [@dyn 335] (gas: 11)\n 22418: a0 = reverse a0\n 22420: a3 = a0 << 0x20\n 22423: a1 = reverse a1\n 22425: a1 = a1 >> 0x20\n 22428: a3 = a3 | a1\n 22431: a0 = a0 >> 0x20\n 22434: a1 = reverse a2\n 22436: a2 = a1 << 0x20\n 22439: a0 = a0 | a2\n 22442: a1 = a1 >> 0x20\n 22445: jump [t0]\n      : @733 (gas: 22)\n 22447: a4 = u64 [s1 + 0x118]\n 22451: a2 = a4 <u 0x80\n 22455: a3 = u64 [s1 + 0xd0]\n 22459: a1 = a3 if a2 != 0\n 22462: a5 = u64 [s1 + 0xd8]\n 22466: a3 = u64 [s1 + 0xe8]\n 22470: a3 = a3 | a5\n 22473: a3 = a0 if a2 == 0\n 22476: a1 = 0xffffffffffffffff if a4 == 0\n 22479: a3 = 0xffffffffffffffff if a4 == 0\n 22482: a4 = u64 [s1 + 0xe0]\n 22486: a4 = 0 if a2 == 0\n 22488: a5 = 0 if a2 == 0\n 22490: a0 = u64 [s1 + 0xf8]\n 22494: a0 = a0 & ~a3\n 22497: a2 = u64 [s1 + 0x100]\n 22501: a1 = a2 & ~a1\n 22504: a2 = u64 [s1 + 0x108]\n 22508: a2 = a2 & ~a5\n 22511: a3 = u64 [s1 + 0x110]\n 22515: a3 = a3 & ~a4\n 22518: jump [t0]\n      : @734 (gas: 9)\n 22520: a0 = u64 [a3 + 0x18]\n 22523: a1 = u64 [a3 + 0x10]\n 22526: a2 = u64 [a3 + 0x8]\n 22529: a3 = u64 [a3]\n 22531: a0 = reverse a0\n 22533: a4 = reverse a1\n 22535: a2 = reverse a2\n 22537: a3 = reverse a3\n 22539: jump [t0]\n      : @735 (gas: 13)\n 22541: a4 = a0 << 0x3f\n 22544: a5 = a1 >> 0x1\n 22547: t1 = a5 | a4\n 22550: a5 = a3 << 0x3f\n 22553: a0 = a0 >> 0x1\n 22556: a0 = a0 | a5\n 22559: a1 = a1 << 0x3f\n 22562: a5 = a2 >> 0x1\n 22565: a1 = a1 | a5\n 22568: a3 = a3 >> 0x1\n 22571: a2 = a2 & 0x1\n 22574: a5 = -a2\n 22576: jump [t0]\n      : @736 (gas: 14)\n 22578: a0 = u64 [a2 + 0x8]\n 22581: a1 = i32 [a2 + 0x10]\n 22584: a2 = u64 [a2]\n 22586: a0 = reverse a0\n 22588: a3 = a0 << 0x20\n 22591: a1 = reverse a1\n 22593: a1 = a1 >> 0x20\n 22596: a1 = a1 | a3\n 22599: a0 = a0 >> 0x20\n 22602: a2 = reverse a2\n 22604: a3 = a2 << 0x20\n 22607: a0 = a0 | a3\n 22610: a2 = a2 >> 0x20\n 22613: jump [t0]\n      : @737 (gas: 10)\n 22615: a4 = 0 if a2 == 0\n 22617: a1 = u64 [s1 + 0xf8]\n 22621: a1 = a1 & ~a3\n 22624: a2 = u64 [s1 + 0x100]\n 22628: a0 = a2 & ~a0\n 22631: a2 = u64 [s1 + 0x108]\n 22635: a2 = a2 & ~a4\n 22638: a3 = u64 [s1 + 0x110]\n 22642: a3 = a3 & ~a5\n 22645: jump [t0]\n      : @738 (gas: 8)\n 22647: a3 = a3 | a2\n 22650: a2 = a0 | a1\n 22653: a2 = a2 | a3\n 22656: a2 = a2 >> 0x20\n 22659: a1 = a1 | a3\n 22662: a1 = a1 << 0x20\n 22665: a1 = a1 | a2\n 22668: jump [t0]\n      : @739 (gas: 10)\n 22670: a0 = u64 [sp + 0x10]\n 22673: a1 = u64 [sp + 0x18]\n 22676: a2 = 0x100000000\n 22686: a2 = a2 ^ a0\n 22689: a2 = a2 | a1\n 22692: a3 = a0 >> 0x20\n 22695: a3 = a3 <u 0x1\n 22698: a3 = 0 if a1 != 0\n 22700: a3 = 0 if a2 == 0\n 22702: jump [t0]\n      : @740 (gas: 8)\n 22704: a2 = a4 >u 0\n 22706: a1 = a1 ^ 0x1\n 22709: a1 = a2 if a4 != 0\n 22712: a2 = t2 >u 0\n 22714: a3 = a5 >u 0\n 22716: a3 = a2 if a5 == 0\n 22719: a3 = a1 if a0 == 0\n 22722: jump [t0]\n      : @741 (gas: 10)\n 22724: a0 = u64 [a3 + 0x18]\n 22727: a1 = u64 [a3 + 0x10]\n 22730: a2 = u64 [a3 + 0x8]\n 22733: a3 = u64 [a3]\n 22735: a0 = reverse a0\n 22737: a1 = reverse a1\n 22739: a2 = reverse a2\n 22741: a3 = reverse a3\n 22743: a4 = s1 + 0x300\n 22747: jump [t0]\n      : @742 (gas: 8)\n 22749: a2 = a1 | a5\n 22752: a0 = a0 | a3\n 22755: a2 = a2 | a0\n 22758: a2 = a2 >> 0x20\n 22761: a0 = a0 | a5\n 22764: a0 = a0 << 0x20\n 22767: a0 = a0 | a2\n 22770: jump [t0]\n      : @743 (gas: 10)\n 22772: u64 [s1 + 264] = 0\n 22776: a4 = 0\n 22778: ra = 0\n 22780: u64 [s1 + 248] = 0\n 22784: u64 [s1 + 256] = 0\n 22788: a3 = u64 [s1 + 0xe8]\n 22792: a0 = u64 [a3 + 0x18]\n 22795: a1 = u64 [a3 + 0x10]\n 22798: a2 = u64 [a3 + 0x8]\n 22801: jump [t0]\n      : @744 (gas: 12)\n 22803: a2 = u64 [sp]\n 22805: a3 = u64 [sp + 0x8]\n 22808: u64 [s1] = a2\n 22810: u64 [s1 + 0x8] = a3\n 22813: u64 [s1 + 0x10] = a0\n 22816: u64 [s1 + 0x18] = a1\n 22819: sp = s0 + 0xffffffffffffffc0\n 22822: ra = u64 [sp + 0x38]\n 22825: s0 = u64 [sp + 0x30]\n 22828: s1 = u64 [sp + 0x28]\n 22831: sp = sp + 0x40\n 22834: jump [t0]\n      : @745 (gas: 8)\n 22836: a4 = a4 | a2\n 22839: a2 = a0 | a1\n 22842: a2 = a2 | a4\n 22845: a2 = a2 >> 0x20\n 22848: a1 = a1 | a4\n 22851: a1 = a1 << 0x20\n 22854: a1 = a1 | a2\n 22857: jump [t0]\n      : @746 (gas: 7)\n 22859: a0 = a0 << 0x3b\n 22862: a1 = a0 >> 0x38\n 22865: u64 [s1 + 0x118] = a1\n 22869: a2 = 0x80 - a1\n 22873: a0 = 0xffffffffffffffff\n 22876: a1 = 0xffffffffffffffff\n 22879: jump [t0]\n      : @747 (gas: 10)\n 22881: u64 [s1 + 0xd8] = a0\n 22885: u64 [s1 + 0xe0] = a1\n 22889: a0 = u64 [s1 + 0xd0]\n 22893: a0 = a0 | a1\n 22896: u64 [s1 + 0xd0] = a0\n 22900: a0 = u64 [s1 + 0x118]\n 22904: a2 = a0 + 0xffffffffffffff80\n 22907: a0 = 0xffffffffffffffff\n 22910: a1 = 0xffffffffffffffff\n 22913: jump [t0]\n      : @748 (gas: 7)\n 22915: a3 = a3 | a5\n 22918: a3 = a1 if a2 == 0\n 22921: a1 = 0xffffffffffffffff\n 22924: a0 = a1 if a4 == 0\n 22927: a3 = a1 if a4 == 0\n 22930: a5 = 0 if a2 == 0\n 22932: jump [t0]\n      : @749 (gas: 9)\n 22934: sp = sp + 0xffffffffffffffc0\n 22937: u64 [sp + 0x38] = ra\n 22940: u64 [sp + 0x30] = s0\n 22943: u64 [sp + 0x28] = s1\n 22946: s0 = sp + 0x40\n 22949: sp = sp & 0xffffffffffffffe0\n 22952: s1 = a0\n 22954: i32 a0 = sp + 0\n 22956: jump [t0]\n      : @750 (gas: 4)\n 22958: a0 = 0x1078\n 22962: a3 = s1 + a0\n 22965: a4 = a3 + 0x200\n 22969: jump [t0]\n      : @751 (gas: 4)\n 22971: a0 = 0x1078\n 22975: a3 = s1 + a0\n 22978: a4 = a3 + 0x300\n 22982: jump [t0]\n      : @752 (gas: 4)\n 22984: a0 = 0x1078\n 22988: a3 = s1 + a0\n 22991: a4 = a3 + 0x100\n 22995: jump [t0]\n      : @753 (gas: 8)\n 22997: a0 = u64 [a2 + 0x8]\n 23000: a1 = i32 [a2 + 0x10]\n 23003: a2 = u64 [a2]\n 23005: a3 = reverse a0\n 23007: a0 = a3 << 0x20\n 23010: a1 = reverse a1\n 23012: a1 = a1 >> 0x20\n 23015: jump [t0]\n      : @754 (gas: 6)\n 23017: a0 = u64 [a3 + 0x18]\n 23020: a1 = u64 [a3 + 0x10]\n 23023: a2 = u64 [a3 + 0x8]\n 23026: a3 = u64 [a3]\n 23028: a0 = reverse a0\n 23030: jump [t0]\n      : @755 (gas: 8)\n 23032: a1 = sp + 0xffffffffffffffe0\n 23035: a1 = a1 & 0xffffffffffffffe0\n 23038: u64 [s1 + 0xe8] = a1\n 23042: sp = a1\n 23044: i32 a0 = a0 + 0\n 23046: i32 a2 = a1 + 0\n 23048: a1 = 0x20\n 23051: jump [t0]\n      : @756 (gas: 8)\n 23053: a0 = a0 + a4\n 23056: a3 = a3 + a1\n 23059: a5 = a3 <u a1\n 23062: a0 = a0 + a5\n 23065: ra = u64 [s1 + 0xe0]\n 23069: ra = ra + a3\n 23072: a3 = ra <u a3\n 23075: jump [t0]\n      : @757 (gas: 8)\n 23077: a0 = u64 [a4 + 0x18]\n 23080: a1 = u64 [a4 + 0x20]\n 23083: a2 = u64 [a4 + 0x10]\n 23086: a3 = u64 [a4 + 0x8]\n 23089: a1 = a1 | a2\n 23092: a0 = a0 | a3\n 23095: a0 = a0 | a1\n 23098: jump [t0]\n      : @758 (gas: 6)\n 23100: a1 = a3 << 0x3\n 23103: u64 [s1 + 0x118] = a1\n 23107: i32 a2 = 0x80 - a1\n 23111: a0 = 0xffffffffffffffff\n 23114: a1 = 0xffffffffffffffff\n 23117: jump [t0]\n      : @759 (gas: 2)\n 23119: a3 = a2 & 0x40\n 23122: jump @763 if a3 != 0\n      : @760 (gas: 1)\n 23125: jump @762 if a2 == 0\n      : @761 (gas: 6)\n 23128: i32 a3 = 0x40 - a2\n 23131: a3 = a1 << a3\n 23134: a1 = a1 >> a2\n 23137: a0 = a0 >> a2\n 23140: a0 = a0 | a3\n 23143: ret\n      : @762 (gas: 1)\n 23145: ret\n      : @763 (gas: 4)\n 23147: a0 = a2 + 0xffffffffffffffc0\n 23150: a0 = a1 >> a0\n 23153: a1 = 0\n 23155: ret\n      : @764 (gas: 2)\n 23157: a3 = a2 & 0x40\n 23160: jump @768 if a3 != 0\n      : @765 (gas: 1)\n 23163: jump @767 if a2 == 0\n      : @766 (gas: 6)\n 23166: i32 a3 = 0x40 - a2\n 23169: a3 = a0 >> a3\n 23172: a0 = a0 << a2\n 23175: a1 = a1 << a2\n 23178: a1 = a1 | a3\n 23181: ret\n      : @767 (gas: 1)\n 23183: ret\n      : @768 (gas: 4)\n 23185: a1 = a2 + 0xffffffffffffffc0\n 23188: a1 = a0 << a1\n 23191: a0 = 0\n 23193: ret\n",
            "bytecode": {
              "object": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "irOptimized": "/// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 1:\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\", 2:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 3:\"@openzeppelin/contracts/token/ERC20/IERC20.sol\", 4:\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 5:\"@openzeppelin/contracts/utils/Context.sol\", 7:\"contracts/MyToken.sol\"\nobject \"MockERC20_1387\" {\n    code {\n        {\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            mstore(64, memoryguard(0x80))\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"MockERC20_1387\")\n            let argSize := sub(codesize(), programSize)\n            let memoryDataOffset := allocate_memory(argSize)\n            codecopy(memoryDataOffset, programSize, argSize)\n            let _1 := add(memoryDataOffset, argSize)\n            if slt(sub(_1, memoryDataOffset), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let offset := mload(memoryDataOffset)\n            if gt(offset, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n            let offset_1 := mload(add(memoryDataOffset, 32))\n            if gt(offset_1, sub(shl(64, 1), 1))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n            let newLen := mload(value0)\n            if gt(newLen, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x24)\n            }\n            let _2 := sload(/** @src 2:1648:1661  \"_name = name_\" */ 0x03)\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let length := /** @src -1:-1:-1 */ 0\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            length := shr(1, _2)\n            let outOfPlaceEncoding := and(_2, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x24)\n            }\n            if gt(length, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:1648:1661  \"_name = name_\" */ 0x03)\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 32)\n                let deleteStart := add(data, shr(5, add(newLen, 31)))\n                if lt(newLen, 32) { deleteStart := data }\n                let _3 := add(data, shr(5, add(length, 31)))\n                let start := deleteStart\n                for { } lt(start, _3) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let srcOffset := /** @src -1:-1:-1 */ 0\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            srcOffset := 32\n            switch gt(newLen, 31)\n            case 1 {\n                let loopEnd := and(newLen, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:1648:1661  \"_name = name_\" */ 0x03)\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ srcOffset)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                for { } lt(i, loopEnd) { i := add(i, 32) }\n                {\n                    sstore(dstPtr, mload(add(value0, srcOffset)))\n                    dstPtr := add(dstPtr, 1)\n                    srcOffset := add(srcOffset, 32)\n                }\n                if lt(loopEnd, newLen)\n                {\n                    let lastValue := mload(add(value0, srcOffset))\n                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 2:1648:1661  \"_name = name_\" */ 0x03, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ newLen), 248), not(0)))))\n                }\n                sstore(/** @src 2:1648:1661  \"_name = name_\" */ 0x03, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ add(shl(1, newLen), 1))\n            }\n            default {\n                let value := /** @src -1:-1:-1 */ 0\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                if newLen\n                {\n                    value := mload(add(value0, srcOffset))\n                }\n                sstore(/** @src 2:1648:1661  \"_name = name_\" */ 0x03, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ or(and(value, not(shr(shl(/** @src 2:1648:1661  \"_name = name_\" */ 0x03, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ newLen), not(0)))), shl(1, newLen)))\n            }\n            let newLen_1 := mload(value1)\n            if gt(newLen_1, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x24)\n            }\n            let _4 := sload(/** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04)\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let length_1 := /** @src -1:-1:-1 */ 0\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            length_1 := shr(1, _4)\n            let outOfPlaceEncoding_1 := and(_4, 1)\n            if iszero(outOfPlaceEncoding_1)\n            {\n                length_1 := and(length_1, 0x7f)\n            }\n            if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x22)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x24)\n            }\n            if gt(length_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 32)\n                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, 31)))\n                if lt(newLen_1, 32) { deleteStart_1 := data_1 }\n                let _5 := add(data_1, shr(5, add(length_1, 31)))\n                let start_1 := deleteStart_1\n                for { } lt(start_1, _5) { start_1 := add(start_1, 1) }\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            srcOffset_1 := 32\n            switch gt(newLen_1, 31)\n            case 1 {\n                let loopEnd_1 := and(newLen_1, not(31))\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04)\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ srcOffset_1)\n                let i_1 := /** @src -1:-1:-1 */ 0\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                {\n                    sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                    dstPtr_1 := add(dstPtr_1, 1)\n                    srcOffset_1 := add(srcOffset_1, 32)\n                }\n                if lt(loopEnd_1, newLen_1)\n                {\n                    let lastValue_1 := mload(add(value1, srcOffset_1))\n                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 2:1648:1661  \"_name = name_\" */ 0x03, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ newLen_1), 248), not(0)))))\n                }\n                sstore(/** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ add(shl(1, newLen_1), 1))\n            }\n            default {\n                let value_1 := /** @src -1:-1:-1 */ 0\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                if newLen_1\n                {\n                    value_1 := mload(add(value1, srcOffset_1))\n                }\n                sstore(/** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ or(and(value_1, not(shr(shl(/** @src 2:1648:1661  \"_name = name_\" */ 0x03, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ newLen_1), not(0)))), shl(1, newLen_1)))\n            }\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            if /** @src 0:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 7:211:221  \"msg.sender\" */ caller())\n            /// @src 0:1269:1364  \"if (initialOwner == address(0)) {...\"\n            {\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                mstore(/** @src 2:1671:1688  \"_symbol = symbol_\" */ 0x04, /** @src -1:-1:-1 */ 0)\n                /// @src 0:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 36)\n            }\n            let _6 := sload(/** @src 0:3004:3010  \"_owner\" */ 0x05)\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            sstore(/** @src 0:3004:3010  \"_owner\" */ 0x05, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ or(and(_6, not(sub(shl(160, 1), 1))), /** @src 7:211:221  \"msg.sender\" */ caller()))\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            let _7 := /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ mload(64)\n            /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(_6, sub(shl(160, 1), 1)), /** @src 7:211:221  \"msg.sender\" */ caller())\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            let _8 := datasize(\"MockERC20_1387_deployed\")\n            codecopy(_7, dataoffset(\"MockERC20_1387_deployed\"), _8)\n            return(_7, _8)\n        }\n        function allocate_memory(size) -> memPtr\n        {\n            memPtr := mload(64)\n            let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n        }\n        function abi_decode_string_fromMemory(offset, end) -> array\n        {\n            if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n            let length := mload(offset)\n            if gt(length, sub(shl(64, 1), 1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x24)\n            }\n            let array_1 := allocate_memory(add(and(add(length, 0x1f), not(31)), 0x20))\n            mstore(array_1, length)\n            if gt(add(add(offset, length), 0x20), end)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            mcopy(add(array_1, 0x20), add(offset, 0x20), length)\n            mstore(add(add(array_1, length), 0x20), /** @src -1:-1:-1 */ 0)\n            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n            array := array_1\n        }\n    }\n    /// @use-src 0:\"@openzeppelin/contracts/access/Ownable.sol\", 2:\"@openzeppelin/contracts/token/ERC20/ERC20.sol\", 5:\"@openzeppelin/contracts/utils/Context.sol\", 7:\"contracts/MyToken.sol\"\n    object \"MockERC20_1387_deployed\" {\n        code {\n            {\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret := 0\n                        let slotValue := sload(/** @src 2:1837:1842  \"_name\" */ 0x03)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let length := 0\n                        length := shr(1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(_1, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(_1, 32), and(slotValue, not(255)))\n                            ret := add(add(_1, shl(5, iszero(iszero(length)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 2:1837:1842  \"_name\" */ 0x03)\n                            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, 32) }\n                            {\n                                mstore(add(add(_1, i), 32), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(_1, i), 32)\n                        }\n                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address_3834()\n                        let value := calldataload(36)\n                        /// @src 2:9790:9879  \"if (owner == address(0)) {...\"\n                        if /** @src 2:9794:9813  \"owner == address(0)\" */ iszero(/** @src 5:735:745  \"msg.sender\" */ caller())\n                        /// @src 2:9790:9879  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 2:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            mstore(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            mstore(4, 0)\n                            /// @src 2:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                            revert(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 36)\n                        }\n                        let _2 := and(/** @src 2:9892:9913  \"spender == address(0)\" */ value0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                        /// @src 2:9888:9978  \"if (spender == address(0)) {...\"\n                        if /** @src 2:9892:9913  \"spender == address(0)\" */ iszero(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _2)\n                        /// @src 2:9888:9978  \"if (spender == address(0)) {...\"\n                        {\n                            /// @src 2:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            mstore(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            mstore(4, 0)\n                            /// @src 2:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                            revert(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 36)\n                        }\n                        mstore(0, /** @src 5:735:745  \"msg.sender\" */ caller())\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        mstore(32, 1)\n                        let dataSlot := keccak256(0, 64)\n                        /// @src 2:9987:10014  \"_allowances[owner][spender]\"\n                        let dataSlot_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _2)\n                        mstore(0x20, /** @src 2:9987:10005  \"_allowances[owner]\" */ dataSlot)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40)\n                        sstore(/** @src 2:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_1, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ value)\n                        /// @src 2:10066:10097  \"Approval(owner, spender, value)\"\n                        let _3 := /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ mload(64)\n                        mstore(_3, value)\n                        /// @src 2:10066:10097  \"Approval(owner, spender, value)\"\n                        log3(_3, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 32, /** @src 2:10066:10097  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 5:735:745  \"msg.sender\" */ caller(), /** @src 2:10066:10097  \"Approval(owner, spender, value)\" */ _2)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, 1)\n                        return(memPos, 32)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _4 := sload(/** @src 2:2908:2920  \"_totalSupply\" */ 0x02)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _4)\n                        return(memPos_1, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address_3834()\n                        let value1 := abi_decode_address()\n                        let value_1 := calldataload(68)\n                        let _5 := and(value0_1, sub(shl(160, 1), 1))\n                        mstore(0, _5)\n                        mstore(32, 1)\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 2:3638:3665  \"_allowances[owner][spender]\"\n                        let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(/** @src 5:735:745  \"msg.sender\" */ caller(), /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 2:3638:3656  \"_allowances[owner]\" */ dataSlot_2)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40)\n                        let _6 := sload(/** @src 2:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_3)\n                        /// @src 2:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                        if /** @src 2:10561:10597  \"currentAllowance < type(uint256).max\" */ lt(_6, /** @src 2:10580:10597  \"type(uint256).max\" */ not(0))\n                        /// @src 2:10557:10866  \"if (currentAllowance < type(uint256).max) {...\"\n                        {\n                            /// @src 2:10613:10743  \"if (currentAllowance < value) {...\"\n                            if /** @src 2:10617:10641  \"currentAllowance < value\" */ lt(_6, value_1)\n                            /// @src 2:10613:10743  \"if (currentAllowance < value) {...\"\n                            {\n                                /// @src 2:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                mstore(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ shl(225, 0x7dc7a0d9))\n                                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                                mstore(4, /** @src 5:735:745  \"msg.sender\" */ caller())\n                                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                                mstore(36, _6)\n                                mstore(68, value_1)\n                                /// @src 2:10668:10728  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                revert(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 100)\n                            }\n                            /// @src 2:9790:9879  \"if (owner == address(0)) {...\"\n                            if /** @src 2:9794:9813  \"owner == address(0)\" */ iszero(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _5)\n                            /// @src 2:9790:9879  \"if (owner == address(0)) {...\"\n                            {\n                                /// @src 2:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                                mstore(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:9836:9868  \"ERC20InvalidApprover(address(0))\" */ shl(224, 0xe602df05))\n                                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                                mstore(4, 0)\n                                /// @src 2:9836:9868  \"ERC20InvalidApprover(address(0))\"\n                                revert(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 36)\n                            }\n                            /// @src 2:9888:9978  \"if (spender == address(0)) {...\"\n                            if /** @src 2:9892:9913  \"spender == address(0)\" */ iszero(/** @src 5:735:745  \"msg.sender\" */ caller())\n                            /// @src 2:9888:9978  \"if (spender == address(0)) {...\"\n                            {\n                                /// @src 2:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                                mstore(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:9936:9967  \"ERC20InvalidSpender(address(0))\" */ shl(225, 0x4a1406b1))\n                                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                                mstore(4, 0)\n                                /// @src 2:9936:9967  \"ERC20InvalidSpender(address(0))\"\n                                revert(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 36)\n                            }\n                            mstore(0, _5)\n                            mstore(32, 1)\n                            let dataSlot_4 := keccak256(0, 64)\n                            /// @src 2:9987:10014  \"_allowances[owner][spender]\"\n                            let dataSlot_5 := /** @src -1:-1:-1 */ 0\n                            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(/** @src 5:735:745  \"msg.sender\" */ caller(), /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 2:9987:10005  \"_allowances[owner]\" */ dataSlot_4)\n                            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            dataSlot_5 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40)\n                            sstore(/** @src 2:9987:10014  \"_allowances[owner][spender]\" */ dataSlot_5, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(/** @src 2:10809:10833  \"currentAllowance - value\" */ _6, value_1))\n                        }\n                        /// @src 2:4967:4972  \"value\"\n                        fun_transfer(value0_1, value1, value_1)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, 1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, /** @src 2:2761:2763  \"18\" */ 0x12)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        return(memPos_3, 32)\n                    }\n                    case 0x40c10f19 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address_3834()\n                        let value_2 := calldataload(36)\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let _7 := and(/** @src 2:7509:7530  \"account == address(0)\" */ value0_2, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                        /// @src 2:7509:7530  \"account == address(0)\"\n                        let _8 := iszero(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _7)\n                        /// @src 2:7505:7596  \"if (account == address(0)) {...\"\n                        if /** @src 2:7509:7530  \"account == address(0)\" */ _8\n                        /// @src 2:7505:7596  \"if (account == address(0)) {...\"\n                        {\n                            /// @src 2:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            mstore(4, 0)\n                            /// @src 2:7553:7585  \"ERC20InvalidReceiver(address(0))\"\n                            revert(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 36)\n                        }\n                        let _9 := sload(/** @src 2:6214:6235  \"_totalSupply += value\" */ 0x02)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let sum := add(_9, value_2)\n                        if gt(_9, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(/** @src 2:6214:6235  \"_totalSupply += value\" */ 0x02, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sum)\n                        /// @src 2:6624:7049  \"if (to == address(0)) {...\"\n                        _8 := /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0\n                        mstore(0, _7)\n                        mstore(0x20, 0)\n                        let dataSlot_6 := keccak256(0, 64)\n                        sstore(dataSlot_6, add(sload(/** @src 2:7002:7024  \"_balances[to] += value\" */ dataSlot_6), /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ value_2))\n                        /// @src 2:7064:7089  \"Transfer(from, to, value)\"\n                        let _10 := /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ mload(64)\n                        mstore(_10, value_2)\n                        /// @src 2:7064:7089  \"Transfer(from, to, value)\"\n                        log3(_10, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 32, /** @src 2:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 2:7064:7089  \"Transfer(from, to, value)\" */ _7)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        return(0, 0)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address_3834(), sub(shl(160, 1), 1)))\n                        mstore(32, 0)\n                        let _11 := sload(keccak256(0, 64))\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _11)\n                        return(memPos_4, 32)\n                    }\n                    case 0x715018a6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let _12 := sload(/** @src 0:3004:3010  \"_owner\" */ 0x05)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        sstore(/** @src 0:3004:3010  \"_owner\" */ 0x05, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(_12, shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(_12, sub(shl(160, 1), 1)), 0)\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_3 := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x05), /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, value_3)\n                        return(memPos_5, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr := mload(64)\n                        let ret_1 := 0\n                        let slotValue_1 := sload(4)\n                        let length_1 := 0\n                        length_1 := shr(1, slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_1 := and(length_1, 0x7f)\n                        }\n                        if eq(outOfPlaceEncoding_1, lt(length_1, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr, length_1)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr, 32), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, 4)\n                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                            let i_1 := 0\n                            for { } lt(i_1, length_1) { i_1 := add(i_1, 32) }\n                            {\n                                mstore(add(add(memPtr, i_1), 32), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, 1)\n                            }\n                            ret_1 := add(add(memPtr, i_1), 32)\n                        }\n                        let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr_1)\n                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_3 := abi_decode_address_3834()\n                        /// @src 2:3440:3445  \"value\"\n                        fun_transfer(/** @src 5:735:745  \"msg.sender\" */ caller(), /** @src 2:3440:3445  \"value\" */ value0_3, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ calldataload(36))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, 1)\n                        return(memPos_6, 32)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_4 := abi_decode_address_3834()\n                        let value1_1 := abi_decode_address()\n                        mstore(0, and(value0_4, sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 2:3638:3649  \"_allowances\" */ 0x01)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        /// @src 2:3638:3665  \"_allowances[owner][spender]\"\n                        let dataSlot_8 := /** @src -1:-1:-1 */ 0\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(value1_1, sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 2:3638:3656  \"_allowances[owner]\" */ dataSlot_7)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        dataSlot_8 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40)\n                        let _13 := sload(/** @src 2:3638:3665  \"_allowances[owner][spender]\" */ dataSlot_8)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, _13)\n                        return(memPos_7, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_5 := abi_decode_address_3834()\n                        /// @src 0:1500:1562  \"modifier onlyOwner() {...\"\n                        fun_checkOwner()\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        let _14 := and(/** @src 0:2627:2649  \"newOwner == address(0)\" */ value0_5, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        if /** @src 0:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _14)\n                        /// @src 0:2623:2714  \"if (newOwner == address(0)) {...\"\n                        {\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            mstore(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, /** @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\" */ shl(224, 0x1e4fbdf7))\n                            /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                            mstore(4, 0)\n                            /// @src 0:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                            revert(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 36)\n                        }\n                        let _15 := sload(/** @src 0:3004:3010  \"_owner\" */ 0x05)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        sstore(/** @src 0:3004:3010  \"_owner\" */ 0x05, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ or(and(_15, shl(160, 0xffffffffffffffffffffffff)), _14))\n                        /// @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                        log3(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0, 0, /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ and(_15, sub(shl(160, 1), 1)), /** @src 0:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _14)\n                        /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address_3834() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            /// @ast-id 529 @src 2:5374:5674  \"function _transfer(address from, address to, uint256 value) internal {...\"\n            function fun_transfer(var_from, var_to, var_value)\n            {\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let _1 := and(/** @src 2:5457:5475  \"from == address(0)\" */ var_from, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                /// @src 2:5457:5475  \"from == address(0)\"\n                let _2 := iszero(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _1)\n                /// @src 2:5453:5539  \"if (from == address(0)) {...\"\n                if /** @src 2:5457:5475  \"from == address(0)\" */ _2\n                /// @src 2:5453:5539  \"if (from == address(0)) {...\"\n                {\n                    /// @src 2:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    mstore(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 2:5498:5528  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                    /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                    mstore(/** @src 2:5498:5528  \"ERC20InvalidSender(address(0))\" */ 4, /** @src 2:5473:5474  \"0\" */ 0x00)\n                    /// @src 2:5498:5528  \"ERC20InvalidSender(address(0))\"\n                    revert(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 36)\n                }\n                let _3 := and(/** @src 2:5552:5568  \"to == address(0)\" */ var_to, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                /// @src 2:5552:5568  \"to == address(0)\"\n                let _4 := iszero(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _3)\n                /// @src 2:5548:5634  \"if (to == address(0)) {...\"\n                if /** @src 2:5552:5568  \"to == address(0)\" */ _4\n                /// @src 2:5548:5634  \"if (to == address(0)) {...\"\n                {\n                    /// @src 2:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    mstore(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 2:7553:7585  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                    /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                    mstore(/** @src 2:5591:5623  \"ERC20InvalidReceiver(address(0))\" */ 4, /** @src 2:5473:5474  \"0\" */ 0x00)\n                    /// @src 2:5591:5623  \"ERC20InvalidReceiver(address(0))\"\n                    revert(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 36)\n                }\n                /// @src 2:6074:6614  \"if (from == address(0)) {...\"\n                _2 := /** @src 2:5473:5474  \"0\" */ 0x00\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                mstore(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _1)\n                mstore(0x20, /** @src 2:5473:5474  \"0\" */ 0x00)\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let _5 := sload(keccak256(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40))\n                /// @src 2:6317:6432  \"if (fromBalance < value) {...\"\n                if /** @src 2:6321:6340  \"fromBalance < value\" */ lt(_5, var_value)\n                /// @src 2:6317:6432  \"if (fromBalance < value) {...\"\n                {\n                    /// @src 2:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    mstore(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 2:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ shl(226, 0x391434e3))\n                    /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                    mstore(/** @src 2:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ 4, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _1)\n                    mstore(36, _5)\n                    mstore(68, var_value)\n                    /// @src 2:6367:6417  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                    revert(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 100)\n                }\n                mstore(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _1)\n                mstore(0x20, /** @src 2:5473:5474  \"0\" */ 0x00)\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                sstore(keccak256(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40), sub(/** @src 2:6570:6589  \"fromBalance - value\" */ _5, var_value))\n                /// @src 2:6624:7049  \"if (to == address(0)) {...\"\n                _4 := /** @src 2:5473:5474  \"0\" */ 0x00\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                mstore(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ _3)\n                mstore(0x20, /** @src 2:5473:5474  \"0\" */ 0x00)\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let dataSlot := keccak256(/** @src 2:5473:5474  \"0\" */ 0x00, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 0x40)\n                sstore(dataSlot, add(sload(/** @src 2:7002:7024  \"_balances[to] += value\" */ dataSlot), /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ var_value))\n                /// @src 2:7064:7089  \"Transfer(from, to, value)\"\n                let _6 := /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ mload(64)\n                mstore(_6, var_value)\n                /// @src 2:7064:7089  \"Transfer(from, to, value)\"\n                log3(_6, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 32, /** @src 2:7064:7089  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _1, _3)\n            }\n            /// @ast-id 84 @src 0:1796:1958  \"function _checkOwner() internal view virtual {...\"\n            function fun_checkOwner()\n            {\n                /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                let value := and(sload(/** @src 0:1710:1716  \"_owner\" */ 0x05), /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ sub(shl(160, 1), 1))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                if /** @src 0:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ value, /** @src 5:735:745  \"msg.sender\" */ caller()))\n                /// @src 0:1851:1952  \"if (owner() != _msgSender()) {...\"\n                {\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ shl(224, 0x118cdaa7))\n                    /// @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\"\n                    mstore(/** @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ 4, /** @src 5:735:745  \"msg.sender\" */ caller())\n                    /// @src 0:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 7:174:414  \"contract MockERC20 is ERC20, Ownable(msg.sender) {...\" */ 36)\n                }\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212200ea07b772c9393210d5eac5573497526407f332a385ac67c8cab24f40898fd1464736f6c634300081a0033\"\n    }\n}\n",
          "hash": "afe781a1147f9f5ea7507feebccfcd3a3f4295ad11fa528075108a166c2cd6a1",
          "factoryDependencies": {}
        }
      }
    }
  }
}